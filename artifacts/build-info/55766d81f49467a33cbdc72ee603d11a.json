{"id":"55766d81f49467a33cbdc72ee603d11a","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/CATFactory.sol":{"content":"// SPDX-License-Identifier: AEL\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./ContributionAccountingToken.sol\"; // Ensure this import points to your CAT contract file\n\ncontract CATFactory is Ownable {\n    // Tracking the next tokenId (no Counters library, just a simple uint)\n    uint256 private _nextTokenId;\n\n    // Mapping from owner address to token addresses\n    mapping(address => address[]) public administerableTokens; // Now public\n    mapping(address => address[]) public mintableTokens; // Now public\n\n    // Event emitted when a new CAT is created\n    event CATCreated(address indexed owner, address catAddress, uint256 tokenId);\n\n    constructor() Ownable(msg.sender) {}\n\n    /**\n     * @dev Creates a new CAT contract and assigns it to the caller.\n     * @param maxSupply The maximum supply for the new CAT.\n     * @param thresholdSupply The threshold supply for the new CAT.\n     * @param maxExpansionRate The maximum expansion rate for the new CAT.\n     * @param name The name of the CAT token.\n     * @param symbol The symbol of the CAT token.\n     * @return The address of the newly created CAT contract.\n     */\n    function createCAT(\n        uint256 maxSupply,\n        uint256 thresholdSupply,\n        uint256 maxExpansionRate,\n        string memory name,\n        string memory symbol\n    ) public returns (address) {\n        uint256 newTokenId = _nextTokenId;\n        _nextTokenId++; // Increment tokenId for the next contract\n\n        ContributionAccountingToken newCAT = new ContributionAccountingToken(\n            msg.sender,\n            maxSupply,\n            thresholdSupply,\n            maxExpansionRate,\n            name,\n            symbol\n        );\n\n        address catAddress = address(newCAT);\n        administerableTokens[msg.sender].push(catAddress);\n\n        emit CATCreated(msg.sender, catAddress, newTokenId);\n\n        return catAddress;\n    }\n\n    /**\n     * @dev Grants minter role to an address in the CAT contract.\n     * @param catAddress The address of the CAT contract.\n     * @param minter The address to grant the minter role.\n     */\n    function grantMinterRole(address catAddress, address minter) public onlyOwner {\n        ContributionAccountingToken(catAddress).grantMinterRole(minter);\n        mintableTokens[minter].push(catAddress); // Update mintable tokens mapping\n    }\n\n    /**\n     * @dev Returns the total number of CATs created.\n     * @return The total number of CATs.\n     */\n    function totalCATs() public view returns (uint256) {\n        return _nextTokenId - 1; // Subtract 1 because the counter starts from 1\n    }\n}\n"},"contracts/ContributionAccountingToken.sol":{"content":"// SPDX-License-Identifier: AEL\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ContributionAccountingToken is ERC20, ERC20Permit, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = DEFAULT_ADMIN_ROLE;\n    \n    uint256 public maxSupply;\n    uint256 public thresholdSupply;\n    uint256 public maxExpansionRate;\n    bool public transferRestricted = true;\n    uint256 public constant clowderFee = 500; // 0.5% fee\n    address public immutable clowderTreasury = 0x355e559BCA86346B82D58be0460d661DB481E05e; // Address to receive minting fees\n    \n    uint256 public lastMintTimestamp;\n    string public tokenName; // Token name\n    string public tokenSymbol; // Token symbol\n\n    // Constant denominator for fee calculations\n    uint256 constant denominator = 100000;\n\n    constructor(\n        address defaultAdmin,\n        uint256 _maxSupply,\n        uint256 _thresholdSupply,\n        uint256 _maxExpansionRate,\n        string memory _name,\n        string memory _symbol\n    ) ERC20(_name, _symbol) ERC20Permit(_name) {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(MINTER_ROLE, defaultAdmin);\n        \n        maxSupply = _maxSupply;\n        thresholdSupply = _thresholdSupply;\n        maxExpansionRate = _maxExpansionRate;\n        tokenName = _name;\n        tokenSymbol = _symbol;\n        lastMintTimestamp = block.timestamp;\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        uint256 currentSupply = totalSupply();\n        \n        // Minting fee calculation\n        uint256 feeAmount = (amount * clowderFee) / denominator;\n        \n        // Perform the actual minting\n        _mint(to, amount);\n        _mint(clowderTreasury, feeAmount);\n        lastMintTimestamp = block.timestamp;\n\n        // Require statements moved after fee calculation and minting\n        require(currentSupply + amount + feeAmount <= maxSupply, \"Exceeds maximum supply\");\n\n        if (currentSupply >= thresholdSupply) {\n            uint256 elapsedTime = block.timestamp - lastMintTimestamp;\n            uint256 maxMintableAmount = (currentSupply * maxExpansionRate * elapsedTime) / (365 days * 100);\n            require(amount + feeAmount <= maxMintableAmount, \"Exceeds maximum expansion rate\");\n        }\n    }\n\n    function reduceMaxSupply(uint256 newMaxSupply) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newMaxSupply < maxSupply, \"New max supply must be less than current max supply\");\n        maxSupply = newMaxSupply;\n    }\n\n    function reduceThresholdSupply(uint256 newThresholdSupply) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newThresholdSupply < thresholdSupply, \"New threshold supply must be less than current threshold supply\");\n        thresholdSupply = newThresholdSupply;\n    }\n\n    function reduceMaxExpansionRate(uint256 newMaxExpansionRate) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newMaxExpansionRate < maxExpansionRate, \"New max expansion rate must be less than current max expansion rate\");\n        maxExpansionRate = newMaxExpansionRate;\n    }\n\n    function disableTransferRestriction() public onlyRole(DEFAULT_ADMIN_ROLE) {\n        transferRestricted = false;\n    }\n\n    function _update(address from, address to, uint256 amount) internal override {\n        if (transferRestricted) {\n            require(from == address(0) || to == address(0) || balanceOf(to) > 0, \"Transfer restricted to existing token holders\");\n        }\n        super._update(from, to, amount);\n    }\n\n    function grantMinterRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(MINTER_ROLE, account);\n    }\n\n    function revokeMinterRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(MINTER_ROLE, account);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1527],"ERC165":[2981],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1528,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2982,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,2981,2993,378,1527],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2980],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2980,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1527],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":1528,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,1527],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[551]},"id":552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":551,"linearizedBaseContracts":[551],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":531,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":550,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":550,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":534,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":550,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":536,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":550,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":538,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":550,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":550,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":550,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":550,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":551,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":552,"src":"133:605:3","usedErrors":[],"usedEvents":[531]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[688],"IERC20Errors":[593],"IERC721Errors":[641]},"id":689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":593,"linearizedBaseContracts":[593],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":563,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":563,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":563,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":563,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":568,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":568,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":573,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":573,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":582,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":582,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":582,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":582,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":587,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":587,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":592,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":592,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":689,"src":"280:1764:4","usedErrors":[563,568,573,582,587,592],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":641,"linearizedBaseContracts":[641],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":599,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":599,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":604,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":604,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":613,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":613,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":613,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":613,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":618,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":618,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":623,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":623,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":630,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":630,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":630,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":635,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":635,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":640,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":640,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":689,"src":"2190:2092:4","usedErrors":[599,604,613,618,623,630,635,640],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":688,"linearizedBaseContracts":[688],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":653,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":658,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":658,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":663,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":663,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":670,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":670,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":670,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":675,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":675,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":680,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":680,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":687,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":687,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":687,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":689,"src":"4430:2107:4","usedErrors":[653,658,663,670,675,680,687],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1527],"ERC20":[1203],"IERC20":[1281],"IERC20Errors":[593],"IERC20Metadata":[1461]},"id":1204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1282,"src":"131:36:5","symbolAliases":[{"foreign":{"id":691,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1462,"src":"168:63:5","symbolAliases":[{"foreign":{"id":693,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1528,"src":"232:48:5","symbolAliases":[{"foreign":{"id":695,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":689,"src":"281:65:5","symbolAliases":[{"foreign":{"id":697,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":700,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"1133:7:5"},"id":701,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":702,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1281,"src":"1142:6:5"},"id":703,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":704,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1461,"src":"1150:14:5"},"id":705,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":706,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":593,"src":"1166:12:5"},"id":707,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1203,"linearizedBaseContracts":[1203,593,1461,1281,1527],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":711,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":1203,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":710,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":717,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":1203,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":716,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":715,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":719,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":1203,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":721,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":1203,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":720,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":723,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":1203,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":722,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":739,"nodeType":"Block","src":"1657:57:5","statements":[{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":731,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":732,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1675:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":734,"nodeType":"ExpressionStatement","src":"1667:13:5"},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":735,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1690:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":736,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1700:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":738,"nodeType":"ExpressionStatement","src":"1690:17:5"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"1425:171:5","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":740,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"name_","nameLocation":"1627:5:5","nodeType":"VariableDeclaration","scope":740,"src":"1613:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":725,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:5","nodeType":"VariableDeclaration","scope":740,"src":"1634:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":727,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:5"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"1657:0:5"},"scope":1203,"src":"1601:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1448],"body":{"id":748,"nodeType":"Block","src":"1839:29:5","statements":[{"expression":{"id":746,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1856:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":745,"id":747,"nodeType":"Return","src":"1849:12:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1720:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":749,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:5","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"1792:2:5"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"1824:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":743,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:5"},"scope":1203,"src":"1779:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1454],"body":{"id":757,"nodeType":"Block","src":"2043:31:5","statements":[{"expression":{"id":755,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"2060:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":754,"id":756,"nodeType":"Return","src":"2053:14:5"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1874:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"1996:2:5"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"2028:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":752,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:5"},"scope":1203,"src":"1981:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1460],"body":{"id":766,"nodeType":"Block","src":"2763:26:5","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"2773:9:5"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"2080:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:5","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"2724:2:5"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"2756:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:5"},"scope":1203,"src":"2707:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1230],"body":{"id":775,"nodeType":"Block","src":"2910:36:5","statements":[{"expression":{"id":773,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2927:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":774,"nodeType":"Return","src":"2920:19:5"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"2795:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":776,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:5","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"2869:2:5"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2901:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:5"},"scope":1203,"src":"2849:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1238],"body":{"id":788,"nodeType":"Block","src":"3078:42:5","statements":[{"expression":{"baseExpression":{"id":784,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3095:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":786,"indexExpression":{"id":785,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3105:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":783,"id":787,"nodeType":"Return","src":"3088:25:5"}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"2952:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":789,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:5","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"account","nameLocation":"3031:7:5","nodeType":"VariableDeclaration","scope":789,"src":"3023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:5"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"3069:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:5"},"scope":1203,"src":"3004:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1248],"body":{"id":812,"nodeType":"Block","src":"3390:103:5","statements":[{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"owner","nameLocation":"3408:5:5","nodeType":"VariableDeclaration","scope":812,"src":"3400:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":803,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":801,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"3416:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:5"},{"expression":{"arguments":[{"id":805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"3448:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3455:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":804,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"3438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"ExpressionStatement","src":"3438:27:5"},{"expression":{"hexValue":"74727565","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":798,"id":811,"nodeType":"Return","src":"3475:11:5"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"3126:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":813,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:5","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"to","nameLocation":"3341:2:5","nodeType":"VariableDeclaration","scope":813,"src":"3333:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"value","nameLocation":"3353:5:5","nodeType":"VariableDeclaration","scope":813,"src":"3345:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:5"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":813,"src":"3384:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":796,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:5"},"scope":1203,"src":"3315:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1258],"body":{"id":829,"nodeType":"Block","src":"3640:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":823,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"3657:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"id":824,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3669:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":827,"indexExpression":{"id":826,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":822,"id":828,"nodeType":"Return","src":"3650:34:5"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"3499:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":830,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"owner","nameLocation":"3578:5:5","nodeType":"VariableDeclaration","scope":830,"src":"3570:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"spender","nameLocation":"3593:7:5","nodeType":"VariableDeclaration","scope":830,"src":"3585:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"3631:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:5"},"scope":1203,"src":"3551:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1268],"body":{"id":853,"nodeType":"Block","src":"4077:107:5","statements":[{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"owner","nameLocation":"4095:5:5","nodeType":"VariableDeclaration","scope":853,"src":"4087:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":844,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":842,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"4103:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:5"},{"expression":{"arguments":[{"id":846,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4134:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"4141:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4150:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1094,1154],"referencedDeclaration":1094,"src":"4125:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"4125:31:5"},{"expression":{"hexValue":"74727565","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":839,"id":852,"nodeType":"Return","src":"4166:11:5"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"3697:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":854,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:5","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"spender","nameLocation":"4023:7:5","nodeType":"VariableDeclaration","scope":854,"src":"4015:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"value","nameLocation":"4040:5:5","nodeType":"VariableDeclaration","scope":854,"src":"4032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:5"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"4071:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":837,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:5"},"scope":1203,"src":"3998:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1280],"body":{"id":885,"nodeType":"Block","src":"4869:151:5","statements":[{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"spender","nameLocation":"4887:7:5","nodeType":"VariableDeclaration","scope":885,"src":"4879:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":870,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":868,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"4897:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:5"},{"expression":{"arguments":[{"id":872,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4935:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"4941:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4950:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":871,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"4919:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"4919:37:5"},{"expression":{"arguments":[{"id":878,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4976:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4982:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4986:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":877,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4966:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"4966:26:5"},{"expression":{"hexValue":"74727565","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":865,"id":884,"nodeType":"Return","src":"5002:11:5"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"4190:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":886,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:5","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"from","nameLocation":"4806:4:5","nodeType":"VariableDeclaration","scope":886,"src":"4798:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"to","nameLocation":"4820:2:5","nodeType":"VariableDeclaration","scope":886,"src":"4812:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"value","nameLocation":"4832:5:5","nodeType":"VariableDeclaration","scope":886,"src":"4824:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:5"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"4863:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":863,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:5"},"scope":1203,"src":"4776:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":932,"nodeType":"Block","src":"5462:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5476:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:5","typeDescriptions":{}}},"id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":910,"nodeType":"IfStatement","src":"5472:86:5","trueBody":{"id":909,"nodeType":"Block","src":"5496:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:5","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":902,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5517:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":908,"nodeType":"RevertStatement","src":"5510:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5571:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:5","typeDescriptions":{}}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":925,"nodeType":"IfStatement","src":"5567:86:5","trueBody":{"id":924,"nodeType":"Block","src":"5589:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:5","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":917,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5610:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":923,"nodeType":"RevertStatement","src":"5603:39:5"}]}},{"expression":{"arguments":[{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5670:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5676:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5680:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5662:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"5662:24:5"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"5026:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":933,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:5","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"from","nameLocation":"5420:4:5","nodeType":"VariableDeclaration","scope":933,"src":"5412:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"to","nameLocation":"5434:2:5","nodeType":"VariableDeclaration","scope":933,"src":"5426:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"value","nameLocation":"5446:5:5","nodeType":"VariableDeclaration","scope":933,"src":"5438:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"5462:0:5"},"scope":1203,"src":"5393:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"6083:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6097:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:5","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":980,"nodeType":"Block","src":"6271:362:5","statements":[{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:5","nodeType":"VariableDeclaration","scope":980,"src":"6285:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"baseExpression":{"id":956,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6307:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":958,"indexExpression":{"id":957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6317:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":960,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6340:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6354:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":970,"nodeType":"IfStatement","src":"6336:115:5","trueBody":{"id":969,"nodeType":"Block","src":"6361:90:5","statements":[{"errorCall":{"arguments":[{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6411:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6417:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6430:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":963,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6386:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":968,"nodeType":"RevertStatement","src":"6379:57:5"}]}},{"id":979,"nodeType":"UncheckedBlock","src":"6464:159:5","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":971,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6571:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":973,"indexExpression":{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6581:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6589:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6603:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"6571:37:5"}]}]},"id":981,"nodeType":"IfStatement","src":"6093:540:5","trueBody":{"id":953,"nodeType":"Block","src":"6117:148:5","statements":[{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":949,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6233:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6249:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ExpressionStatement","src":"6233:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"6647:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:5","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1001,"nodeType":"Block","src":"6862:206:5","statements":[{"id":1000,"nodeType":"UncheckedBlock","src":"6876:182:5","statements":[{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":994,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7021:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":996,"indexExpression":{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"7031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":999,"nodeType":"ExpressionStatement","src":"7021:22:5"}]}]},"id":1002,"nodeType":"IfStatement","src":"6643:425:5","trueBody":{"id":993,"nodeType":"Block","src":"6665:191:5","statements":[{"id":992,"nodeType":"UncheckedBlock","src":"6679:167:5","statements":[{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":988,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6810:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"6810:21:5"}]}]}},{"eventCall":{"arguments":[{"id":1004,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"7092:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"7098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1003,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"7083:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"EmitStatement","src":"7078:30:5"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"5699:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:5","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"from","nameLocation":"6033:4:5","nodeType":"VariableDeclaration","scope":1010,"src":"6025:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"to","nameLocation":"6047:2:5","nodeType":"VariableDeclaration","scope":1010,"src":"6039:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"value","nameLocation":"6059:5:5","nodeType":"VariableDeclaration","scope":1010,"src":"6051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:5"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"6083:0:5"},"scope":1203,"src":"6008:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"7514:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:5","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1032,"nodeType":"IfStatement","src":"7524:91:5","trueBody":{"id":1031,"nodeType":"Block","src":"7551:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:5","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1024,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7572:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1030,"nodeType":"RevertStatement","src":"7565:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:5","typeDescriptions":{}}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7644:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7653:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7624:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"7624:35:5"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"7121:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:5","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"account","nameLocation":"7481:7:5","nodeType":"VariableDeclaration","scope":1043,"src":"7473:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"value","nameLocation":"7498:5:5","nodeType":"VariableDeclaration","scope":1043,"src":"7490:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:5"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"7514:0:5"},"scope":1203,"src":"7458:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"8040:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8054:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:5","typeDescriptions":{}}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1065,"nodeType":"IfStatement","src":"8050:89:5","trueBody":{"id":1064,"nodeType":"Block","src":"8077:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:5","typeDescriptions":{}}},"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1057,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"8098:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1063,"nodeType":"RevertStatement","src":"8091:37:5"}]}},{"expression":{"arguments":[{"id":1067,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8156:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:5","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"8177:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8148:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"8148:35:5"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"7672:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:5","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"account","nameLocation":"8007:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"7999:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"8024:5:5","nodeType":"VariableDeclaration","scope":1076,"src":"8016:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"8040:0:5"},"scope":1203,"src":"7984:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1093,"nodeType":"Block","src":"8800:54:5","statements":[{"expression":{"arguments":[{"id":1087,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8819:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8826:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"8835:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1086,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1094,1154],"referencedDeclaration":1154,"src":"8810:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1092,"nodeType":"ExpressionStatement","src":"8810:37:5"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"8196:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:5","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"owner","nameLocation":"8752:5:5","nodeType":"VariableDeclaration","scope":1094,"src":"8744:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"spender","nameLocation":"8767:7:5","nodeType":"VariableDeclaration","scope":1094,"src":"8759:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"value","nameLocation":"8784:5:5","nodeType":"VariableDeclaration","scope":1094,"src":"8776:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:5"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"8800:0:5"},"scope":1203,"src":"8726:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"9799:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"9813:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:5","typeDescriptions":{}}},"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1120,"nodeType":"IfStatement","src":"9809:89:5","trueBody":{"id":1119,"nodeType":"Block","src":"9834:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:5","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1112,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"9855:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1118,"nodeType":"RevertStatement","src":"9848:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"9911:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:5","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"9907:90:5","trueBody":{"id":1134,"nodeType":"Block","src":"9934:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:5","typeDescriptions":{}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1127,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"9955:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1133,"nodeType":"RevertStatement","src":"9948:38:5"}]}},{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1136,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10006:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1139,"indexExpression":{"id":1137,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10018:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1140,"indexExpression":{"id":1138,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"10025:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"10036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"nodeType":"ExpressionStatement","src":"10006:35:5"},{"condition":{"id":1144,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"10055:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"10051:76:5","trueBody":{"id":1151,"nodeType":"Block","src":"10066:61:5","statements":[{"eventCall":{"arguments":[{"id":1146,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10094:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"10101:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"10110:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"10085:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"EmitStatement","src":"10080:36:5"}]}}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"8860:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:5","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"owner","nameLocation":"9727:5:5","nodeType":"VariableDeclaration","scope":1154,"src":"9719:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"spender","nameLocation":"9742:7:5","nodeType":"VariableDeclaration","scope":1154,"src":"9734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"9759:5:5","nodeType":"VariableDeclaration","scope":1154,"src":"9751:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:5","nodeType":"VariableDeclaration","scope":1154,"src":"9766:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1102,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:5"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"9799:0:5"},"scope":1203,"src":"9701:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"10504:388:5","statements":[{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:5","nodeType":"VariableDeclaration","scope":1201,"src":"10514:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"id":1167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10551:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1168,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10558:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1166,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10541:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10580:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:5","memberName":"max","nodeType":"MemberAccess","src":"10600:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"10576:310:5","trueBody":{"id":1199,"nodeType":"Block","src":"10619:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10637:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10656:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"nodeType":"IfStatement","src":"10633:130:5","trueBody":{"id":1187,"nodeType":"Block","src":"10663:100:5","statements":[{"errorCall":{"arguments":[{"id":1182,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10715:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10724:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10742:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"10688:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1186,"nodeType":"RevertStatement","src":"10681:67:5"}]}},{"id":1198,"nodeType":"UncheckedBlock","src":"10776:100:5","statements":[{"expression":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10813:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10820:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10829:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1189,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1094,1154],"referencedDeclaration":1154,"src":"10804:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"10804:57:5"}]}]}}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"10139:271:5","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:5","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"owner","nameLocation":"10448:5:5","nodeType":"VariableDeclaration","scope":1202,"src":"10440:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"spender","nameLocation":"10463:7:5","nodeType":"VariableDeclaration","scope":1202,"src":"10455:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"10480:5:5","nodeType":"VariableDeclaration","scope":1202,"src":"10472:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:5"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"10504:0:5"},"scope":1203,"src":"10415:477:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1204,"src":"1106:9788:5","usedErrors":[563,568,573,582,587,592],"usedEvents":[1215,1224]}],"src":"105:10790:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1281]},"id":1282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1205,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1281,"linearizedBaseContracts":[1281],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1215,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":1215,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":1215,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":1215,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1224,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":1224,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":1224,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1222,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":1224,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1230,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":1281,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1238,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":1238,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1238,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":1281,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1248,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":1248,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":1248,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1245,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":1281,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1258,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":1258,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":1258,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":1281,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1268,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":1268,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":1268,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1268,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1265,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":1281,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1280,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":1280,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":1280,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":1280,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1280,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":1281,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1282,"src":"204:2575:6","usedErrors":[],"usedEvents":[1215,1224]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2656],"EIP712":[2883],"ERC20":[1203],"ERC20Permit":[1435],"IERC20Permit":[1497],"Nonces":[1595]},"id":1436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":1498,"src":"148:48:7","symbolAliases":[{"foreign":{"id":1284,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"156:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":1204,"src":"197:35:7","symbolAliases":[{"foreign":{"id":1286,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"205:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":2657,"src":"233:60:7","symbolAliases":[{"foreign":{"id":1288,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"241:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":2884,"src":"294:62:7","symbolAliases":[{"foreign":{"id":1290,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"302:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":1596,"src":"357:49:7","symbolAliases":[{"foreign":{"id":1292,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"365:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1295,"name":"ERC20","nameLocations":["931:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"931:5:7"},"id":1296,"nodeType":"InheritanceSpecifier","src":"931:5:7"},{"baseName":{"id":1297,"name":"IERC20Permit","nameLocations":["938:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"938:12:7"},"id":1298,"nodeType":"InheritanceSpecifier","src":"938:12:7"},{"baseName":{"id":1299,"name":"EIP712","nameLocations":["952:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2883,"src":"952:6:7"},"id":1300,"nodeType":"InheritanceSpecifier","src":"952:6:7"},{"baseName":{"id":1301,"name":"Nonces","nameLocations":["960:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"960:6:7"},"id":1302,"nodeType":"InheritanceSpecifier","src":"960:6:7"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"408:489:7","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1435,"linearizedBaseContracts":[1435,1595,2883,551,1497,1203,593,1461,1281,1527],"name":"ERC20Permit","nameLocation":"916:11:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1307,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:7","nodeType":"VariableDeclaration","scope":1435,"src":"973:146:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"1126:52:7","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1312,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:7","nodeType":"ErrorDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:7","nodeType":"VariableDeclaration","scope":1312,"src":"1213:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:7"},"src":"1183:48:7"},{"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"1237:45:7","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1319,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:7","nodeType":"ErrorDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"signer","nameLocation":"1322:6:7","nodeType":"VariableDeclaration","scope":1319,"src":"1314:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"owner","nameLocation":"1338:5:7","nodeType":"VariableDeclaration","scope":1319,"src":"1330:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:7"},"src":"1287:58:7"},{"body":{"id":1329,"nodeType":"Block","src":"1627:2:7","statements":[]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1351:221:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1330,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1325,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1616:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1327,"kind":"baseConstructorSpecifier","modifierName":{"id":1324,"name":"EIP712","nameLocations":["1609:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2883,"src":"1609:6:7"},"nodeType":"ModifierInvocation","src":"1609:17:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"name","nameLocation":"1603:4:7","nodeType":"VariableDeclaration","scope":1330,"src":"1589:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:7"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"1627:0:7"},"scope":1435,"src":"1577:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1482],"body":{"id":1406,"nodeType":"Block","src":"1872:483:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1348,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1350,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"1904:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1357,"nodeType":"IfStatement","src":"1882:97:7","trueBody":{"id":1356,"nodeType":"Block","src":"1914:65:7","statements":[{"errorCall":{"arguments":[{"id":1353,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"1959:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1352,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"1935:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1355,"nodeType":"RevertStatement","src":"1928:40:7"}]}},{"assignments":[1359],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:7","nodeType":"VariableDeclaration","scope":1406,"src":"1989:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1373,"initialValue":{"arguments":[{"arguments":[{"id":1363,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2031:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2048:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2055:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2064:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1368,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2081:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1367,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2071:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1370,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2089:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1361,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:7"},{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"hash","nameLocation":"2118:4:7","nodeType":"VariableDeclaration","scope":1406,"src":"2110:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1379,"initialValue":{"arguments":[{"id":1377,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"2142:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1376,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2125:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:7"},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"signer","nameLocation":"2172:6:7","nodeType":"VariableDeclaration","scope":1406,"src":"2164:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"id":1384,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"2195:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1385,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"2201:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1386,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2204:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1387,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"2207:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1382,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2181:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2656_$","typeString":"type(library ECDSA)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"2181:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2223:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1391,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2233:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"2219:88:7","trueBody":{"id":1398,"nodeType":"Block","src":"2240:67:7","statements":[{"errorCall":{"arguments":[{"id":1394,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2282:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2290:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2261:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1397,"nodeType":"RevertStatement","src":"2254:42:7"}]}},{"expression":{"arguments":[{"id":1401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2326:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2333:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2342:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1400,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1094,1154],"referencedDeclaration":1094,"src":"2317:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"ExpressionStatement","src":"2317:31:7"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"1635:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:7","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"owner","nameLocation":"1716:5:7","nodeType":"VariableDeclaration","scope":1407,"src":"1708:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"spender","nameLocation":"1739:7:7","nodeType":"VariableDeclaration","scope":1407,"src":"1731:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"value","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":1407,"src":"1756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:7","nodeType":"VariableDeclaration","scope":1407,"src":"1779:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"v","nameLocation":"1811:1:7","nodeType":"VariableDeclaration","scope":1407,"src":"1805:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1340,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"r","nameLocation":"1830:1:7","nodeType":"VariableDeclaration","scope":1407,"src":"1822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"s","nameLocation":"1849:1:7","nodeType":"VariableDeclaration","scope":1407,"src":"1841:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:7"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"1872:0:7"},"scope":1435,"src":"1683:672:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1490,1554],"body":{"id":1423,"nodeType":"Block","src":"2509:43:7","statements":[{"expression":{"arguments":[{"id":1420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2539:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1418,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1435_$","typeString":"type(contract super ERC20Permit)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1554,"src":"2526:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1417,"id":1422,"nodeType":"Return","src":"2519:26:7"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"2361:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:7","nodeType":"FunctionDefinition","overrides":{"id":1414,"nodeType":"OverrideSpecifier","overrides":[{"id":1412,"name":"IERC20Permit","nameLocations":["2469:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2469:12:7"},{"id":1413,"name":"Nonces","nameLocations":["2483:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"2483:6:7"}],"src":"2460:30:7"},"parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"owner","nameLocation":"2433:5:7","nodeType":"VariableDeclaration","scope":1424,"src":"2425:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:7"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"2500:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:7"},"scope":1435,"src":"2409:143:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1496],"body":{"id":1433,"nodeType":"Block","src":"2727:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1430,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2744:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1429,"id":1432,"nodeType":"Return","src":"2737:27:7"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"2558:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:7","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"2684:2:7"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1434,"src":"2718:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:7"},"scope":1435,"src":"2659:112:7","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1436,"src":"898:1875:7","usedErrors":[563,568,573,582,587,592,1312,1319,1537,1661,1663,2319,2324,2329],"usedEvents":[531,1215,1224]}],"src":"122:2652:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1281],"IERC20Metadata":[1461]},"id":1462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1437,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1462,"sourceUnit":1282,"src":"151:37:8","symbolAliases":[{"foreign":{"id":1438,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"159:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1441,"name":"IERC20","nameLocations":["306:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1281,"src":"306:6:8"},"id":1442,"nodeType":"InheritanceSpecifier","src":"306:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"190:87:8","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1461,"linearizedBaseContracts":[1461,1281],"name":"IERC20Metadata","nameLocation":"288:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"319:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:8","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"391:2:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"417:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1445,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:8"},"scope":1461,"src":"378:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"438:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1454,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:8","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"514:2:8"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"540:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1451,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:8"},"scope":1461,"src":"499:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"561:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1460,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:8","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"648:2:8"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1460,"src":"674:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1457,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:8"},"scope":1461,"src":"631:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1462,"src":"278:405:8","usedErrors":[],"usedEvents":[1215,1224]}],"src":"125:559:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1497]},"id":1498,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"149:1965:9","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1497,"linearizedBaseContracts":[1497],"name":"IERC20Permit","nameLocation":"2125:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"2144:850:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1482,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:9","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"owner","nameLocation":"3032:5:9","nodeType":"VariableDeclaration","scope":1482,"src":"3024:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"spender","nameLocation":"3055:7:9","nodeType":"VariableDeclaration","scope":1482,"src":"3047:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"value","nameLocation":"3080:5:9","nodeType":"VariableDeclaration","scope":1482,"src":"3072:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:9","nodeType":"VariableDeclaration","scope":1482,"src":"3095:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"v","nameLocation":"3127:1:9","nodeType":"VariableDeclaration","scope":1482,"src":"3121:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1474,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"r","nameLocation":"3146:1:9","nodeType":"VariableDeclaration","scope":1482,"src":"3138:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"s","nameLocation":"3165:1:9","nodeType":"VariableDeclaration","scope":1482,"src":"3157:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:9"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"3181:0:9"},"scope":1497,"src":"2999:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"3188:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1490,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:9","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"owner","nameLocation":"3511:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"3503:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:9"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"3541:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:9"},"scope":1497,"src":"3487:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"3556:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1496,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:9","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"3767:2:9"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"3793:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:9"},"scope":1497,"src":"3742:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1498,"src":"2115:1689:9","usedErrors":[],"usedEvents":[]}],"src":"123:3682:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1527]},"id":1528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1499,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1527,"linearizedBaseContracts":[1527],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1508,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1505,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1504,"id":1507,"nodeType":"Return","src":"728:17:10"}]},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1509,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1527,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1517,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1513,"id":1516,"nodeType":"Return","src":"835:15:10"}]},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1518,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1511,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1527,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1525,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1522,"id":1524,"nodeType":"Return","src":"945:8:10"}]},"id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1527,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1528,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1595]},"id":1596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1529,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"125:83:11","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1595,"linearizedBaseContracts":[1595],"name":"Nonces","nameLocation":"227:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"240:90:11","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1537,"name":"InvalidAccountNonce","nameLocation":"341:19:11","nodeType":"ErrorDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"account","nameLocation":"369:7:11","nodeType":"VariableDeclaration","scope":1537,"src":"361:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:11","nodeType":"VariableDeclaration","scope":1537,"src":"378:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:11"},"src":"335:65:11"},{"constant":false,"id":1541,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:11","nodeType":"VariableDeclaration","scope":1595,"src":"406:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1540,"keyName":"account","keyNameLocation":"422:7:11","keyType":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1553,"nodeType":"Block","src":"607:38:11","statements":[{"expression":{"baseExpression":{"id":1549,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"624:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1551,"indexExpression":{"id":1550,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"632:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1548,"id":1552,"nodeType":"Return","src":"617:21:11"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"464:69:11","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:11","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"owner","nameLocation":"562:5:11","nodeType":"VariableDeclaration","scope":1554,"src":"554:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:11"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1554,"src":"598:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:11"},"scope":1595,"src":"538:107:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1568,"nodeType":"Block","src":"828:326:11","statements":[{"id":1567,"nodeType":"UncheckedBlock","src":"1031:117:11","statements":[{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:11","subExpression":{"baseExpression":{"id":1562,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1564,"indexExpression":{"id":1563,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1129:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1561,"id":1566,"nodeType":"Return","src":"1114:23:11"}]}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"651:103:11","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:11","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"owner","nameLocation":"786:5:11","nodeType":"VariableDeclaration","scope":1569,"src":"778:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:11"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"819:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:11"},"scope":1595,"src":"759:395:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"1338:149:11","statements":[{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"mutability":"mutable","name":"current","nameLocation":"1356:7:11","nodeType":"VariableDeclaration","scope":1593,"src":"1348:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1582,"initialValue":{"arguments":[{"id":1580,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1376:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1579,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1366:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1396:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1584,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1592,"nodeType":"IfStatement","src":"1392:89:11","trueBody":{"id":1591,"nodeType":"Block","src":"1414:67:11","statements":[{"errorCall":{"arguments":[{"id":1587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1455:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1588,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"1435:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1590,"nodeType":"RevertStatement","src":"1428:42:11"}]}}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"1160:100:11","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:11","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"owner","nameLocation":"1299:5:11","nodeType":"VariableDeclaration","scope":1594,"src":"1291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:11","nodeType":"VariableDeclaration","scope":1594,"src":"1306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:11"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"1338:0:11"},"scope":1595,"src":"1265:222:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1596,"src":"209:1280:11","usedErrors":[1537],"usedEvents":[]}],"src":"99:1391:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1647]},"id":1648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1597,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1647,"linearizedBaseContracts":[1647],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":1602,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":1647,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":1606,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":1647,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":1610,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":1647,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":1614,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":1647,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":1618,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":1647,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":1622,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":1647,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":1626,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":1647,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":1630,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":1647,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":1634,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":1647,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":1638,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":1647,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nativeSrc":"1854:110:12","nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:12","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:12","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:12","nodeType":"YulIdentifier","src":"1868:6:12"},"nativeSrc":"1868:24:12","nodeType":"YulFunctionCall","src":"1868:24:12"},"nativeSrc":"1868:24:12","nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:12","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:12","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:12","nodeType":"YulIdentifier","src":"1905:6:12"},"nativeSrc":"1905:18:12","nodeType":"YulFunctionCall","src":"1905:18:12"},"nativeSrc":"1905:18:12","nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:12","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:12","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:12","nodeType":"YulIdentifier","src":"1936:6:12"},"nativeSrc":"1936:18:12","nodeType":"YulFunctionCall","src":"1936:18:12"},"nativeSrc":"1936:18:12","nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1641,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":1644,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":1646,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":1643,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":1647,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1648,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1653],"ShortStrings":[1864],"StorageSlot":[1988]},"id":1865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1865,"sourceUnit":1989,"src":"132:46:13","symbolAliases":[{"foreign":{"id":1650,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"140:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1653,"name":"ShortString","nameLocation":"353:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:13","underlyingType":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"378:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1864,"linearizedBaseContracts":[1864],"name":"ShortStrings","nameLocation":"1263:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1657,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:13","nodeType":"VariableDeclaration","scope":1864,"src":"1345:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1661,"name":"StringTooLong","nameLocation":"1469:13:13","nodeType":"ErrorDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"str","nameLocation":"1490:3:13","nodeType":"VariableDeclaration","scope":1661,"src":"1483:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:13"},"src":"1463:32:13"},{"errorSelector":"b3512b0c","id":1663,"name":"InvalidShortString","nameLocation":"1506:18:13","nodeType":"ErrorDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"1524:2:13"},"src":"1500:27:13"},{"body":{"id":1706,"nodeType":"Block","src":"1786:208:13","statements":[{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:13","nodeType":"VariableDeclaration","scope":1706,"src":"1796:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1678,"initialValue":{"arguments":[{"id":1676,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1822:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:13","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1679,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1840:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:13","memberName":"length","nodeType":"MemberAccess","src":"1840:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"nodeType":"IfStatement","src":"1836:72:13","trueBody":{"id":1687,"nodeType":"Block","src":"1858:50:13","statements":[{"errorCall":{"arguments":[{"id":1684,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1893:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1683,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"1879:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1686,"nodeType":"RevertStatement","src":"1872:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1697,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1965:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:13","typeDescriptions":{}}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1700,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1974:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:13","memberName":"length","nodeType":"MemberAccess","src":"1974:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1689,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"1924:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"type(ShortString)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"functionReturnParameters":1671,"id":1705,"nodeType":"Return","src":"1917:70:13"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"1533:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:13","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"str","nameLocation":"1745:3:13","nodeType":"VariableDeclaration","scope":1707,"src":"1731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:13"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"1773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1669,"nodeType":"UserDefinedTypeName","pathNode":{"id":1668,"name":"ShortString","nameLocations":["1773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"1773:11:13"},"referencedDeclaration":1653,"src":"1773:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:13"},"scope":1864,"src":"1708:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"2152:304:13","statements":[{"assignments":[1717],"declarations":[{"constant":false,"id":1717,"mutability":"mutable","name":"len","nameLocation":"2170:3:13","nodeType":"VariableDeclaration","scope":1732,"src":"2162:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"id":1719,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"2187:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"id":1718,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"2176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:13"},{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"str","nameLocation":"2294:3:13","nodeType":"VariableDeclaration","scope":1732,"src":"2280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1722,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1728,"initialValue":{"arguments":[{"hexValue":"3332","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1724,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:13"},{"AST":{"nativeSrc":"2349:81:13","nodeType":"YulBlock","src":"2349:81:13","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:13","nodeType":"YulIdentifier","src":"2370:3:13"},{"name":"len","nativeSrc":"2375:3:13","nodeType":"YulIdentifier","src":"2375:3:13"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:13","nodeType":"YulIdentifier","src":"2363:6:13"},"nativeSrc":"2363:16:13","nodeType":"YulFunctionCall","src":"2363:16:13"},"nativeSrc":"2363:16:13","nodeType":"YulExpressionStatement","src":"2363:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:13","nodeType":"YulIdentifier","src":"2403:3:13"},{"kind":"number","nativeSrc":"2408:4:13","nodeType":"YulLiteral","src":"2408:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:13","nodeType":"YulIdentifier","src":"2399:3:13"},"nativeSrc":"2399:14:13","nodeType":"YulFunctionCall","src":"2399:14:13"},{"name":"sstr","nativeSrc":"2415:4:13","nodeType":"YulIdentifier","src":"2415:4:13"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:13","nodeType":"YulIdentifier","src":"2392:6:13"},"nativeSrc":"2392:28:13","nodeType":"YulFunctionCall","src":"2392:28:13"},"nativeSrc":"2392:28:13","nodeType":"YulExpressionStatement","src":"2392:28:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1717,"isOffset":false,"isSlot":false,"src":"2375:3:13","valueSize":1},{"declaration":1711,"isOffset":false,"isSlot":false,"src":"2415:4:13","valueSize":1},{"declaration":1723,"isOffset":false,"isSlot":false,"src":"2370:3:13","valueSize":1},{"declaration":1723,"isOffset":false,"isSlot":false,"src":"2403:3:13","valueSize":1}],"flags":["memory-safe"],"id":1729,"nodeType":"InlineAssembly","src":"2324:106:13"},{"expression":{"id":1730,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"2446:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1715,"id":1731,"nodeType":"Return","src":"2439:10:13"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"2000:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:13","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:13","nodeType":"VariableDeclaration","scope":1733,"src":"2096:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1710,"nodeType":"UserDefinedTypeName","pathNode":{"id":1709,"name":"ShortString","nameLocations":["2096:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2096:11:13"},"referencedDeclaration":1653,"src":"2096:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:13"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"2137:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1713,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:13"},"scope":1864,"src":"2078:378:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"2598:175:13","statements":[{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"result","nameLocation":"2616:6:13","nodeType":"VariableDeclaration","scope":1764,"src":"2608:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1748,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2652:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"expression":{"id":1746,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2633:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"type(ShortString)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:13","typeDescriptions":{}}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2679:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1761,"nodeType":"IfStatement","src":"2675:69:13","trueBody":{"id":1760,"nodeType":"Block","src":"2692:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1757,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2713:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1759,"nodeType":"RevertStatement","src":"2706:27:13"}]}},{"expression":{"id":1762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2760:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1741,"id":1763,"nodeType":"Return","src":"2753:13:13"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"2462:61:13","text":" @dev Return the length of a `ShortString`."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:13","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:13","nodeType":"VariableDeclaration","scope":1765,"src":"2548:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1736,"nodeType":"UserDefinedTypeName","pathNode":{"id":1735,"name":"ShortString","nameLocations":["2548:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2548:11:13"},"referencedDeclaration":1653,"src":"2548:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:13"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"2589:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:13"},"scope":1864,"src":"2528:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"2996:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"3016:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:13","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:13","memberName":"length","nodeType":"MemberAccess","src":"3010:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1802,"nodeType":"Block","src":"3094:127:13","statements":[{"expression":{"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1791,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3134:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1788,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3108:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1988_$","typeString":"type(library StorageSlot)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1965,"src":"3108:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1885_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1885_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1884,"src":"3108:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"3149:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1796,"nodeType":"ExpressionStatement","src":"3108:46:13"},{"expression":{"arguments":[{"id":1799,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3192:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1797,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3175:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"type(ShortString)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"functionReturnParameters":1775,"id":1801,"nodeType":"Return","src":"3168:42:13"}]},"id":1803,"nodeType":"IfStatement","src":"3006:215:13","trueBody":{"id":1787,"nodeType":"Block","src":"3036:52:13","statements":[{"expression":{"arguments":[{"id":1784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"3071:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1783,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3057:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"functionReturnParameters":1775,"id":1786,"nodeType":"Return","src":"3050:27:13"}]}}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"2779:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:13","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"value","nameLocation":"2936:5:13","nodeType":"VariableDeclaration","scope":1805,"src":"2922:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1767,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"store","nameLocation":"2958:5:13","nodeType":"VariableDeclaration","scope":1805,"src":"2943:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1769,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:13"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"2983:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1773,"nodeType":"UserDefinedTypeName","pathNode":{"id":1772,"name":"ShortString","nameLocations":["2983:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2983:11:13"},"referencedDeclaration":1653,"src":"2983:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:13"},"scope":1864,"src":"2887:340:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1831,"nodeType":"Block","src":"3467:158:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3500:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"expression":{"id":1816,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3481:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"type(ShortString)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1820,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3510:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1829,"nodeType":"Block","src":"3582:37:13","statements":[{"expression":{"id":1827,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3603:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1815,"id":1828,"nodeType":"Return","src":"3596:12:13"}]},"id":1830,"nodeType":"IfStatement","src":"3477:142:13","trueBody":{"id":1826,"nodeType":"Block","src":"3529:47:13","statements":[{"expression":{"arguments":[{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3559:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"id":1822,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3550:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1815,"id":1825,"nodeType":"Return","src":"3543:22:13"}]}}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"3233:120:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:13","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"3400:5:13","nodeType":"VariableDeclaration","scope":1832,"src":"3388:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1808,"nodeType":"UserDefinedTypeName","pathNode":{"id":1807,"name":"ShortString","nameLocations":["3388:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"3388:11:13"},"referencedDeclaration":1653,"src":"3388:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"store","nameLocation":"3422:5:13","nodeType":"VariableDeclaration","scope":1832,"src":"3407:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:13"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"3452:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1813,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:13"},"scope":1864,"src":"3358:267:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"4105:174:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4138:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"expression":{"id":1843,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"4119:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"type(ShortString)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1847,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"4148:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1860,"nodeType":"Block","src":"4222:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":1856,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4249:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:13","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:13","memberName":"length","nodeType":"MemberAccess","src":"4243:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1859,"nodeType":"Return","src":"4236:26:13"}]},"id":1861,"nodeType":"IfStatement","src":"4115:158:13","trueBody":{"id":1853,"nodeType":"Block","src":"4167:49:13","statements":[{"expression":{"arguments":[{"id":1850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4199:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}],"id":1849,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4188:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1653_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1852,"nodeType":"Return","src":"4181:24:13"}]}}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"3631:364:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1863,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:13","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"4044:5:13","nodeType":"VariableDeclaration","scope":1863,"src":"4032:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"ShortString","nameLocations":["4032:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"4032:11:13"},"referencedDeclaration":1653,"src":"4032:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"store","nameLocation":"4066:5:13","nodeType":"VariableDeclaration","scope":1863,"src":"4051:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:13"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1863,"src":"4096:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:13"},"scope":1864,"src":"4000:279:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1865,"src":"1255:3026:13","usedErrors":[1661,1663],"usedEvents":[]}],"src":"106:4176:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1988]},"id":1989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1866,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"219:1187:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1988,"linearizedBaseContracts":[1988],"name":"StorageSlot","nameLocation":"1415:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1870,"members":[{"constant":false,"id":1869,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":1870,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":1988,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1873,"members":[{"constant":false,"id":1872,"mutability":"mutable","name":"value","nameLocation":"1522:5:14","nodeType":"VariableDeclaration","scope":1873,"src":"1517:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1871,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:14","nodeType":"StructDefinition","scope":1988,"src":"1488:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1876,"members":[{"constant":false,"id":1875,"mutability":"mutable","name":"value","nameLocation":"1577:5:14","nodeType":"VariableDeclaration","scope":1876,"src":"1569:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:14","nodeType":"StructDefinition","scope":1988,"src":"1540:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1879,"members":[{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"1632:5:14","nodeType":"VariableDeclaration","scope":1879,"src":"1624:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:14","nodeType":"StructDefinition","scope":1988,"src":"1595:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1882,"members":[{"constant":false,"id":1881,"mutability":"mutable","name":"value","nameLocation":"1685:5:14","nodeType":"VariableDeclaration","scope":1882,"src":"1678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1880,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:14","nodeType":"StructDefinition","scope":1988,"src":"1650:47:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1885,"members":[{"constant":false,"id":1884,"mutability":"mutable","name":"value","nameLocation":"1738:5:14","nodeType":"VariableDeclaration","scope":1885,"src":"1731:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1883,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:14","nodeType":"StructDefinition","scope":1988,"src":"1703:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1888,"members":[{"constant":false,"id":1887,"mutability":"mutable","name":"value","nameLocation":"1789:5:14","nodeType":"VariableDeclaration","scope":1888,"src":"1783:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:14","nodeType":"StructDefinition","scope":1988,"src":"1756:45:14","visibility":"public"},{"body":{"id":1898,"nodeType":"Block","src":"1983:79:14","statements":[{"AST":{"nativeSrc":"2018:38:14","nodeType":"YulBlock","src":"2018:38:14","statements":[{"nativeSrc":"2032:14:14","nodeType":"YulAssignment","src":"2032:14:14","value":{"name":"slot","nativeSrc":"2042:4:14","nodeType":"YulIdentifier","src":"2042:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:14","nodeType":"YulIdentifier","src":"2032:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1895,"isOffset":false,"isSlot":true,"src":"2032:6:14","suffix":"slot","valueSize":1},{"declaration":1891,"isOffset":false,"isSlot":false,"src":"2042:4:14","valueSize":1}],"flags":["memory-safe"],"id":1897,"nodeType":"InlineAssembly","src":"1993:63:14"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"1807:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:14","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"slot","nameLocation":"1931:4:14","nodeType":"VariableDeclaration","scope":1899,"src":"1923:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:14"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"r","nameLocation":"1980:1:14","nodeType":"VariableDeclaration","scope":1899,"src":"1960:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1870_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1894,"nodeType":"UserDefinedTypeName","pathNode":{"id":1893,"name":"AddressSlot","nameLocations":["1960:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1870,"src":"1960:11:14"},"referencedDeclaration":1870,"src":"1960:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1870_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:14"},"scope":1988,"src":"1899:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"2243:79:14","statements":[{"AST":{"nativeSrc":"2278:38:14","nodeType":"YulBlock","src":"2278:38:14","statements":[{"nativeSrc":"2292:14:14","nodeType":"YulAssignment","src":"2292:14:14","value":{"name":"slot","nativeSrc":"2302:4:14","nodeType":"YulIdentifier","src":"2302:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:14","nodeType":"YulIdentifier","src":"2292:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1906,"isOffset":false,"isSlot":true,"src":"2292:6:14","suffix":"slot","valueSize":1},{"declaration":1902,"isOffset":false,"isSlot":false,"src":"2302:4:14","valueSize":1}],"flags":["memory-safe"],"id":1908,"nodeType":"InlineAssembly","src":"2253:63:14"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"2068:86:14","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:14","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"slot","nameLocation":"2191:4:14","nodeType":"VariableDeclaration","scope":1910,"src":"2183:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:14"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"r","nameLocation":"2240:1:14","nodeType":"VariableDeclaration","scope":1910,"src":"2220:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1873_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1905,"nodeType":"UserDefinedTypeName","pathNode":{"id":1904,"name":"BooleanSlot","nameLocations":["2220:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1873,"src":"2220:11:14"},"referencedDeclaration":1873,"src":"2220:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1873_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:14"},"scope":1988,"src":"2159:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1920,"nodeType":"Block","src":"2503:79:14","statements":[{"AST":{"nativeSrc":"2538:38:14","nodeType":"YulBlock","src":"2538:38:14","statements":[{"nativeSrc":"2552:14:14","nodeType":"YulAssignment","src":"2552:14:14","value":{"name":"slot","nativeSrc":"2562:4:14","nodeType":"YulIdentifier","src":"2562:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:14","nodeType":"YulIdentifier","src":"2552:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1917,"isOffset":false,"isSlot":true,"src":"2552:6:14","suffix":"slot","valueSize":1},{"declaration":1913,"isOffset":false,"isSlot":false,"src":"2562:4:14","valueSize":1}],"flags":["memory-safe"],"id":1919,"nodeType":"InlineAssembly","src":"2513:63:14"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"2328:86:14","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:14","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"slot","nameLocation":"2451:4:14","nodeType":"VariableDeclaration","scope":1921,"src":"2443:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:14"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"r","nameLocation":"2500:1:14","nodeType":"VariableDeclaration","scope":1921,"src":"2480:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1876_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1916,"nodeType":"UserDefinedTypeName","pathNode":{"id":1915,"name":"Bytes32Slot","nameLocations":["2480:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1876,"src":"2480:11:14"},"referencedDeclaration":1876,"src":"2480:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1876_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:14"},"scope":1988,"src":"2419:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"2763:79:14","statements":[{"AST":{"nativeSrc":"2798:38:14","nodeType":"YulBlock","src":"2798:38:14","statements":[{"nativeSrc":"2812:14:14","nodeType":"YulAssignment","src":"2812:14:14","value":{"name":"slot","nativeSrc":"2822:4:14","nodeType":"YulIdentifier","src":"2822:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:14","nodeType":"YulIdentifier","src":"2812:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1928,"isOffset":false,"isSlot":true,"src":"2812:6:14","suffix":"slot","valueSize":1},{"declaration":1924,"isOffset":false,"isSlot":false,"src":"2822:4:14","valueSize":1}],"flags":["memory-safe"],"id":1930,"nodeType":"InlineAssembly","src":"2773:63:14"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"2588:86:14","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:14","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"slot","nameLocation":"2711:4:14","nodeType":"VariableDeclaration","scope":1932,"src":"2703:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:14"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"r","nameLocation":"2760:1:14","nodeType":"VariableDeclaration","scope":1932,"src":"2740:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1879_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1927,"nodeType":"UserDefinedTypeName","pathNode":{"id":1926,"name":"Uint256Slot","nameLocations":["2740:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1879,"src":"2740:11:14"},"referencedDeclaration":1879,"src":"2740:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1879_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:14"},"scope":1988,"src":"2679:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"3020:79:14","statements":[{"AST":{"nativeSrc":"3055:38:14","nodeType":"YulBlock","src":"3055:38:14","statements":[{"nativeSrc":"3069:14:14","nodeType":"YulAssignment","src":"3069:14:14","value":{"name":"slot","nativeSrc":"3079:4:14","nodeType":"YulIdentifier","src":"3079:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:14","nodeType":"YulIdentifier","src":"3069:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1939,"isOffset":false,"isSlot":true,"src":"3069:6:14","suffix":"slot","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"3079:4:14","valueSize":1}],"flags":["memory-safe"],"id":1941,"nodeType":"InlineAssembly","src":"3030:63:14"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"2848:85:14","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:14","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"slot","nameLocation":"2969:4:14","nodeType":"VariableDeclaration","scope":1943,"src":"2961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:14"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"r","nameLocation":"3017:1:14","nodeType":"VariableDeclaration","scope":1943,"src":"2998:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1882_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1938,"nodeType":"UserDefinedTypeName","pathNode":{"id":1937,"name":"Int256Slot","nameLocations":["2998:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1882,"src":"2998:10:14"},"referencedDeclaration":1882,"src":"2998:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1882_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:14"},"scope":1988,"src":"2938:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"3277:79:14","statements":[{"AST":{"nativeSrc":"3312:38:14","nodeType":"YulBlock","src":"3312:38:14","statements":[{"nativeSrc":"3326:14:14","nodeType":"YulAssignment","src":"3326:14:14","value":{"name":"slot","nativeSrc":"3336:4:14","nodeType":"YulIdentifier","src":"3336:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:14","nodeType":"YulIdentifier","src":"3326:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1950,"isOffset":false,"isSlot":true,"src":"3326:6:14","suffix":"slot","valueSize":1},{"declaration":1946,"isOffset":false,"isSlot":false,"src":"3336:4:14","valueSize":1}],"flags":["memory-safe"],"id":1952,"nodeType":"InlineAssembly","src":"3287:63:14"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"3105:85:14","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:14","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"slot","nameLocation":"3226:4:14","nodeType":"VariableDeclaration","scope":1954,"src":"3218:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:14"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"r","nameLocation":"3274:1:14","nodeType":"VariableDeclaration","scope":1954,"src":"3255:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1885_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1949,"nodeType":"UserDefinedTypeName","pathNode":{"id":1948,"name":"StringSlot","nameLocations":["3255:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1885,"src":"3255:10:14"},"referencedDeclaration":1885,"src":"3255:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1885_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:14"},"scope":1988,"src":"3195:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"3558:85:14","statements":[{"AST":{"nativeSrc":"3593:44:14","nodeType":"YulBlock","src":"3593:44:14","statements":[{"nativeSrc":"3607:20:14","nodeType":"YulAssignment","src":"3607:20:14","value":{"name":"store.slot","nativeSrc":"3617:10:14","nodeType":"YulIdentifier","src":"3617:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:14","nodeType":"YulIdentifier","src":"3607:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1961,"isOffset":false,"isSlot":true,"src":"3607:6:14","suffix":"slot","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":true,"src":"3617:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1963,"nodeType":"InlineAssembly","src":"3568:69:14"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"3362:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:14","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"store","nameLocation":"3506:5:14","nodeType":"VariableDeclaration","scope":1965,"src":"3491:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1956,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:14"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"r","nameLocation":"3555:1:14","nodeType":"VariableDeclaration","scope":1965,"src":"3536:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1885_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"StringSlot","nameLocations":["3536:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1885,"src":"3536:10:14"},"referencedDeclaration":1885,"src":"3536:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1885_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:14"},"scope":1988,"src":"3468:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"3818:79:14","statements":[{"AST":{"nativeSrc":"3853:38:14","nodeType":"YulBlock","src":"3853:38:14","statements":[{"nativeSrc":"3867:14:14","nodeType":"YulAssignment","src":"3867:14:14","value":{"name":"slot","nativeSrc":"3877:4:14","nodeType":"YulIdentifier","src":"3877:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:14","nodeType":"YulIdentifier","src":"3867:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1972,"isOffset":false,"isSlot":true,"src":"3867:6:14","suffix":"slot","valueSize":1},{"declaration":1968,"isOffset":false,"isSlot":false,"src":"3877:4:14","valueSize":1}],"flags":["memory-safe"],"id":1974,"nodeType":"InlineAssembly","src":"3828:63:14"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"3649:84:14","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:14","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"slot","nameLocation":"3768:4:14","nodeType":"VariableDeclaration","scope":1976,"src":"3760:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:14"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"r","nameLocation":"3815:1:14","nodeType":"VariableDeclaration","scope":1976,"src":"3797:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1888_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1971,"nodeType":"UserDefinedTypeName","pathNode":{"id":1970,"name":"BytesSlot","nameLocations":["3797:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1888,"src":"3797:9:14"},"referencedDeclaration":1888,"src":"3797:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1888_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:14"},"scope":1988,"src":"3738:159:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"4094:85:14","statements":[{"AST":{"nativeSrc":"4129:44:14","nodeType":"YulBlock","src":"4129:44:14","statements":[{"nativeSrc":"4143:20:14","nodeType":"YulAssignment","src":"4143:20:14","value":{"name":"store.slot","nativeSrc":"4153:10:14","nodeType":"YulIdentifier","src":"4153:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:14","nodeType":"YulIdentifier","src":"4143:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1983,"isOffset":false,"isSlot":true,"src":"4143:6:14","suffix":"slot","valueSize":1},{"declaration":1979,"isOffset":false,"isSlot":true,"src":"4153:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1985,"nodeType":"InlineAssembly","src":"4104:69:14"}]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"3903:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:14","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"store","nameLocation":"4043:5:14","nodeType":"VariableDeclaration","scope":1987,"src":"4029:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1978,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:14"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"r","nameLocation":"4091:1:14","nodeType":"VariableDeclaration","scope":1987,"src":"4073:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1888_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1982,"nodeType":"UserDefinedTypeName","pathNode":{"id":1981,"name":"BytesSlot","nameLocations":["4073:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1888,"src":"4073:9:14"},"referencedDeclaration":1888,"src":"4073:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1888_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:14"},"scope":1988,"src":"4007:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1989,"src":"1407:2774:14","usedErrors":[],"usedEvents":[]}],"src":"193:3989:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4599],"SignedMath":[6508],"Strings":[2308]},"id":2309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1990,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2309,"sourceUnit":4600,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1991,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2309,"sourceUnit":6509,"src":"165:49:15","symbolAliases":[{"foreign":{"id":1993,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"173:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"216:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2308,"linearizedBaseContracts":[2308],"name":"Strings","nameLocation":"259:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1998,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:15","nodeType":"VariableDeclaration","scope":2308,"src":"273:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1996,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2001,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:15","nodeType":"VariableDeclaration","scope":2308,"src":"335:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1999,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"384:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2008,"name":"StringsInsufficientHexLength","nameLocation":"476:28:15","nodeType":"ErrorDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"value","nameLocation":"513:5:15","nodeType":"VariableDeclaration","scope":2008,"src":"505:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"length","nameLocation":"528:6:15","nodeType":"VariableDeclaration","scope":2008,"src":"520:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:15"},"src":"470:66:15"},{"body":{"id":2055,"nodeType":"Block","src":"708:561:15","statements":[{"id":2054,"nodeType":"UncheckedBlock","src":"718:545:15","statements":[{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"length","nameLocation":"750:6:15","nodeType":"VariableDeclaration","scope":2054,"src":"742:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2018,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"759:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4599_$","typeString":"type(library Math)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4371,"src":"759:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:15"},{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"buffer","nameLocation":"808:6:15","nodeType":"VariableDeclaration","scope":2054,"src":"794:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2025,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"id":2029,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"828:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:15"},{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"ptr","nameLocation":"857:3:15","nodeType":"VariableDeclaration","scope":2054,"src":"849:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2034,"nodeType":"VariableDeclarationStatement","src":"849:11:15"},{"AST":{"nativeSrc":"899:67:15","nodeType":"YulBlock","src":"899:67:15","statements":[{"nativeSrc":"917:35:15","nodeType":"YulAssignment","src":"917:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:15","nodeType":"YulIdentifier","src":"928:6:15"},{"arguments":[{"kind":"number","nativeSrc":"940:2:15","nodeType":"YulLiteral","src":"940:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:15","nodeType":"YulIdentifier","src":"944:6:15"}],"functionName":{"name":"add","nativeSrc":"936:3:15","nodeType":"YulIdentifier","src":"936:3:15"},"nativeSrc":"936:15:15","nodeType":"YulFunctionCall","src":"936:15:15"}],"functionName":{"name":"add","nativeSrc":"924:3:15","nodeType":"YulIdentifier","src":"924:3:15"},"nativeSrc":"924:28:15","nodeType":"YulFunctionCall","src":"924:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:15","nodeType":"YulIdentifier","src":"917:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2026,"isOffset":false,"isSlot":false,"src":"928:6:15","valueSize":1},{"declaration":2017,"isOffset":false,"isSlot":false,"src":"944:6:15","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"917:3:15","valueSize":1}],"flags":["memory-safe"],"id":2035,"nodeType":"InlineAssembly","src":"874:92:15"},{"body":{"id":2050,"nodeType":"Block","src":"992:234:15","statements":[{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:15","subExpression":{"id":2037,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1010:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"1010:5:15"},{"AST":{"nativeSrc":"1058:86:15","nodeType":"YulBlock","src":"1058:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:15","nodeType":"YulIdentifier","src":"1088:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:15","nodeType":"YulIdentifier","src":"1102:5:15"},{"kind":"number","nativeSrc":"1109:2:15","nodeType":"YulLiteral","src":"1109:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:15","nodeType":"YulIdentifier","src":"1098:3:15"},"nativeSrc":"1098:14:15","nodeType":"YulFunctionCall","src":"1098:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:15","nodeType":"YulIdentifier","src":"1114:10:15"}],"functionName":{"name":"byte","nativeSrc":"1093:4:15","nodeType":"YulIdentifier","src":"1093:4:15"},"nativeSrc":"1093:32:15","nodeType":"YulFunctionCall","src":"1093:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:15","nodeType":"YulIdentifier","src":"1080:7:15"},"nativeSrc":"1080:46:15","nodeType":"YulFunctionCall","src":"1080:46:15"},"nativeSrc":"1080:46:15","nodeType":"YulExpressionStatement","src":"1080:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1114:10:15","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"1088:3:15","valueSize":1},{"declaration":2011,"isOffset":false,"isSlot":false,"src":"1102:5:15","valueSize":1}],"flags":["memory-safe"],"id":2040,"nodeType":"InlineAssembly","src":"1033:111:15"},{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1161:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"1161:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1194:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"1190:21:15","trueBody":{"id":2048,"nodeType":"Break","src":"1206:5:15"}}]},"condition":{"hexValue":"74727565","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2051,"nodeType":"WhileStatement","src":"979:247:15"},{"expression":{"id":2052,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1246:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2015,"id":2053,"nodeType":"Return","src":"1239:13:15"}]}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"542:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:15","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"663:5:15","nodeType":"VariableDeclaration","scope":2056,"src":"655:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:15"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"693:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:15"},"scope":2308,"src":"637:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"1445:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1476:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:15","trueExpression":{"hexValue":"2d","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1522:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2074,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"1507:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6508_$","typeString":"type(library SignedMath)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6507,"src":"1507:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2073,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1498:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2064,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:15","typeDescriptions":{}}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:15","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2063,"id":2080,"nodeType":"Return","src":"1455:75:15"}]},"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"1275:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:15","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"value","nameLocation":"1400:5:15","nodeType":"VariableDeclaration","scope":2082,"src":"1393:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2058,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:15"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"1430:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2061,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:15"},"scope":2308,"src":"1369:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"1716:100:15","statements":[{"id":2100,"nodeType":"UncheckedBlock","src":"1726:84:15","statements":[{"expression":{"arguments":[{"id":2091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1769:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1788:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2092,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"1776:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4599_$","typeString":"type(library Math)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4542,"src":"1776:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2090,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2102,2185,2205],"referencedDeclaration":2185,"src":"1757:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2089,"id":2099,"nodeType":"Return","src":"1750:49:15"}]}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"1543:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:15","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"value","nameLocation":"1671:5:15","nodeType":"VariableDeclaration","scope":2102,"src":"1663:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:15"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"1701:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:15"},"scope":2308,"src":"1642:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"2029:435:15","statements":[{"assignments":[2113],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:15","nodeType":"VariableDeclaration","scope":2184,"src":"2039:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2115,"initialValue":{"id":2114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2060:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:15"},{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:15","nodeType":"VariableDeclaration","scope":2184,"src":"2075:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2116,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2126,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2121,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2111:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2118,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:15"},{"expression":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2127,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2132:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2129,"indexExpression":{"hexValue":"30","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2132,"nodeType":"ExpressionStatement","src":"2132:15:15"},{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2157:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2135,"indexExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2138,"nodeType":"ExpressionStatement","src":"2157:15:15"},{"body":{"id":2167,"nodeType":"Block","src":"2227:95:15","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2155,"indexExpression":{"id":2154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2248:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2156,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2253:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2160,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2264:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2162,"nodeType":"ExpressionStatement","src":"2241:40:15"},{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2295:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"2295:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2168,"initializationExpression":{"assignments":[2140],"declarations":[{"constant":false,"id":2140,"mutability":"mutable","name":"i","nameLocation":"2195:1:15","nodeType":"VariableDeclaration","scope":2168,"src":"2187:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2142,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2203:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:15","subExpression":{"id":2150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2224:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"2222:3:15"},"nodeType":"ForStatement","src":"2182:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2335:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"IfStatement","src":"2331:96:15","trueBody":{"id":2177,"nodeType":"Block","src":"2352:75:15","statements":[{"errorCall":{"arguments":[{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2402:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2174,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2409:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2172,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2373:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2176,"nodeType":"RevertStatement","src":"2366:50:15"}]}},{"expression":{"arguments":[{"id":2181,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2450:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2179,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:15","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2111,"id":2183,"nodeType":"Return","src":"2436:21:15"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"1822:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:15","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"value","nameLocation":"1968:5:15","nodeType":"VariableDeclaration","scope":2185,"src":"1960:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"length","nameLocation":"1983:6:15","nodeType":"VariableDeclaration","scope":2185,"src":"1975:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:15"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"2014:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2109,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:15"},"scope":2308,"src":"1939:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"2696:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2198,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2741:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2196,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:15","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:15","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2201,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"2749:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2193,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2102,2185,2205],"referencedDeclaration":2185,"src":"2713:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2192,"id":2203,"nodeType":"Return","src":"2706:58:15"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"2470:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:15","nodeType":"FunctionDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"addr","nameLocation":"2652:4:15","nodeType":"VariableDeclaration","scope":2205,"src":"2644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:15"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"2681:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2190,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:15"},"scope":2308,"src":"2623:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"3028:642:15","statements":[{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:15","nodeType":"VariableDeclaration","scope":2269,"src":"3038:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2221,"initialValue":{"arguments":[{"arguments":[{"id":2218,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"3078:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2217,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2102,2185,2205],"referencedDeclaration":2205,"src":"3066:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2215,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:15","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:15"},{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:15","nodeType":"VariableDeclaration","scope":2269,"src":"3169:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2224,"nodeType":"VariableDeclarationStatement","src":"3169:17:15"},{"AST":{"nativeSrc":"3221:78:15","nodeType":"YulBlock","src":"3221:78:15","statements":[{"nativeSrc":"3235:54:15","nodeType":"YulAssignment","src":"3235:54:15","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:15","nodeType":"YulLiteral","src":"3252:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:15","nodeType":"YulIdentifier","src":"3270:6:15"},{"kind":"number","nativeSrc":"3278:4:15","nodeType":"YulLiteral","src":"3278:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:15","nodeType":"YulIdentifier","src":"3266:3:15"},"nativeSrc":"3266:17:15","nodeType":"YulFunctionCall","src":"3266:17:15"},{"kind":"number","nativeSrc":"3285:2:15","nodeType":"YulLiteral","src":"3285:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:15","nodeType":"YulIdentifier","src":"3256:9:15"},"nativeSrc":"3256:32:15","nodeType":"YulFunctionCall","src":"3256:32:15"}],"functionName":{"name":"shr","nativeSrc":"3248:3:15","nodeType":"YulIdentifier","src":"3248:3:15"},"nativeSrc":"3248:41:15","nodeType":"YulFunctionCall","src":"3248:41:15"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:15","nodeType":"YulIdentifier","src":"3235:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2214,"isOffset":false,"isSlot":false,"src":"3270:6:15","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"3235:9:15","valueSize":1}],"flags":["memory-safe"],"id":2225,"nodeType":"InlineAssembly","src":"3196:103:15"},{"body":{"id":2262,"nodeType":"Block","src":"3342:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"3448:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2243,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3477:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2245,"indexExpression":{"id":2244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3484:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2241,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:15","typeDescriptions":{}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"3444:150:15","trueBody":{"id":2256,"nodeType":"Block","src":"3494:100:15","statements":[{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2250,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3562:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2252,"indexExpression":{"id":2251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3569:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2255,"nodeType":"ExpressionStatement","src":"3562:17:15"}]}},{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2258,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"3607:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ExpressionStatement","src":"3607:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"initializationExpression":{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"i","nameLocation":"3322:1:15","nodeType":"VariableDeclaration","scope":2263,"src":"3314:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"hexValue":"3431","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:15","subExpression":{"id":2233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2235,"nodeType":"ExpressionStatement","src":"3337:3:15"},"nodeType":"ForStatement","src":"3309:324:15"},{"expression":{"arguments":[{"id":2266,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3656:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2264,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:15","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2212,"id":2268,"nodeType":"Return","src":"3642:21:15"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"2777:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:15","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"addr","nameLocation":"2984:4:15","nodeType":"VariableDeclaration","scope":2270,"src":"2976:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:15"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"3013:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:15"},"scope":2308,"src":"2947:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"3825:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2282,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"3848:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2280,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:15","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:15","memberName":"length","nodeType":"MemberAccess","src":"3842:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"3867:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:15","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:15","memberName":"length","nodeType":"MemberAccess","src":"3861:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"3896:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2292,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:15","typeDescriptions":{}}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2291,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"3919:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2298,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:15","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2279,"id":2305,"nodeType":"Return","src":"3835:87:15"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"3676:66:15","text":" @dev Returns true if the two strings are equal."},"id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:15","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"a","nameLocation":"3776:1:15","nodeType":"VariableDeclaration","scope":2307,"src":"3762:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2272,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"b","nameLocation":"3793:1:15","nodeType":"VariableDeclaration","scope":2307,"src":"3779:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2274,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:15"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2307,"src":"3819:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:15"},"scope":2308,"src":"3747:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2309,"src":"251:3680:15","usedErrors":[2008],"usedEvents":[]}],"src":"101:3831:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2656]},"id":2657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2310,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2656,"linearizedBaseContracts":[2656],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2316,"members":[{"id":2312,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":2313,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":2314,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":2315,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2319,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2324,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":2324,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2329,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":2329,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":2381,"nodeType":"Block","src":"2285:622:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2344,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"2299:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:16","memberName":"length","nodeType":"MemberAccess","src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2379,"nodeType":"Block","src":"2793:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{}}},"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2370,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"2827:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2314,"src":"2827:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2374,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"2872:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:16","memberName":"length","nodeType":"MemberAccess","src":"2872:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2343,"id":2378,"nodeType":"Return","src":"2807:83:16"}]},"id":2380,"nodeType":"IfStatement","src":"2295:606:16","trueBody":{"id":2365,"nodeType":"Block","src":"2323:464:16","statements":[{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"r","nameLocation":"2345:1:16","nodeType":"VariableDeclaration","scope":2365,"src":"2337:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2350,"nodeType":"VariableDeclarationStatement","src":"2337:9:16"},{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"s","nameLocation":"2368:1:16","nodeType":"VariableDeclaration","scope":2365,"src":"2360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2353,"nodeType":"VariableDeclarationStatement","src":"2360:9:16"},{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"v","nameLocation":"2389:1:16","nodeType":"VariableDeclaration","scope":2365,"src":"2383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2354,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2356,"nodeType":"VariableDeclarationStatement","src":"2383:7:16"},{"AST":{"nativeSrc":"2560:171:16","nodeType":"YulBlock","src":"2560:171:16","statements":[{"nativeSrc":"2578:32:16","nodeType":"YulAssignment","src":"2578:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:16","nodeType":"YulIdentifier","src":"2593:9:16"},{"kind":"number","nativeSrc":"2604:4:16","nodeType":"YulLiteral","src":"2604:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:16","nodeType":"YulIdentifier","src":"2589:3:16"},"nativeSrc":"2589:20:16","nodeType":"YulFunctionCall","src":"2589:20:16"}],"functionName":{"name":"mload","nativeSrc":"2583:5:16","nodeType":"YulIdentifier","src":"2583:5:16"},"nativeSrc":"2583:27:16","nodeType":"YulFunctionCall","src":"2583:27:16"},"variableNames":[{"name":"r","nativeSrc":"2578:1:16","nodeType":"YulIdentifier","src":"2578:1:16"}]},{"nativeSrc":"2627:32:16","nodeType":"YulAssignment","src":"2627:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:16","nodeType":"YulIdentifier","src":"2642:9:16"},{"kind":"number","nativeSrc":"2653:4:16","nodeType":"YulLiteral","src":"2653:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:16","nodeType":"YulIdentifier","src":"2638:3:16"},"nativeSrc":"2638:20:16","nodeType":"YulFunctionCall","src":"2638:20:16"}],"functionName":{"name":"mload","nativeSrc":"2632:5:16","nodeType":"YulIdentifier","src":"2632:5:16"},"nativeSrc":"2632:27:16","nodeType":"YulFunctionCall","src":"2632:27:16"},"variableNames":[{"name":"s","nativeSrc":"2627:1:16","nodeType":"YulIdentifier","src":"2627:1:16"}]},{"nativeSrc":"2676:41:16","nodeType":"YulAssignment","src":"2676:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:16","nodeType":"YulLiteral","src":"2686:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:16","nodeType":"YulIdentifier","src":"2699:9:16"},{"kind":"number","nativeSrc":"2710:4:16","nodeType":"YulLiteral","src":"2710:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:16","nodeType":"YulIdentifier","src":"2695:3:16"},"nativeSrc":"2695:20:16","nodeType":"YulFunctionCall","src":"2695:20:16"}],"functionName":{"name":"mload","nativeSrc":"2689:5:16","nodeType":"YulIdentifier","src":"2689:5:16"},"nativeSrc":"2689:27:16","nodeType":"YulFunctionCall","src":"2689:27:16"}],"functionName":{"name":"byte","nativeSrc":"2681:4:16","nodeType":"YulIdentifier","src":"2681:4:16"},"nativeSrc":"2681:36:16","nodeType":"YulFunctionCall","src":"2681:36:16"},"variableNames":[{"name":"v","nativeSrc":"2676:1:16","nodeType":"YulIdentifier","src":"2676:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2349,"isOffset":false,"isSlot":false,"src":"2578:1:16","valueSize":1},{"declaration":2352,"isOffset":false,"isSlot":false,"src":"2627:1:16","valueSize":1},{"declaration":2334,"isOffset":false,"isSlot":false,"src":"2593:9:16","valueSize":1},{"declaration":2334,"isOffset":false,"isSlot":false,"src":"2642:9:16","valueSize":1},{"declaration":2334,"isOffset":false,"isSlot":false,"src":"2699:9:16","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"2676:1:16","valueSize":1}],"flags":["memory-safe"],"id":2357,"nodeType":"InlineAssembly","src":"2535:196:16"},{"expression":{"arguments":[{"id":2359,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"2762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2360,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2768:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2361,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2771:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2362,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2774:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2358,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2382,2462,2570],"referencedDeclaration":2570,"src":"2751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2343,"id":2364,"nodeType":"Return","src":"2744:32:16"}]}}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"hash","nameLocation":"2166:4:16","nodeType":"VariableDeclaration","scope":2382,"src":"2158:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"signature","nameLocation":"2193:9:16","nodeType":"VariableDeclaration","scope":2382,"src":"2180:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2333,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:16"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:16","nodeType":"VariableDeclaration","scope":2382,"src":"2232:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"err","nameLocation":"2264:3:16","nodeType":"VariableDeclaration","scope":2382,"src":"2251:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2339,"nodeType":"UserDefinedTypeName","pathNode":{"id":2338,"name":"RecoverError","nameLocations":["2251:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"2251:12:16"},"referencedDeclaration":2316,"src":"2251:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:16","nodeType":"VariableDeclaration","scope":2382,"src":"2269:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:16"},"scope":2656,"src":"2129:778:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2411,"nodeType":"Block","src":"3801:168:16","statements":[{"assignments":[2393,2396,2398],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:16","nodeType":"VariableDeclaration","scope":2411,"src":"3812:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"error","nameLocation":"3844:5:16","nodeType":"VariableDeclaration","scope":2411,"src":"3831:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2395,"nodeType":"UserDefinedTypeName","pathNode":{"id":2394,"name":"RecoverError","nameLocations":["3831:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"3831:12:16"},"referencedDeclaration":2316,"src":"3831:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:16","nodeType":"VariableDeclaration","scope":2411,"src":"3851:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[{"id":2400,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"3882:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2401,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"3888:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2399,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2382,2462,2570],"referencedDeclaration":2382,"src":"3871:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:16"},{"expression":{"arguments":[{"id":2405,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3920:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"id":2406,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3927:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2404,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"3908:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2408,"nodeType":"ExpressionStatement","src":"3908:28:16"},{"expression":{"id":2409,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"3953:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2391,"id":2410,"nodeType":"Return","src":"3946:16:16"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"2913:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2412,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:16","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"hash","nameLocation":"3739:4:16","nodeType":"VariableDeclaration","scope":2412,"src":"3731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"signature","nameLocation":"3758:9:16","nodeType":"VariableDeclaration","scope":2412,"src":"3745:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2386,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:16"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2412,"src":"3792:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:16"},"scope":2656,"src":"3714:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"4348:342:16","statements":[{"id":2460,"nodeType":"UncheckedBlock","src":"4358:326:16","statements":[{"assignments":[2430],"declarations":[{"constant":false,"id":2430,"mutability":"mutable","name":"s","nameLocation":"4390:1:16","nodeType":"VariableDeclaration","scope":2460,"src":"4382:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2437,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"4394:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{}}},"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:16"},{"assignments":[2439],"declarations":[{"constant":false,"id":2439,"mutability":"mutable","name":"v","nameLocation":"4591:1:16","nodeType":"VariableDeclaration","scope":2460,"src":"4585:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2438,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2452,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2444,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"4610:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:16","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2440,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:16","typeDescriptions":{}}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:16"},{"expression":{"arguments":[{"id":2454,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4659:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2455,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4665:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2456,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4668:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2457,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4671:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2453,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2382,2462,2570],"referencedDeclaration":2570,"src":"4648:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2428,"id":2459,"nodeType":"Return","src":"4641:32:16"}]}]},"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"3975:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:16","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"hash","nameLocation":"4222:4:16","nodeType":"VariableDeclaration","scope":2462,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"r","nameLocation":"4244:1:16","nodeType":"VariableDeclaration","scope":2462,"src":"4236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"vs","nameLocation":"4263:2:16","nodeType":"VariableDeclaration","scope":2462,"src":"4255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:16"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:16","nodeType":"VariableDeclaration","scope":2462,"src":"4295:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"err","nameLocation":"4327:3:16","nodeType":"VariableDeclaration","scope":2462,"src":"4314:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2424,"nodeType":"UserDefinedTypeName","pathNode":{"id":2423,"name":"RecoverError","nameLocations":["4314:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"4314:12:16"},"referencedDeclaration":2316,"src":"4314:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:16","nodeType":"VariableDeclaration","scope":2462,"src":"4332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:16"},"scope":2656,"src":"4185:505:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"4903:164:16","statements":[{"assignments":[2475,2478,2480],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:16","nodeType":"VariableDeclaration","scope":2494,"src":"4914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"error","nameLocation":"4946:5:16","nodeType":"VariableDeclaration","scope":2494,"src":"4933:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2477,"nodeType":"UserDefinedTypeName","pathNode":{"id":2476,"name":"RecoverError","nameLocations":["4933:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"4933:12:16"},"referencedDeclaration":2316,"src":"4933:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:16","nodeType":"VariableDeclaration","scope":2494,"src":"4953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"id":2482,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4984:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2483,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"4990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2484,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4993:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2481,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2382,2462,2570],"referencedDeclaration":2462,"src":"4973:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:16"},{"expression":{"arguments":[{"id":2488,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5018:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"id":2489,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5025:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2487,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"5006:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2491,"nodeType":"ExpressionStatement","src":"5006:28:16"},{"expression":{"id":2492,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5051:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2473,"id":2493,"nodeType":"Return","src":"5044:16:16"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"4696:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:16","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"hash","nameLocation":"4842:4:16","nodeType":"VariableDeclaration","scope":2495,"src":"4834:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"r","nameLocation":"4856:1:16","nodeType":"VariableDeclaration","scope":2495,"src":"4848:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"vs","nameLocation":"4867:2:16","nodeType":"VariableDeclaration","scope":2495,"src":"4859:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:16"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"4894:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:16"},"scope":2656,"src":"4817:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"5382:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2516,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6278:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:16","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"nodeType":"IfStatement","src":"6266:164:16","trueBody":{"id":2529,"nodeType":"Block","src":"6351:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:16","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2524,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6385:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"6385:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"id":2526,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6417:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2513,"id":2528,"nodeType":"Return","src":"6365:54:16"}]}},{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"signer","nameLocation":"6532:6:16","nodeType":"VariableDeclaration","scope":2569,"src":"6524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2539,"initialValue":{"arguments":[{"id":2534,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6551:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2535,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6557:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2536,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2537,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6563:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2533,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"6579:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{}}},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2559,"nodeType":"IfStatement","src":"6575:113:16","trueBody":{"id":2558,"nodeType":"Block","src":"6601:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:16","typeDescriptions":{}}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2550,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6635:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"6635:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:16","typeDescriptions":{}}},"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2513,"id":2557,"nodeType":"Return","src":"6615:62:16"}]}},{"expression":{"components":[{"id":2560,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"6706:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2561,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6714:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"6714:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:16","typeDescriptions":{}}},"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2513,"id":2568,"nodeType":"Return","src":"6698:49:16"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"5073:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:16","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"hash","nameLocation":"5240:4:16","nodeType":"VariableDeclaration","scope":2570,"src":"5232:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"v","nameLocation":"5260:1:16","nodeType":"VariableDeclaration","scope":2570,"src":"5254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2499,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"r","nameLocation":"5279:1:16","nodeType":"VariableDeclaration","scope":2570,"src":"5271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"s","nameLocation":"5298:1:16","nodeType":"VariableDeclaration","scope":2570,"src":"5290:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:16"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:16","nodeType":"VariableDeclaration","scope":2570,"src":"5329:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"err","nameLocation":"5361:3:16","nodeType":"VariableDeclaration","scope":2570,"src":"5348:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2509,"nodeType":"UserDefinedTypeName","pathNode":{"id":2508,"name":"RecoverError","nameLocations":["5348:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"5348:12:16"},"referencedDeclaration":2316,"src":"5348:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:16","nodeType":"VariableDeclaration","scope":2570,"src":"5366:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:16"},"scope":2656,"src":"5203:1551:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2605,"nodeType":"Block","src":"6981:166:16","statements":[{"assignments":[2585,2588,2590],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:16","nodeType":"VariableDeclaration","scope":2605,"src":"6992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"error","nameLocation":"7024:5:16","nodeType":"VariableDeclaration","scope":2605,"src":"7011:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2587,"nodeType":"UserDefinedTypeName","pathNode":{"id":2586,"name":"RecoverError","nameLocations":["7011:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"7011:12:16"},"referencedDeclaration":2316,"src":"7011:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:16","nodeType":"VariableDeclaration","scope":2605,"src":"7031:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2597,"initialValue":{"arguments":[{"id":2592,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7062:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2593,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7068:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2594,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7071:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2595,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7074:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2591,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2382,2462,2570],"referencedDeclaration":2570,"src":"7051:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2316_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:16"},{"expression":{"arguments":[{"id":2599,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7098:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},{"id":2600,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"7105:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2598,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"7086:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2316_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"ExpressionStatement","src":"7086:28:16"},{"expression":{"id":2603,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7131:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2583,"id":2604,"nodeType":"Return","src":"7124:16:16"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"6760:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2606,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:16","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"hash","nameLocation":"6912:4:16","nodeType":"VariableDeclaration","scope":2606,"src":"6904:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"v","nameLocation":"6924:1:16","nodeType":"VariableDeclaration","scope":2606,"src":"6918:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2574,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"r","nameLocation":"6935:1:16","nodeType":"VariableDeclaration","scope":2606,"src":"6927:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"s","nameLocation":"6946:1:16","nodeType":"VariableDeclaration","scope":2606,"src":"6938:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:16"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2606,"src":"6972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:16"},"scope":2656,"src":"6887:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"7352:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7366:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2616,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7375:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"7375:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7462:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2622,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7471:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"7471:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7567:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2630,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7576:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2314,"src":"7576:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7701:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2642,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7710:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2316_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"7710:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"7697:109:16","trueBody":{"id":2649,"nodeType":"Block","src":"7742:64:16","statements":[{"errorCall":{"arguments":[{"id":2646,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7786:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2645,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"7763:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2648,"nodeType":"RevertStatement","src":"7756:39:16"}]}},"id":2651,"nodeType":"IfStatement","src":"7563:243:16","trueBody":{"id":2640,"nodeType":"Block","src":"7613:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2636,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:16","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"7634:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2639,"nodeType":"RevertStatement","src":"7627:53:16"}]}},"id":2652,"nodeType":"IfStatement","src":"7458:348:16","trueBody":{"id":2628,"nodeType":"Block","src":"7502:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2625,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7523:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2627,"nodeType":"RevertStatement","src":"7516:30:16"}]}},"id":2653,"nodeType":"IfStatement","src":"7362:444:16","trueBody":{"id":2620,"nodeType":"Block","src":"7397:55:16","statements":[{"functionReturnParameters":2614,"id":2619,"nodeType":"Return","src":"7411:7:16"}]}}]},"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"7153:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:16","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"error","nameLocation":"7314:5:16","nodeType":"VariableDeclaration","scope":2655,"src":"7301:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2609,"nodeType":"UserDefinedTypeName","pathNode":{"id":2608,"name":"RecoverError","nameLocations":["7301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2316,"src":"7301:12:16"},"referencedDeclaration":2316,"src":"7301:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2316","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:16","nodeType":"VariableDeclaration","scope":2655,"src":"7321:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:16"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"7352:0:16"},"scope":2656,"src":"7280:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2657,"src":"344:7470:16","usedErrors":[2319,2324,2329],"usedEvents":[]}],"src":"112:7703:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2883],"IERC5267":[551],"MessageHashUtils":[2957],"ShortString":[1653],"ShortStrings":[1864]},"id":2884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2884,"sourceUnit":2958,"src":"139:56:17","symbolAliases":[{"foreign":{"id":2659,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"147:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2884,"sourceUnit":1865,"src":"196:62:17","symbolAliases":[{"foreign":{"id":2661,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"204:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2662,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"218:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2884,"sourceUnit":552,"src":"259:55:17","symbolAliases":[{"foreign":{"id":2664,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"267:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2667,"name":"IERC5267","nameLocations":["1988:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"1988:8:17"},"id":2668,"nodeType":"InheritanceSpecifier","src":"1988:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"316:1643:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2883,"linearizedBaseContracts":[2883,551],"name":"EIP712","nameLocation":"1978:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2670,"libraryName":{"id":2669,"name":"ShortStrings","nameLocations":["2009:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1864,"src":"2009:12:17"},"nodeType":"UsingForDirective","src":"2003:25:17"},{"constant":true,"id":2675,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:17","nodeType":"VariableDeclaration","scope":2883,"src":"2034:140:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2672,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2677,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:17","nodeType":"VariableDeclaration","scope":2883,"src":"2373:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2679,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:17","nodeType":"VariableDeclaration","scope":2883,"src":"2427:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2681,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:17","nodeType":"VariableDeclaration","scope":2883,"src":"2473:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2683,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:17","nodeType":"VariableDeclaration","scope":2883,"src":"2517:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2685,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:17","nodeType":"VariableDeclaration","scope":2883,"src":"2560:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2688,"mutability":"immutable","name":"_name","nameLocation":"2637:5:17","nodeType":"VariableDeclaration","scope":2883,"src":"2607:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":2687,"nodeType":"UserDefinedTypeName","pathNode":{"id":2686,"name":"ShortString","nameLocations":["2607:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2607:11:17"},"referencedDeclaration":1653,"src":"2607:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2691,"mutability":"immutable","name":"_version","nameLocation":"2678:8:17","nodeType":"VariableDeclaration","scope":2883,"src":"2648:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"},"typeName":{"id":2690,"nodeType":"UserDefinedTypeName","pathNode":{"id":2689,"name":"ShortString","nameLocations":["2648:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2648:11:17"},"referencedDeclaration":1653,"src":"2648:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2693,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:17","nodeType":"VariableDeclaration","scope":2883,"src":"2692:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2692,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2695,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:17","nodeType":"VariableDeclaration","scope":2883,"src":"2726:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2694,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2752,"nodeType":"Block","src":"3383:376:17","statements":[{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3393:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2706,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"3432:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2704,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3401:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"3401:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1653_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"src":"3393:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"id":2709,"nodeType":"ExpressionStatement","src":"3393:53:17"},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2710,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"3456:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2713,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"3501:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2711,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3467:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"3467:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1653_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"src":"3456:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"id":2716,"nodeType":"ExpressionStatement","src":"3456:62:17"},{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2717,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3528:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2721,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3558:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2719,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:17","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2718,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2725,"nodeType":"ExpressionStatement","src":"3528:36:17"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3574:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2730,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3607:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2728,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:17","typeDescriptions":{}}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2727,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2734,"nodeType":"ExpressionStatement","src":"3574:42:17"},{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2735,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3627:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2736,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"nodeType":"ExpressionStatement","src":"3627:30:17"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2740,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3667:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2741,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"3692:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2744,"nodeType":"ExpressionStatement","src":"3667:48:17"},{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3725:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2748,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:17","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2751,"nodeType":"ExpressionStatement","src":"3725:27:17"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"2764:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2753,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"name","nameLocation":"3354:4:17","nodeType":"VariableDeclaration","scope":2753,"src":"3340:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2697,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"version","nameLocation":"3374:7:17","nodeType":"VariableDeclaration","scope":2753,"src":"3360:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:17"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[],"src":"3383:0:17"},"scope":2883,"src":"3328:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2778,"nodeType":"Block","src":"3907:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:17","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2763,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3938:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2765,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2767,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3970:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2776,"nodeType":"Block","src":"4046:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2773,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"4067:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2758,"id":2775,"nodeType":"Return","src":"4060:30:17"}]},"id":2777,"nodeType":"IfStatement","src":"3917:184:17","trueBody":{"id":2772,"nodeType":"Block","src":"3986:54:17","statements":[{"expression":{"id":2770,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"4007:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2758,"id":2771,"nodeType":"Return","src":"4000:29:17"}]}}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"3765:75:17","text":" @dev Returns the domain separator for the current chain."},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:17","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[],"src":"3872:2:17"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"3898:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:17"},"scope":2883,"src":"3845:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"4177:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2787,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4215:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2788,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"4226:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2789,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"4239:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2790,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:17","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2785,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2784,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2783,"id":2798,"nodeType":"Return","src":"4187:98:17"}]},"id":2800,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:17","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[],"src":"4143:2:17"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2800,"src":"4168:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:17"},"scope":2883,"src":"4113:179:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2815,"nodeType":"Block","src":"5003:90:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2810,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"5053:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2812,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"5075:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2808,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"5020:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2957_$","typeString":"type(library MessageHashUtils)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"5020:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2807,"id":2814,"nodeType":"Return","src":"5013:73:17"}]},"documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"4298:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:17","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:17","nodeType":"VariableDeclaration","scope":2816,"src":"4943:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:17"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"4994:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:17"},"scope":2883,"src":"4917:176:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[550],"body":{"id":2857,"nodeType":"Block","src":"5472:229:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2836,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"5533:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2838,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"5560:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2840,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2844,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2883","typeString":"contract EIP712"}],"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2842,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:17","typeDescriptions":{}}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:17","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"nodeType":"ArrayTypeName","src":"5672:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2834,"id":2856,"nodeType":"Return","src":"5482:212:17"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"5099:40:17","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:17","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"5165:2:17"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"fields","nameLocation":"5249:6:17","nodeType":"VariableDeclaration","scope":2858,"src":"5242:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2819,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"name","nameLocation":"5283:4:17","nodeType":"VariableDeclaration","scope":2858,"src":"5269:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"version","nameLocation":"5315:7:17","nodeType":"VariableDeclaration","scope":2858,"src":"5301:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2823,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:17","nodeType":"VariableDeclaration","scope":2858,"src":"5336:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:17","nodeType":"VariableDeclaration","scope":2858,"src":"5365:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"salt","nameLocation":"5412:4:17","nodeType":"VariableDeclaration","scope":2858,"src":"5404:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:17","nodeType":"VariableDeclaration","scope":2858,"src":"5430:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ArrayTypeName","src":"5430:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:17"},"scope":2883,"src":"5144:557:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2869,"nodeType":"Block","src":"6082:65:17","statements":[{"expression":{"arguments":[{"id":2866,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"6126:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2864,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"6099:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"6099:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1653_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2863,"id":2868,"nodeType":"Return","src":"6092:48:17"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"5707:256:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:17","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[],"src":"6041:2:17"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"6067:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2861,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:17"},"scope":2883,"src":"6021:126:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"6537:71:17","statements":[{"expression":{"arguments":[{"id":2878,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6584:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2876,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"6554:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1653","typeString":"ShortString"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"6554:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1653_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1653_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2875,"id":2880,"nodeType":"Return","src":"6547:54:17"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"6153:262:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:17","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"6496:2:17"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"6522:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2873,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:17"},"scope":2883,"src":"6473:135:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2884,"src":"1960:4650:17","usedErrors":[1661,1663],"usedEvents":[531]}],"src":"113:6498:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2957],"Strings":[2308]},"id":2958,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2885,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2958,"sourceUnit":2309,"src":"149:39:18","symbolAliases":[{"foreign":{"id":2886,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2957,"linearizedBaseContracts":[2957],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2897,"nodeType":"Block","src":"1314:341:18","statements":[{"AST":{"nativeSrc":"1349:300:18","nodeType":"YulBlock","src":"1349:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:18","nodeType":"YulLiteral","src":"1370:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:18","nodeType":"YulLiteral","src":"1376:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:18","nodeType":"YulIdentifier","src":"1363:6:18"},"nativeSrc":"1363:48:18","nodeType":"YulFunctionCall","src":"1363:48:18"},"nativeSrc":"1363:48:18","nodeType":"YulExpressionStatement","src":"1363:48:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:18","nodeType":"YulLiteral","src":"1472:4:18","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:18","nodeType":"YulIdentifier","src":"1478:11:18"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:18","nodeType":"YulIdentifier","src":"1465:6:18"},"nativeSrc":"1465:25:18","nodeType":"YulFunctionCall","src":"1465:25:18"},"nativeSrc":"1465:25:18","nodeType":"YulExpressionStatement","src":"1465:25:18"},{"nativeSrc":"1544:31:18","nodeType":"YulAssignment","src":"1544:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:18","nodeType":"YulLiteral","src":"1564:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:18","nodeType":"YulLiteral","src":"1570:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:18","nodeType":"YulIdentifier","src":"1554:9:18"},"nativeSrc":"1554:21:18","nodeType":"YulFunctionCall","src":"1554:21:18"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:18","nodeType":"YulIdentifier","src":"1544:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2894,"isOffset":false,"isSlot":false,"src":"1544:6:18","valueSize":1},{"declaration":2891,"isOffset":false,"isSlot":false,"src":"1478:11:18","valueSize":1}],"flags":["memory-safe"],"id":2896,"nodeType":"InlineAssembly","src":"1324:325:18"}]},"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"552:665:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:18","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:18","nodeType":"VariableDeclaration","scope":2898,"src":"1254:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:18"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"digest","nameLocation":"1306:6:18","nodeType":"VariableDeclaration","scope":2898,"src":"1298:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:18"},"scope":2957,"src":"1222:433:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"2207:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2915,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2316:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:18","memberName":"length","nodeType":"MemberAccess","src":"2316:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2913,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"2299:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2308_$","typeString":"type(library Strings)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2056,"src":"2299:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:18","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2919,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2334:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2907,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:18","typeDescriptions":{}}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2906,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2905,"id":2922,"nodeType":"Return","src":"2217:126:18"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"1661:455:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:18","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"message","nameLocation":"2166:7:18","nodeType":"VariableDeclaration","scope":2924,"src":"2153:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2900,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:18"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"2198:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:18"},"scope":2957,"src":"2121:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"2804:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2938,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2860:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2939,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2871:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2935,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2934,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2933,"id":2942,"nodeType":"Return","src":"2814:63:18"}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"2356:332:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:18","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"validator","nameLocation":"2742:9:18","nodeType":"VariableDeclaration","scope":2944,"src":"2734:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"data","nameLocation":"2766:4:18","nodeType":"VariableDeclaration","scope":2944,"src":"2753:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:18"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2944,"src":"2795:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:18"},"scope":2957,"src":"2693:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2955,"nodeType":"Block","src":"3435:265:18","statements":[{"AST":{"nativeSrc":"3470:224:18","nodeType":"YulBlock","src":"3470:224:18","statements":[{"nativeSrc":"3484:22:18","nodeType":"YulVariableDeclaration","src":"3484:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:18","nodeType":"YulLiteral","src":"3501:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:18","nodeType":"YulIdentifier","src":"3495:5:18"},"nativeSrc":"3495:11:18","nodeType":"YulFunctionCall","src":"3495:11:18"},"variables":[{"name":"ptr","nativeSrc":"3488:3:18","nodeType":"YulTypedName","src":"3488:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:18","nodeType":"YulIdentifier","src":"3526:3:18"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:18","nodeType":"YulLiteral","src":"3531:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:18","nodeType":"YulIdentifier","src":"3519:6:18"},"nativeSrc":"3519:23:18","nodeType":"YulFunctionCall","src":"3519:23:18"},"nativeSrc":"3519:23:18","nodeType":"YulExpressionStatement","src":"3519:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:18","nodeType":"YulIdentifier","src":"3566:3:18"},{"kind":"number","nativeSrc":"3571:4:18","nodeType":"YulLiteral","src":"3571:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:18","nodeType":"YulIdentifier","src":"3562:3:18"},"nativeSrc":"3562:14:18","nodeType":"YulFunctionCall","src":"3562:14:18"},{"name":"domainSeparator","nativeSrc":"3578:15:18","nodeType":"YulIdentifier","src":"3578:15:18"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:18","nodeType":"YulIdentifier","src":"3555:6:18"},"nativeSrc":"3555:39:18","nodeType":"YulFunctionCall","src":"3555:39:18"},"nativeSrc":"3555:39:18","nodeType":"YulExpressionStatement","src":"3555:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:18","nodeType":"YulIdentifier","src":"3618:3:18"},{"kind":"number","nativeSrc":"3623:4:18","nodeType":"YulLiteral","src":"3623:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:18","nodeType":"YulIdentifier","src":"3614:3:18"},"nativeSrc":"3614:14:18","nodeType":"YulFunctionCall","src":"3614:14:18"},{"name":"structHash","nativeSrc":"3630:10:18","nodeType":"YulIdentifier","src":"3630:10:18"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:18","nodeType":"YulIdentifier","src":"3607:6:18"},"nativeSrc":"3607:34:18","nodeType":"YulFunctionCall","src":"3607:34:18"},"nativeSrc":"3607:34:18","nodeType":"YulExpressionStatement","src":"3607:34:18"},{"nativeSrc":"3654:30:18","nodeType":"YulAssignment","src":"3654:30:18","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:18","nodeType":"YulIdentifier","src":"3674:3:18"},{"kind":"number","nativeSrc":"3679:4:18","nodeType":"YulLiteral","src":"3679:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:18","nodeType":"YulIdentifier","src":"3664:9:18"},"nativeSrc":"3664:20:18","nodeType":"YulFunctionCall","src":"3664:20:18"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:18","nodeType":"YulIdentifier","src":"3654:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2952,"isOffset":false,"isSlot":false,"src":"3654:6:18","valueSize":1},{"declaration":2947,"isOffset":false,"isSlot":false,"src":"3578:15:18","valueSize":1},{"declaration":2949,"isOffset":false,"isSlot":false,"src":"3630:10:18","valueSize":1}],"flags":["memory-safe"],"id":2954,"nodeType":"InlineAssembly","src":"3445:249:18"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"2890:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2956,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:18","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:18","nodeType":"VariableDeclaration","scope":2956,"src":"3351:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:18","nodeType":"VariableDeclaration","scope":2956,"src":"3376:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:18"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"digest","nameLocation":"3427:6:18","nodeType":"VariableDeclaration","scope":2956,"src":"3419:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:18"},"scope":2957,"src":"3326:374:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2958,"src":"521:3181:18","usedErrors":[],"usedEvents":[]}],"src":"123:3580:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2981],"IERC165":[2993]},"id":2982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2959,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2982,"sourceUnit":2994,"src":"140:38:19","symbolAliases":[{"foreign":{"id":2960,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"148:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2963,"name":"IERC165","nameLocations":["688:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":2993,"src":"688:7:19"},"id":2964,"nodeType":"InheritanceSpecifier","src":"688:7:19"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"180:479:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2981,"linearizedBaseContracts":[2981,2993],"name":"ERC165","nameLocation":"678:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2992],"body":{"id":2979,"nodeType":"Block","src":"845:64:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"862:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2974,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"882:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2993_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2993_$","typeString":"type(contract IERC165)"}],"id":2973,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2993","typeString":"type(contract IERC165)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2971,"id":2978,"nodeType":"Return","src":"855:47:19"}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"702:56:19","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:19","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:19","nodeType":"VariableDeclaration","scope":2980,"src":"790:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2966,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:19"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"839:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2969,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:19"},"scope":2981,"src":"763:146:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2982,"src":"660:251:19","usedErrors":[],"usedEvents":[]}],"src":"114:798:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2993]},"id":2994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"141:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2993,"linearizedBaseContracts":[2993],"name":"IERC165","nameLocation":"432:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"446:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2992,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:20","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:20","nodeType":"VariableDeclaration","scope":2992,"src":"818:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2986,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:20"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2992,"src":"861:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:20"},"scope":2993,"src":"791:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2994,"src":"422:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:755:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4599],"Panic":[1647],"SafeCast":[6364]},"id":4600,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1648,"src":"129:35:21","symbolAliases":[{"foreign":{"id":2996,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":6365,"src":"165:40:21","symbolAliases":[{"foreign":{"id":2998,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4599,"linearizedBaseContracts":[4599],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3005,"members":[{"id":3001,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":3002,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":3003,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":3004,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":3036,"nodeType":"Block","src":"677:140:21","statements":[{"id":3035,"nodeType":"UncheckedBlock","src":"687:124:21","statements":[{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"c","nameLocation":"719:1:21","nodeType":"VariableDeclaration","scope":3035,"src":"711:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"723:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"727:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"746:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"750:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"nodeType":"IfStatement","src":"742:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3016,"id":3029,"nodeType":"Return","src":"753:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3032,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"798:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3016,"id":3034,"nodeType":"Return","src":"784:16:21"}]}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"475:106:21","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:21","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"a","nameLocation":"610:1:21","nodeType":"VariableDeclaration","scope":3037,"src":"602:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"b","nameLocation":"621:1:21","nodeType":"VariableDeclaration","scope":3037,"src":"613:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:21"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"success","nameLocation":"652:7:21","nodeType":"VariableDeclaration","scope":3037,"src":"647:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3012,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"result","nameLocation":"669:6:21","nodeType":"VariableDeclaration","scope":3037,"src":"661:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:21"},"scope":4599,"src":"586:231:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"1028:113:21","statements":[{"id":3063,"nodeType":"UncheckedBlock","src":"1038:97:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1066:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"1070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3056,"nodeType":"IfStatement","src":"1062:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3048,"id":3055,"nodeType":"Return","src":"1073:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"1118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1122:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3048,"id":3062,"nodeType":"Return","src":"1104:20:21"}]}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"823:109:21","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:21","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"a","nameLocation":"961:1:21","nodeType":"VariableDeclaration","scope":3065,"src":"953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"b","nameLocation":"972:1:21","nodeType":"VariableDeclaration","scope":3065,"src":"964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:21"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"success","nameLocation":"1003:7:21","nodeType":"VariableDeclaration","scope":3065,"src":"998:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3044,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"result","nameLocation":"1020:6:21","nodeType":"VariableDeclaration","scope":3065,"src":"1012:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:21"},"scope":4599,"src":"937:204:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"1355:417:21","statements":[{"id":3105,"nodeType":"UncheckedBlock","src":"1365:401:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1623:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3084,"nodeType":"IfStatement","src":"1619:28:21","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3076,"id":3083,"nodeType":"Return","src":"1631:16:21"}},{"assignments":[3086],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"c","nameLocation":"1669:1:21","nodeType":"VariableDeclaration","scope":3105,"src":"1661:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3090,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1673:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3088,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"1677:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"1696:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1700:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"1705:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"nodeType":"IfStatement","src":"1692:33:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3076,"id":3099,"nodeType":"Return","src":"1708:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3102,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"1753:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3076,"id":3104,"nodeType":"Return","src":"1739:16:21"}]}]},"documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"1147:112:21","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:21","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"a","nameLocation":"1288:1:21","nodeType":"VariableDeclaration","scope":3107,"src":"1280:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"b","nameLocation":"1299:1:21","nodeType":"VariableDeclaration","scope":3107,"src":"1291:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:21"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"success","nameLocation":"1330:7:21","nodeType":"VariableDeclaration","scope":3107,"src":"1325:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"result","nameLocation":"1347:6:21","nodeType":"VariableDeclaration","scope":3107,"src":"1339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:21"},"scope":4599,"src":"1264:508:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"1987:114:21","statements":[{"id":3133,"nodeType":"UncheckedBlock","src":"1997:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2025:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"2021:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3118,"id":3125,"nodeType":"Return","src":"2033:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2078:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2082:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3118,"id":3132,"nodeType":"Return","src":"2064:20:21"}]}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"1778:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:21","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"a","nameLocation":"1920:1:21","nodeType":"VariableDeclaration","scope":3135,"src":"1912:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"b","nameLocation":"1931:1:21","nodeType":"VariableDeclaration","scope":3135,"src":"1923:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:21"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"success","nameLocation":"1962:7:21","nodeType":"VariableDeclaration","scope":3135,"src":"1957:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"result","nameLocation":"1979:6:21","nodeType":"VariableDeclaration","scope":3135,"src":"1971:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:21"},"scope":4599,"src":"1896:205:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"2326:114:21","statements":[{"id":3161,"nodeType":"UncheckedBlock","src":"2336:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2364:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"nodeType":"IfStatement","src":"2360:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3146,"id":3153,"nodeType":"Return","src":"2372:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2417:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2421:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3146,"id":3160,"nodeType":"Return","src":"2403:20:21"}]}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"2107:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:21","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"a","nameLocation":"2259:1:21","nodeType":"VariableDeclaration","scope":3163,"src":"2251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"b","nameLocation":"2270:1:21","nodeType":"VariableDeclaration","scope":3163,"src":"2262:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:21"},"returnParameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"success","nameLocation":"2301:7:21","nodeType":"VariableDeclaration","scope":3163,"src":"2296:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3142,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"result","nameLocation":"2318:6:21","nodeType":"VariableDeclaration","scope":3163,"src":"2310:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:21"},"scope":4599,"src":"2235:205:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3189,"nodeType":"Block","src":"2912:207:21","statements":[{"id":3188,"nodeType":"UncheckedBlock","src":"2922:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"3060:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"3066:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"3070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3182,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3091:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3180,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"3075:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"3075:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3187,"nodeType":"Return","src":"3053:49:21"}]}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"2446:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3190,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:21","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"condition","nameLocation":"2847:9:21","nodeType":"VariableDeclaration","scope":3190,"src":"2842:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3165,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"a","nameLocation":"2866:1:21","nodeType":"VariableDeclaration","scope":3190,"src":"2858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"b","nameLocation":"2877:1:21","nodeType":"VariableDeclaration","scope":3190,"src":"2869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:21"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3190,"src":"2903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:21"},"scope":4599,"src":"2825:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"3256:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3281:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3285:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3204,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3205,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3291:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3273:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3199,"id":3207,"nodeType":"Return","src":"3266:27:21"}]},"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"3125:59:21","text":" @dev Returns the largest of two numbers."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:21","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"a","nameLocation":"3210:1:21","nodeType":"VariableDeclaration","scope":3209,"src":"3202:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"b","nameLocation":"3221:1:21","nodeType":"VariableDeclaration","scope":3209,"src":"3213:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:21"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"3247:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:21"},"scope":4599,"src":"3189:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"3438:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3463:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"3467:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3470:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3224,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"3473:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3219,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3455:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3218,"id":3226,"nodeType":"Return","src":"3448:27:21"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"3306:60:21","text":" @dev Returns the smallest of two numbers."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:21","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"a","nameLocation":"3392:1:21","nodeType":"VariableDeclaration","scope":3228,"src":"3384:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"b","nameLocation":"3403:1:21","nodeType":"VariableDeclaration","scope":3228,"src":"3395:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:21"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"3429:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:21"},"scope":4599,"src":"3371:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"3666:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"3721:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3239,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"3725:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"3731:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"3735:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3237,"id":3249,"nodeType":"Return","src":"3713:28:21"}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"3488:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:21","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"a","nameLocation":"3620:1:21","nodeType":"VariableDeclaration","scope":3251,"src":"3612:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"b","nameLocation":"3631:1:21","nodeType":"VariableDeclaration","scope":3251,"src":"3623:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:21"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"3657:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:21"},"scope":4599,"src":"3595:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"4040:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3272,"nodeType":"IfStatement","src":"4050:150:21","trueBody":{"id":3271,"nodeType":"Block","src":"4062:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":3267,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"4166:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"4166:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3264,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"4154:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"4154:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3270,"nodeType":"ExpressionStatement","src":"4154:35:21"}]}},{"id":3290,"nodeType":"UncheckedBlock","src":"4583:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4630:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3273,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"4614:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"4614:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4641:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3283,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4650:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3260,"id":3289,"nodeType":"Return","src":"4607:49:21"}]}]},"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"3754:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:21","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"a","nameLocation":"3994:1:21","nodeType":"VariableDeclaration","scope":3292,"src":"3986:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"b","nameLocation":"4005:1:21","nodeType":"VariableDeclaration","scope":3292,"src":"3997:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:21"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"4031:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:21"},"scope":4599,"src":"3969:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3428,"nodeType":"Block","src":"5094:4128:21","statements":[{"id":3427,"nodeType":"UncheckedBlock","src":"5104:4112:21","statements":[{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:21","nodeType":"VariableDeclaration","scope":3427,"src":"5433:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5449:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3307,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"5453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:21"},{"assignments":[3311],"declarations":[{"constant":false,"id":3311,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:21","nodeType":"VariableDeclaration","scope":3427,"src":"5513:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3312,"nodeType":"VariableDeclarationStatement","src":"5513:13:21"},{"AST":{"nativeSrc":"5593:122:21","nodeType":"YulBlock","src":"5593:122:21","statements":[{"nativeSrc":"5611:30:21","nodeType":"YulVariableDeclaration","src":"5611:30:21","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:21","nodeType":"YulIdentifier","src":"5628:1:21"},{"name":"y","nativeSrc":"5631:1:21","nodeType":"YulIdentifier","src":"5631:1:21"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:21","nodeType":"YulLiteral","src":"5638:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:21","nodeType":"YulIdentifier","src":"5634:3:21"},"nativeSrc":"5634:6:21","nodeType":"YulFunctionCall","src":"5634:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:21","nodeType":"YulIdentifier","src":"5621:6:21"},"nativeSrc":"5621:20:21","nodeType":"YulFunctionCall","src":"5621:20:21"},"variables":[{"name":"mm","nativeSrc":"5615:2:21","nodeType":"YulTypedName","src":"5615:2:21","type":""}]},{"nativeSrc":"5658:43:21","nodeType":"YulAssignment","src":"5658:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:21","nodeType":"YulIdentifier","src":"5675:2:21"},{"name":"prod0","nativeSrc":"5679:5:21","nodeType":"YulIdentifier","src":"5679:5:21"}],"functionName":{"name":"sub","nativeSrc":"5671:3:21","nodeType":"YulIdentifier","src":"5671:3:21"},"nativeSrc":"5671:14:21","nodeType":"YulFunctionCall","src":"5671:14:21"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:21","nodeType":"YulIdentifier","src":"5690:2:21"},{"name":"prod0","nativeSrc":"5694:5:21","nodeType":"YulIdentifier","src":"5694:5:21"}],"functionName":{"name":"lt","nativeSrc":"5687:2:21","nodeType":"YulIdentifier","src":"5687:2:21"},"nativeSrc":"5687:13:21","nodeType":"YulFunctionCall","src":"5687:13:21"}],"functionName":{"name":"sub","nativeSrc":"5667:3:21","nodeType":"YulIdentifier","src":"5667:3:21"},"nativeSrc":"5667:34:21","nodeType":"YulFunctionCall","src":"5667:34:21"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:21","nodeType":"YulIdentifier","src":"5658:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3305,"isOffset":false,"isSlot":false,"src":"5679:5:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"5694:5:21","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"5658:5:21","valueSize":1},{"declaration":3295,"isOffset":false,"isSlot":false,"src":"5628:1:21","valueSize":1},{"declaration":3297,"isOffset":false,"isSlot":false,"src":"5631:1:21","valueSize":1}],"id":3313,"nodeType":"InlineAssembly","src":"5584:131:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"5796:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"nodeType":"IfStatement","src":"5792:368:21","trueBody":{"id":3321,"nodeType":"Block","src":"5808:352:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"6126:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3318,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6134:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3303,"id":3320,"nodeType":"Return","src":"6119:26:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6270:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3324,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"6285:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"6266:143:21","trueBody":{"id":3340,"nodeType":"Block","src":"6292:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6330:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3333,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6348:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"6348:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3335,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6372:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"6372:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"6322:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3326,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6310:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"6310:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3339,"nodeType":"ExpressionStatement","src":"6310:84:21"}]}},{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:21","nodeType":"VariableDeclaration","scope":3427,"src":"6664:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3344,"nodeType":"VariableDeclarationStatement","src":"6664:17:21"},{"AST":{"nativeSrc":"6704:291:21","nodeType":"YulBlock","src":"6704:291:21","statements":[{"nativeSrc":"6773:38:21","nodeType":"YulAssignment","src":"6773:38:21","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:21","nodeType":"YulIdentifier","src":"6793:1:21"},{"name":"y","nativeSrc":"6796:1:21","nodeType":"YulIdentifier","src":"6796:1:21"},{"name":"denominator","nativeSrc":"6799:11:21","nodeType":"YulIdentifier","src":"6799:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:21","nodeType":"YulIdentifier","src":"6786:6:21"},"nativeSrc":"6786:25:21","nodeType":"YulFunctionCall","src":"6786:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:21","nodeType":"YulIdentifier","src":"6773:9:21"}]},{"nativeSrc":"6893:41:21","nodeType":"YulAssignment","src":"6893:41:21","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:21","nodeType":"YulIdentifier","src":"6906:5:21"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:21","nodeType":"YulIdentifier","src":"6916:9:21"},{"name":"prod0","nativeSrc":"6927:5:21","nodeType":"YulIdentifier","src":"6927:5:21"}],"functionName":{"name":"gt","nativeSrc":"6913:2:21","nodeType":"YulIdentifier","src":"6913:2:21"},"nativeSrc":"6913:20:21","nodeType":"YulFunctionCall","src":"6913:20:21"}],"functionName":{"name":"sub","nativeSrc":"6902:3:21","nodeType":"YulIdentifier","src":"6902:3:21"},"nativeSrc":"6902:32:21","nodeType":"YulFunctionCall","src":"6902:32:21"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:21","nodeType":"YulIdentifier","src":"6893:5:21"}]},{"nativeSrc":"6951:30:21","nodeType":"YulAssignment","src":"6951:30:21","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:21","nodeType":"YulIdentifier","src":"6964:5:21"},{"name":"remainder","nativeSrc":"6971:9:21","nodeType":"YulIdentifier","src":"6971:9:21"}],"functionName":{"name":"sub","nativeSrc":"6960:3:21","nodeType":"YulIdentifier","src":"6960:3:21"},"nativeSrc":"6960:21:21","nodeType":"YulFunctionCall","src":"6960:21:21"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:21","nodeType":"YulIdentifier","src":"6951:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3299,"isOffset":false,"isSlot":false,"src":"6799:11:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"6927:5:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"6951:5:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"6964:5:21","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"6893:5:21","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"6906:5:21","valueSize":1},{"declaration":3343,"isOffset":false,"isSlot":false,"src":"6773:9:21","valueSize":1},{"declaration":3343,"isOffset":false,"isSlot":false,"src":"6916:9:21","valueSize":1},{"declaration":3343,"isOffset":false,"isSlot":false,"src":"6971:9:21","valueSize":1},{"declaration":3295,"isOffset":false,"isSlot":false,"src":"6793:1:21","valueSize":1},{"declaration":3297,"isOffset":false,"isSlot":false,"src":"6796:1:21","valueSize":1}],"id":3345,"nodeType":"InlineAssembly","src":"6695:300:21"},{"assignments":[3347],"declarations":[{"constant":false,"id":3347,"mutability":"mutable","name":"twos","nameLocation":"7207:4:21","nodeType":"VariableDeclaration","scope":3427,"src":"7199:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3354,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7214:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3350,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7233:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:21"},{"AST":{"nativeSrc":"7268:366:21","nodeType":"YulBlock","src":"7268:366:21","statements":[{"nativeSrc":"7333:37:21","nodeType":"YulAssignment","src":"7333:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:21","nodeType":"YulIdentifier","src":"7352:11:21"},{"name":"twos","nativeSrc":"7365:4:21","nodeType":"YulIdentifier","src":"7365:4:21"}],"functionName":{"name":"div","nativeSrc":"7348:3:21","nodeType":"YulIdentifier","src":"7348:3:21"},"nativeSrc":"7348:22:21","nodeType":"YulFunctionCall","src":"7348:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:21","nodeType":"YulIdentifier","src":"7333:11:21"}]},{"nativeSrc":"7437:25:21","nodeType":"YulAssignment","src":"7437:25:21","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:21","nodeType":"YulIdentifier","src":"7450:5:21"},{"name":"twos","nativeSrc":"7457:4:21","nodeType":"YulIdentifier","src":"7457:4:21"}],"functionName":{"name":"div","nativeSrc":"7446:3:21","nodeType":"YulIdentifier","src":"7446:3:21"},"nativeSrc":"7446:16:21","nodeType":"YulFunctionCall","src":"7446:16:21"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:21","nodeType":"YulIdentifier","src":"7437:5:21"}]},{"nativeSrc":"7581:39:21","nodeType":"YulAssignment","src":"7581:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:21","nodeType":"YulLiteral","src":"7601:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:21","nodeType":"YulIdentifier","src":"7604:4:21"}],"functionName":{"name":"sub","nativeSrc":"7597:3:21","nodeType":"YulIdentifier","src":"7597:3:21"},"nativeSrc":"7597:12:21","nodeType":"YulFunctionCall","src":"7597:12:21"},{"name":"twos","nativeSrc":"7611:4:21","nodeType":"YulIdentifier","src":"7611:4:21"}],"functionName":{"name":"div","nativeSrc":"7593:3:21","nodeType":"YulIdentifier","src":"7593:3:21"},"nativeSrc":"7593:23:21","nodeType":"YulFunctionCall","src":"7593:23:21"},{"kind":"number","nativeSrc":"7618:1:21","nodeType":"YulLiteral","src":"7618:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:21","nodeType":"YulIdentifier","src":"7589:3:21"},"nativeSrc":"7589:31:21","nodeType":"YulFunctionCall","src":"7589:31:21"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:21","nodeType":"YulIdentifier","src":"7581:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3299,"isOffset":false,"isSlot":false,"src":"7333:11:21","valueSize":1},{"declaration":3299,"isOffset":false,"isSlot":false,"src":"7352:11:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"7437:5:21","valueSize":1},{"declaration":3305,"isOffset":false,"isSlot":false,"src":"7450:5:21","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"7365:4:21","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"7457:4:21","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"7581:4:21","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"7604:4:21","valueSize":1},{"declaration":3347,"isOffset":false,"isSlot":false,"src":"7611:4:21","valueSize":1}],"id":3355,"nodeType":"InlineAssembly","src":"7259:375:21"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"7700:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"7709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3358,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"7717:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ExpressionStatement","src":"7700:21:21"},{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:21","nodeType":"VariableDeclaration","scope":3427,"src":"8056:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8079:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:21"},{"expression":{"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8312:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8327:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3374,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8341:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3378,"nodeType":"ExpressionStatement","src":"8312:36:21"},{"expression":{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8382:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8397:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3382,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8411:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"nodeType":"ExpressionStatement","src":"8382:36:21"},{"expression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8454:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8469:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3390,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3394,"nodeType":"ExpressionStatement","src":"8454:36:21"},{"expression":{"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8525:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8540:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3398,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8554:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3402,"nodeType":"ExpressionStatement","src":"8525:36:21"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8613:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3406,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8627:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"8598:36:21"},{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8672:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8687:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3414,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"8672:36:21"},{"expression":{"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"9154:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"9163:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3421,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"9171:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3424,"nodeType":"ExpressionStatement","src":"9154:24:21"},{"expression":{"id":3425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"9199:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3303,"id":3426,"nodeType":"Return","src":"9192:13:21"}]}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"4679:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:21","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"x","nameLocation":"5020:1:21","nodeType":"VariableDeclaration","scope":3429,"src":"5012:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"y","nameLocation":"5031:1:21","nodeType":"VariableDeclaration","scope":3429,"src":"5023:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:21","nodeType":"VariableDeclaration","scope":3429,"src":"5034:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:21"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"result","nameLocation":"5086:6:21","nodeType":"VariableDeclaration","scope":3429,"src":"5078:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:21"},"scope":4599,"src":"4996:4226:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3465,"nodeType":"Block","src":"9461:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3445,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"9485:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3446,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"9488:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3447,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"9491:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3444,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3429,3466],"referencedDeclaration":3429,"src":"9478:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3452,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"9539:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":3451,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"9522:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3005_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"9559:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3456,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"9562:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3457,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"9565:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3449,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"9506:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"9506:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3443,"id":3464,"nodeType":"Return","src":"9471:111:21"}]},"documentation":{"id":3430,"nodeType":"StructuredDocumentation","src":"9228:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3466,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:21","nodeType":"FunctionDefinition","parameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"x","nameLocation":"9375:1:21","nodeType":"VariableDeclaration","scope":3466,"src":"9367:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"y","nameLocation":"9386:1:21","nodeType":"VariableDeclaration","scope":3466,"src":"9378:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:21","nodeType":"VariableDeclaration","scope":3466,"src":"9389:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:21","nodeType":"VariableDeclaration","scope":3466,"src":"9410:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":3438,"nodeType":"UserDefinedTypeName","pathNode":{"id":3437,"name":"Rounding","nameLocations":["9410:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"9410:8:21"},"referencedDeclaration":3005,"src":"9410:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:21"},"returnParameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3466,"src":"9452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:21"},"scope":4599,"src":"9351:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"10223:1849:21","statements":[{"id":3561,"nodeType":"UncheckedBlock","src":"10233:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10261:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3481,"nodeType":"IfStatement","src":"10257:20:21","trueBody":{"expression":{"hexValue":"30","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3475,"id":3480,"nodeType":"Return","src":"10269:8:21"}},{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:21","nodeType":"VariableDeclaration","scope":3561,"src":"10748:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10768:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3485,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10772:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:21"},{"assignments":[3489],"declarations":[{"constant":false,"id":3489,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:21","nodeType":"VariableDeclaration","scope":3561,"src":"10787:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3491,"initialValue":{"id":3490,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10801:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:21"},{"assignments":[3493],"declarations":[{"constant":false,"id":3493,"mutability":"mutable","name":"x","nameLocation":"10945:1:21","nodeType":"VariableDeclaration","scope":3561,"src":"10938:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3492,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3495,"initialValue":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:21"},{"assignments":[3497],"declarations":[{"constant":false,"id":3497,"mutability":"mutable","name":"y","nameLocation":"10971:1:21","nodeType":"VariableDeclaration","scope":3561,"src":"10964:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3496,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3499,"initialValue":{"hexValue":"31","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:21"},{"body":{"id":3536,"nodeType":"Block","src":"11014:882:21","statements":[{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:21","nodeType":"VariableDeclaration","scope":3536,"src":"11032:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"11051:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3506,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"11057:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:21"},{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3509,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"11086:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3510,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"11091:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3511,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3512,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"11191:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"11436:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"11442:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3515,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"11454:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3520,"nodeType":"ExpressionStatement","src":"11085:395:21"},{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3521,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"11500:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3522,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11503:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3524,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11585:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"11839:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11843:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3529,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"11854:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3527,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:21","typeDescriptions":{}}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3535,"nodeType":"ExpressionStatement","src":"11499:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"10998:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3537,"nodeType":"WhileStatement","src":"10991:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3538,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"11914:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"11910:22:21","trueBody":{"expression":{"hexValue":"30","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3475,"id":3542,"nodeType":"Return","src":"11924:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"11983:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:21","subExpression":{"id":3551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12003:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:21","typeDescriptions":{}}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3557,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12015:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:21","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3544,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"11975:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3475,"id":3560,"nodeType":"Return","src":"11968:50:21"}]}]},"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"9595:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:21","nodeType":"FunctionDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"a","nameLocation":"10177:1:21","nodeType":"VariableDeclaration","scope":3563,"src":"10169:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"n","nameLocation":"10188:1:21","nodeType":"VariableDeclaration","scope":3563,"src":"10180:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:21"},"returnParameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"10214:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:21"},"scope":4599,"src":"10153:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"12672:82:21","statements":[{"id":3582,"nodeType":"UncheckedBlock","src":"12682:66:21","statements":[{"expression":{"arguments":[{"id":3575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"12725:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"12728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3579,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"12735:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3573,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"12713:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4599_$","typeString":"type(library Math)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3620,"src":"12713:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3572,"id":3581,"nodeType":"Return","src":"12706:31:21"}]}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"12078:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:21","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"a","nameLocation":"12626:1:21","nodeType":"VariableDeclaration","scope":3584,"src":"12618:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"p","nameLocation":"12637:1:21","nodeType":"VariableDeclaration","scope":3584,"src":"12629:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:21"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"12663:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:21"},"scope":4599,"src":"12597:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3619,"nodeType":"Block","src":"13524:174:21","statements":[{"assignments":[3597,3599],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"success","nameLocation":"13540:7:21","nodeType":"VariableDeclaration","scope":3619,"src":"13535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3596,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"result","nameLocation":"13557:6:21","nodeType":"VariableDeclaration","scope":3619,"src":"13549:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"arguments":[{"id":3601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"13577:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"13580:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3603,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"13583:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3600,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3644,3726],"referencedDeclaration":3644,"src":"13567:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:21"},{"condition":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:21","subExpression":{"id":3606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"13600:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3616,"nodeType":"IfStatement","src":"13595:74:21","trueBody":{"id":3615,"nodeType":"Block","src":"13609:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":3611,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"13635:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"13635:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3608,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"13623:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"13623:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3614,"nodeType":"ExpressionStatement","src":"13623:35:21"}]}},{"expression":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"13685:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3595,"id":3618,"nodeType":"Return","src":"13678:13:21"}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"12760:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:21","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"b","nameLocation":"13467:1:21","nodeType":"VariableDeclaration","scope":3620,"src":"13459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"e","nameLocation":"13478:1:21","nodeType":"VariableDeclaration","scope":3620,"src":"13470:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"m","nameLocation":"13489:1:21","nodeType":"VariableDeclaration","scope":3620,"src":"13481:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:21"},"returnParameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3620,"src":"13515:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:21"},"scope":4599,"src":"13443:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"14552:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3634,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"14566:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3641,"nodeType":"IfStatement","src":"14562:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3633,"id":3640,"nodeType":"Return","src":"14574:17:21"}},{"AST":{"nativeSrc":"14626:1413:21","nodeType":"YulBlock","src":"14626:1413:21","statements":[{"nativeSrc":"14640:22:21","nodeType":"YulVariableDeclaration","src":"14640:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:21","nodeType":"YulLiteral","src":"14657:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:21","nodeType":"YulIdentifier","src":"14651:5:21"},"nativeSrc":"14651:11:21","nodeType":"YulFunctionCall","src":"14651:11:21"},"variables":[{"name":"ptr","nativeSrc":"14644:3:21","nodeType":"YulTypedName","src":"14644:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:21","nodeType":"YulIdentifier","src":"15570:3:21"},{"kind":"number","nativeSrc":"15575:4:21","nodeType":"YulLiteral","src":"15575:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:21","nodeType":"YulIdentifier","src":"15563:6:21"},"nativeSrc":"15563:17:21","nodeType":"YulFunctionCall","src":"15563:17:21"},"nativeSrc":"15563:17:21","nodeType":"YulExpressionStatement","src":"15563:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:21","nodeType":"YulIdentifier","src":"15604:3:21"},{"kind":"number","nativeSrc":"15609:4:21","nodeType":"YulLiteral","src":"15609:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:21","nodeType":"YulIdentifier","src":"15600:3:21"},"nativeSrc":"15600:14:21","nodeType":"YulFunctionCall","src":"15600:14:21"},{"kind":"number","nativeSrc":"15616:4:21","nodeType":"YulLiteral","src":"15616:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:21","nodeType":"YulIdentifier","src":"15593:6:21"},"nativeSrc":"15593:28:21","nodeType":"YulFunctionCall","src":"15593:28:21"},"nativeSrc":"15593:28:21","nodeType":"YulExpressionStatement","src":"15593:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:21","nodeType":"YulIdentifier","src":"15645:3:21"},{"kind":"number","nativeSrc":"15650:4:21","nodeType":"YulLiteral","src":"15650:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:21","nodeType":"YulIdentifier","src":"15641:3:21"},"nativeSrc":"15641:14:21","nodeType":"YulFunctionCall","src":"15641:14:21"},{"kind":"number","nativeSrc":"15657:4:21","nodeType":"YulLiteral","src":"15657:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:21","nodeType":"YulIdentifier","src":"15634:6:21"},"nativeSrc":"15634:28:21","nodeType":"YulFunctionCall","src":"15634:28:21"},"nativeSrc":"15634:28:21","nodeType":"YulExpressionStatement","src":"15634:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:21","nodeType":"YulIdentifier","src":"15686:3:21"},{"kind":"number","nativeSrc":"15691:4:21","nodeType":"YulLiteral","src":"15691:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:21","nodeType":"YulIdentifier","src":"15682:3:21"},"nativeSrc":"15682:14:21","nodeType":"YulFunctionCall","src":"15682:14:21"},{"name":"b","nativeSrc":"15698:1:21","nodeType":"YulIdentifier","src":"15698:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:21","nodeType":"YulIdentifier","src":"15675:6:21"},"nativeSrc":"15675:25:21","nodeType":"YulFunctionCall","src":"15675:25:21"},"nativeSrc":"15675:25:21","nodeType":"YulExpressionStatement","src":"15675:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:21","nodeType":"YulIdentifier","src":"15724:3:21"},{"kind":"number","nativeSrc":"15729:4:21","nodeType":"YulLiteral","src":"15729:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:21","nodeType":"YulIdentifier","src":"15720:3:21"},"nativeSrc":"15720:14:21","nodeType":"YulFunctionCall","src":"15720:14:21"},{"name":"e","nativeSrc":"15736:1:21","nodeType":"YulIdentifier","src":"15736:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:21","nodeType":"YulIdentifier","src":"15713:6:21"},"nativeSrc":"15713:25:21","nodeType":"YulFunctionCall","src":"15713:25:21"},"nativeSrc":"15713:25:21","nodeType":"YulExpressionStatement","src":"15713:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:21","nodeType":"YulIdentifier","src":"15762:3:21"},{"kind":"number","nativeSrc":"15767:4:21","nodeType":"YulLiteral","src":"15767:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:21","nodeType":"YulIdentifier","src":"15758:3:21"},"nativeSrc":"15758:14:21","nodeType":"YulFunctionCall","src":"15758:14:21"},{"name":"m","nativeSrc":"15774:1:21","nodeType":"YulIdentifier","src":"15774:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:21","nodeType":"YulIdentifier","src":"15751:6:21"},"nativeSrc":"15751:25:21","nodeType":"YulFunctionCall","src":"15751:25:21"},"nativeSrc":"15751:25:21","nodeType":"YulExpressionStatement","src":"15751:25:21"},{"nativeSrc":"15938:57:21","nodeType":"YulAssignment","src":"15938:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:21","nodeType":"YulIdentifier","src":"15960:3:21"},"nativeSrc":"15960:5:21","nodeType":"YulFunctionCall","src":"15960:5:21"},{"kind":"number","nativeSrc":"15967:4:21","nodeType":"YulLiteral","src":"15967:4:21","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:21","nodeType":"YulIdentifier","src":"15973:3:21"},{"kind":"number","nativeSrc":"15978:4:21","nodeType":"YulLiteral","src":"15978:4:21","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:21","nodeType":"YulLiteral","src":"15984:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:21","nodeType":"YulLiteral","src":"15990:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:21","nodeType":"YulIdentifier","src":"15949:10:21"},"nativeSrc":"15949:46:21","nodeType":"YulFunctionCall","src":"15949:46:21"},"variableNames":[{"name":"success","nativeSrc":"15938:7:21","nodeType":"YulIdentifier","src":"15938:7:21"}]},{"nativeSrc":"16008:21:21","nodeType":"YulAssignment","src":"16008:21:21","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:21","nodeType":"YulLiteral","src":"16024:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:21","nodeType":"YulIdentifier","src":"16018:5:21"},"nativeSrc":"16018:11:21","nodeType":"YulFunctionCall","src":"16018:11:21"},"variableNames":[{"name":"result","nativeSrc":"16008:6:21","nodeType":"YulIdentifier","src":"16008:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3623,"isOffset":false,"isSlot":false,"src":"15698:1:21","valueSize":1},{"declaration":3625,"isOffset":false,"isSlot":false,"src":"15736:1:21","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"15774:1:21","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"16008:6:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"15938:7:21","valueSize":1}],"flags":["memory-safe"],"id":3642,"nodeType":"InlineAssembly","src":"14601:1438:21"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"13704:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:21","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"b","nameLocation":"14474:1:21","nodeType":"VariableDeclaration","scope":3644,"src":"14466:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"e","nameLocation":"14485:1:21","nodeType":"VariableDeclaration","scope":3644,"src":"14477:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"m","nameLocation":"14496:1:21","nodeType":"VariableDeclaration","scope":3644,"src":"14488:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:21"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"success","nameLocation":"14527:7:21","nodeType":"VariableDeclaration","scope":3644,"src":"14522:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3629,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"result","nameLocation":"14544:6:21","nodeType":"VariableDeclaration","scope":3644,"src":"14536:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:21"},"scope":4599,"src":"14447:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"16242:179:21","statements":[{"assignments":[3657,3659],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"success","nameLocation":"16258:7:21","nodeType":"VariableDeclaration","scope":3679,"src":"16253:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3656,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"result","nameLocation":"16280:6:21","nodeType":"VariableDeclaration","scope":3679,"src":"16267:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3658,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3665,"initialValue":{"arguments":[{"id":3661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"16300:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3662,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"16303:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3663,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"16306:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3660,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3644,3726],"referencedDeclaration":3726,"src":"16290:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:21"},{"condition":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:21","subExpression":{"id":3666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"16323:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3676,"nodeType":"IfStatement","src":"16318:74:21","trueBody":{"id":3675,"nodeType":"Block","src":"16332:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":3671,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"16358:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"16358:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3668,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"16346:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1647_$","typeString":"type(library Panic)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"16346:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3674,"nodeType":"ExpressionStatement","src":"16346:35:21"}]}},{"expression":{"id":3677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"16408:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3655,"id":3678,"nodeType":"Return","src":"16401:13:21"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"16051:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:21","nodeType":"FunctionDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"b","nameLocation":"16170:1:21","nodeType":"VariableDeclaration","scope":3680,"src":"16157:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3646,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"e","nameLocation":"16186:1:21","nodeType":"VariableDeclaration","scope":3680,"src":"16173:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3648,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"m","nameLocation":"16202:1:21","nodeType":"VariableDeclaration","scope":3680,"src":"16189:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3650,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:21"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3680,"src":"16228:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3653,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:21"},"scope":4599,"src":"16141:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"16675:771:21","statements":[{"condition":{"arguments":[{"id":3695,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"16700:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3694,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"16689:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"16685:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3698,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3693,"id":3703,"nodeType":"Return","src":"16704:28:21"}},{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:21","nodeType":"VariableDeclaration","scope":3725,"src":"16743:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3709,"initialValue":{"expression":{"id":3707,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"16758:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:21","memberName":"length","nodeType":"MemberAccess","src":"16758:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:21"},{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"16848:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"16874:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:21","memberName":"length","nodeType":"MemberAccess","src":"16874:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3715,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"16884:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:21","memberName":"length","nodeType":"MemberAccess","src":"16884:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3717,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"16894:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"16900:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3719,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"16903:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3720,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"16906:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3711,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3723,"nodeType":"ExpressionStatement","src":"16848:60:21"},{"AST":{"nativeSrc":"16944:496:21","nodeType":"YulBlock","src":"16944:496:21","statements":[{"nativeSrc":"16958:32:21","nodeType":"YulVariableDeclaration","src":"16958:32:21","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:21","nodeType":"YulIdentifier","src":"16977:6:21"},{"kind":"number","nativeSrc":"16985:4:21","nodeType":"YulLiteral","src":"16985:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:21","nodeType":"YulIdentifier","src":"16973:3:21"},"nativeSrc":"16973:17:21","nodeType":"YulFunctionCall","src":"16973:17:21"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:21","nodeType":"YulTypedName","src":"16962:7:21","type":""}]},{"nativeSrc":"17080:73:21","nodeType":"YulAssignment","src":"17080:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:21","nodeType":"YulIdentifier","src":"17102:3:21"},"nativeSrc":"17102:5:21","nodeType":"YulFunctionCall","src":"17102:5:21"},{"kind":"number","nativeSrc":"17109:4:21","nodeType":"YulLiteral","src":"17109:4:21","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:21","nodeType":"YulIdentifier","src":"17115:7:21"},{"arguments":[{"name":"result","nativeSrc":"17130:6:21","nodeType":"YulIdentifier","src":"17130:6:21"}],"functionName":{"name":"mload","nativeSrc":"17124:5:21","nodeType":"YulIdentifier","src":"17124:5:21"},"nativeSrc":"17124:13:21","nodeType":"YulFunctionCall","src":"17124:13:21"},{"name":"dataPtr","nativeSrc":"17139:7:21","nodeType":"YulIdentifier","src":"17139:7:21"},{"name":"mLen","nativeSrc":"17148:4:21","nodeType":"YulIdentifier","src":"17148:4:21"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:21","nodeType":"YulIdentifier","src":"17091:10:21"},"nativeSrc":"17091:62:21","nodeType":"YulFunctionCall","src":"17091:62:21"},"variableNames":[{"name":"success","nativeSrc":"17080:7:21","nodeType":"YulIdentifier","src":"17080:7:21"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:21","nodeType":"YulIdentifier","src":"17309:6:21"},{"name":"mLen","nativeSrc":"17317:4:21","nodeType":"YulIdentifier","src":"17317:4:21"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:21","nodeType":"YulIdentifier","src":"17302:6:21"},"nativeSrc":"17302:20:21","nodeType":"YulFunctionCall","src":"17302:20:21"},"nativeSrc":"17302:20:21","nodeType":"YulExpressionStatement","src":"17302:20:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:21","nodeType":"YulLiteral","src":"17405:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:21","nodeType":"YulIdentifier","src":"17415:7:21"},{"name":"mLen","nativeSrc":"17424:4:21","nodeType":"YulIdentifier","src":"17424:4:21"}],"functionName":{"name":"add","nativeSrc":"17411:3:21","nodeType":"YulIdentifier","src":"17411:3:21"},"nativeSrc":"17411:18:21","nodeType":"YulFunctionCall","src":"17411:18:21"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:21","nodeType":"YulIdentifier","src":"17398:6:21"},"nativeSrc":"17398:32:21","nodeType":"YulFunctionCall","src":"17398:32:21"},"nativeSrc":"17398:32:21","nodeType":"YulExpressionStatement","src":"17398:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3706,"isOffset":false,"isSlot":false,"src":"17148:4:21","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"17317:4:21","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"17424:4:21","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"16977:6:21","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"17130:6:21","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"17309:6:21","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"17080:7:21","valueSize":1}],"flags":["memory-safe"],"id":3724,"nodeType":"InlineAssembly","src":"16919:521:21"}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"16427:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:21","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"b","nameLocation":"16561:1:21","nodeType":"VariableDeclaration","scope":3726,"src":"16548:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3682,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"e","nameLocation":"16585:1:21","nodeType":"VariableDeclaration","scope":3726,"src":"16572:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3684,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"m","nameLocation":"16609:1:21","nodeType":"VariableDeclaration","scope":3726,"src":"16596:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3686,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:21"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"success","nameLocation":"16645:7:21","nodeType":"VariableDeclaration","scope":3726,"src":"16640:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3689,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"result","nameLocation":"16667:6:21","nodeType":"VariableDeclaration","scope":3726,"src":"16654:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3691,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:21"},"scope":4599,"src":"16520:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"17601:176:21","statements":[{"body":{"id":3754,"nodeType":"Block","src":"17658:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3745,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"17676:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3747,"indexExpression":{"id":3746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"17686:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3753,"nodeType":"IfStatement","src":"17672:68:21","trueBody":{"id":3752,"nodeType":"Block","src":"17695:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3733,"id":3751,"nodeType":"Return","src":"17713:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"17631:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3739,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"17635:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:21","memberName":"length","nodeType":"MemberAccess","src":"17635:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3755,"initializationExpression":{"assignments":[3735],"declarations":[{"constant":false,"id":3735,"mutability":"mutable","name":"i","nameLocation":"17624:1:21","nodeType":"VariableDeclaration","scope":3755,"src":"17616:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:21","subExpression":{"id":3742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"17655:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"17653:3:21"},"nodeType":"ForStatement","src":"17611:139:21"},{"expression":{"hexValue":"74727565","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3733,"id":3757,"nodeType":"Return","src":"17759:11:21"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"17452:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:21","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:21","nodeType":"VariableDeclaration","scope":3759,"src":"17549:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:21"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"17595:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3731,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:21"},"scope":4599,"src":"17529:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3977,"nodeType":"Block","src":"18137:5124:21","statements":[{"id":3976,"nodeType":"UncheckedBlock","src":"18147:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"18241:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3773,"nodeType":"IfStatement","src":"18237:53:21","trueBody":{"id":3772,"nodeType":"Block","src":"18249:41:21","statements":[{"expression":{"id":3770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"18274:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3766,"id":3771,"nodeType":"Return","src":"18267:8:21"}]}},{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"aa","nameLocation":"19225:2:21","nodeType":"VariableDeclaration","scope":3976,"src":"19217:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"initialValue":{"id":3776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"19230:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:21"},{"assignments":[3779],"declarations":[{"constant":false,"id":3779,"mutability":"mutable","name":"xn","nameLocation":"19253:2:21","nodeType":"VariableDeclaration","scope":3976,"src":"19245:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3781,"initialValue":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3797,"nodeType":"IfStatement","src":"19274:92:21","trueBody":{"id":3796,"nodeType":"Block","src":"19296:70:21","statements":[{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3788,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19314:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ExpressionStatement","src":"19314:10:21"},{"expression":{"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19342:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3795,"nodeType":"ExpressionStatement","src":"19342:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19383:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"19379:90:21","trueBody":{"id":3812,"nodeType":"Block","src":"19400:69:21","statements":[{"expression":{"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3804,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19418:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3807,"nodeType":"ExpressionStatement","src":"19418:9:21"},{"expression":{"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19445:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3811,"nodeType":"ExpressionStatement","src":"19445:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19486:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3829,"nodeType":"IfStatement","src":"19482:90:21","trueBody":{"id":3828,"nodeType":"Block","src":"19503:69:21","statements":[{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3820,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19521:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"19521:9:21"},{"expression":{"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3824,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19548:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3827,"nodeType":"ExpressionStatement","src":"19548:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19589:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"IfStatement","src":"19585:89:21","trueBody":{"id":3844,"nodeType":"Block","src":"19606:68:21","statements":[{"expression":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3836,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19624:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3839,"nodeType":"ExpressionStatement","src":"19624:9:21"},{"expression":{"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3840,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19651:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ExpressionStatement","src":"19651:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19691:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"IfStatement","src":"19687:87:21","trueBody":{"id":3860,"nodeType":"Block","src":"19707:67:21","statements":[{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19725:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"19725:8:21"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3856,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19751:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ExpressionStatement","src":"19751:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19791:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3877,"nodeType":"IfStatement","src":"19787:87:21","trueBody":{"id":3876,"nodeType":"Block","src":"19807:67:21","statements":[{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19825:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"19825:8:21"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19851:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"19851:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19891:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"nodeType":"IfStatement","src":"19887:61:21","trueBody":{"id":3888,"nodeType":"Block","src":"19907:41:21","statements":[{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"19925:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3887,"nodeType":"ExpressionStatement","src":"19925:8:21"}]}},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"20368:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"20378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"20368:18:21"},{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3899,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22273:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22279:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22284:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3902,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22288:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"22273:23:21"},{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22382:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22388:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22393:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3913,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22397:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3920,"nodeType":"ExpressionStatement","src":"22382:23:21"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22493:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22499:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22504:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22508:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"22493:23:21"},{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22602:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22608:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22613:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22617:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3942,"nodeType":"ExpressionStatement","src":"22602:23:21"},{"expression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3943,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22712:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22718:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22723:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22727:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ExpressionStatement","src":"22712:23:21"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22822:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22828:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"22833:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3957,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"22837:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"22822:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"23211:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"23232:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"23237:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3970,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"23241:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3966,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"23216:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"23216:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3766,"id":3975,"nodeType":"Return","src":"23204:40:21"}]}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"17783:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:21","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"a","nameLocation":"18102:1:21","nodeType":"VariableDeclaration","scope":3978,"src":"18094:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:21"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"18128:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:21"},"scope":4599,"src":"18080:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"23434:171:21","statements":[{"id":4010,"nodeType":"UncheckedBlock","src":"23444:155:21","statements":[{"assignments":[3990],"declarations":[{"constant":false,"id":3990,"mutability":"mutable","name":"result","nameLocation":"23476:6:21","nodeType":"VariableDeclaration","scope":4010,"src":"23468:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"arguments":[{"id":3992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"23490:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3991,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3978,4012],"referencedDeclaration":3978,"src":"23485:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"23513:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3999,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"23555:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":3998,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"23538:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3005_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"23568:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"23577:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"23586:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3996,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"23522:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"23522:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3988,"id":4009,"nodeType":"Return","src":"23506:82:21"}]}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"23267:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:21","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"a","nameLocation":"23380:1:21","nodeType":"VariableDeclaration","scope":4012,"src":"23372:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:21","nodeType":"VariableDeclaration","scope":4012,"src":"23383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":3983,"nodeType":"UserDefinedTypeName","pathNode":{"id":3982,"name":"Rounding","nameLocations":["23383:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"23383:8:21"},"referencedDeclaration":3005,"src":"23383:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:21"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"23425:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:21"},"scope":4599,"src":"23358:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"23796:981:21","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"result","nameLocation":"23814:6:21","nodeType":"VariableDeclaration","scope":4207,"src":"23806:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:21"},{"assignments":[4025],"declarations":[{"constant":false,"id":4025,"mutability":"mutable","name":"exp","nameLocation":"23842:3:21","nodeType":"VariableDeclaration","scope":4207,"src":"23834:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4026,"nodeType":"VariableDeclarationStatement","src":"23834:11:21"},{"id":4204,"nodeType":"UncheckedBlock","src":"23855:893:21","statements":[{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4027,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"23879:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"23907:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4029,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"23891:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"23891:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"23879:51:21"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"23944:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4044,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"23954:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"23944:13:21"},{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"23971:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4048,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"23981:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4050,"nodeType":"ExpressionStatement","src":"23971:13:21"},{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4051,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"23999:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24026:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24010:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24010:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4066,"nodeType":"ExpressionStatement","src":"23999:49:21"},{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24062:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4068,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24072:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"24062:13:21"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24089:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4072,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24099:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4074,"nodeType":"ExpressionStatement","src":"24089:13:21"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4075,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24117:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24144:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24128:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24128:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4090,"nodeType":"ExpressionStatement","src":"24117:49:21"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24180:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4092,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24190:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"24180:13:21"},{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24207:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4096,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24217:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"24207:13:21"},{"expression":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4099,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24235:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24262:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24246:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24246:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4114,"nodeType":"ExpressionStatement","src":"24235:49:21"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24298:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4116,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24308:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"24298:13:21"},{"expression":{"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24325:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4120,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24335:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4122,"nodeType":"ExpressionStatement","src":"24325:13:21"},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24353:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4125,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24363:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24363:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4138,"nodeType":"ExpressionStatement","src":"24353:47:21"},{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24414:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4140,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24424:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4142,"nodeType":"ExpressionStatement","src":"24414:13:21"},{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24441:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4144,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24451:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"24441:13:21"},{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4147,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24469:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24495:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4149,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24479:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24479:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"24469:47:21"},{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24530:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4164,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24540:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4166,"nodeType":"ExpressionStatement","src":"24530:13:21"},{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24557:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4168,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24567:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"nodeType":"ExpressionStatement","src":"24557:13:21"},{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24585:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4173,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24595:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24595:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"24585:47:21"},{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24646:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4188,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24656:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"24646:13:21"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24673:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4192,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24683:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"24673:13:21"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24701:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"24727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4196,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"24711:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"24711:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"24701:36:21"}]},{"expression":{"id":4205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"24764:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4019,"id":4206,"nodeType":"Return","src":"24757:13:21"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"23611:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:21","nodeType":"FunctionDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"value","nameLocation":"23757:5:21","nodeType":"VariableDeclaration","scope":4208,"src":"23749:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:21"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"23787:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:21"},"scope":4599,"src":"23735:1042:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"25010:175:21","statements":[{"id":4240,"nodeType":"UncheckedBlock","src":"25020:159:21","statements":[{"assignments":[4220],"declarations":[{"constant":false,"id":4220,"mutability":"mutable","name":"result","nameLocation":"25052:6:21","nodeType":"VariableDeclaration","scope":4240,"src":"25044:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4224,"initialValue":{"arguments":[{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"25066:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4221,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4208,4242],"referencedDeclaration":4208,"src":"25061:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"25093:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4229,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"25135:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":4228,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"25118:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3005_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"25153:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"25162:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4226,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"25102:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"25102:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4218,"id":4239,"nodeType":"Return","src":"25086:82:21"}]}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"24783:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:21","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"value","nameLocation":"24952:5:21","nodeType":"VariableDeclaration","scope":4242,"src":"24944:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:21","nodeType":"VariableDeclaration","scope":4242,"src":"24959:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":4213,"nodeType":"UserDefinedTypeName","pathNode":{"id":4212,"name":"Rounding","nameLocations":["24959:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"24959:8:21"},"referencedDeclaration":3005,"src":"24959:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:21"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"25001:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:21"},"scope":4599,"src":"24930:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4370,"nodeType":"Block","src":"25378:854:21","statements":[{"assignments":[4251],"declarations":[{"constant":false,"id":4251,"mutability":"mutable","name":"result","nameLocation":"25396:6:21","nodeType":"VariableDeclaration","scope":4370,"src":"25388:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4253,"initialValue":{"hexValue":"30","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:21"},{"id":4367,"nodeType":"UncheckedBlock","src":"25416:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25444:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4270,"nodeType":"IfStatement","src":"25440:103:21","trueBody":{"id":4269,"nodeType":"Block","src":"25463:80:21","statements":[{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25481:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"25481:17:21"},{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"25516:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4268,"nodeType":"ExpressionStatement","src":"25516:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25560:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"25556:103:21","trueBody":{"id":4286,"nodeType":"Block","src":"25579:80:21","statements":[{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25597:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"25597:17:21"},{"expression":{"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"25632:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4285,"nodeType":"ExpressionStatement","src":"25632:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25676:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"25672:103:21","trueBody":{"id":4303,"nodeType":"Block","src":"25695:80:21","statements":[{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25713:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4298,"nodeType":"ExpressionStatement","src":"25713:17:21"},{"expression":{"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"25748:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4302,"nodeType":"ExpressionStatement","src":"25748:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25792:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4321,"nodeType":"IfStatement","src":"25788:100:21","trueBody":{"id":4320,"nodeType":"Block","src":"25810:78:21","statements":[{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25828:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"25828:16:21"},{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"25862:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"25862:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25905:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"nodeType":"IfStatement","src":"25901:100:21","trueBody":{"id":4337,"nodeType":"Block","src":"25923:78:21","statements":[{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"25941:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"25941:16:21"},{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"25975:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"nodeType":"ExpressionStatement","src":"25975:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"26018:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"IfStatement","src":"26014:100:21","trueBody":{"id":4354,"nodeType":"Block","src":"26036:78:21","statements":[{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"26054:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"26054:16:21"},{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"26088:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4353,"nodeType":"ExpressionStatement","src":"26088:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"26131:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"26127:66:21","trueBody":{"id":4365,"nodeType":"Block","src":"26149:44:21","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"26167:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"26167:11:21"}]}}]},{"expression":{"id":4368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"26219:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4249,"id":4369,"nodeType":"Return","src":"26212:13:21"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"25191:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4371,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:21","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"25339:5:21","nodeType":"VariableDeclaration","scope":4371,"src":"25331:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:21"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4371,"src":"25369:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:21"},"scope":4599,"src":"25316:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4404,"nodeType":"Block","src":"26467:177:21","statements":[{"id":4403,"nodeType":"UncheckedBlock","src":"26477:161:21","statements":[{"assignments":[4383],"declarations":[{"constant":false,"id":4383,"mutability":"mutable","name":"result","nameLocation":"26509:6:21","nodeType":"VariableDeclaration","scope":4403,"src":"26501:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4387,"initialValue":{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"26524:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4371,4405],"referencedDeclaration":4371,"src":"26518:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"26551:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4392,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"26593:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":4391,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"26576:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3005_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"26612:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"26621:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"26560:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"26560:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4381,"id":4402,"nodeType":"Return","src":"26544:83:21"}]}]},"documentation":{"id":4372,"nodeType":"StructuredDocumentation","src":"26238:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4405,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:21","nodeType":"FunctionDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"value","nameLocation":"26409:5:21","nodeType":"VariableDeclaration","scope":4405,"src":"26401:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:21","nodeType":"VariableDeclaration","scope":4405,"src":"26416:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":4376,"nodeType":"UserDefinedTypeName","pathNode":{"id":4375,"name":"Rounding","nameLocations":["26416:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"26416:8:21"},"referencedDeclaration":3005,"src":"26416:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:21"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4405,"src":"26458:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:21"},"scope":4599,"src":"26386:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"26964:674:21","statements":[{"assignments":[4414],"declarations":[{"constant":false,"id":4414,"mutability":"mutable","name":"result","nameLocation":"26982:6:21","nodeType":"VariableDeclaration","scope":4541,"src":"26974:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4416,"initialValue":{"hexValue":"30","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:21"},{"assignments":[4418],"declarations":[{"constant":false,"id":4418,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:21","nodeType":"VariableDeclaration","scope":4541,"src":"27002:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4419,"nodeType":"VariableDeclarationStatement","src":"27002:12:21"},{"id":4538,"nodeType":"UncheckedBlock","src":"27024:585:21","statements":[{"expression":{"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27048:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27071:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27055:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27055:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4433,"nodeType":"ExpressionStatement","src":"27048:46:21"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27108:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27118:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"27108:20:21"},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27142:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27152:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"27142:19:21"},{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4446,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27176:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27199:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4447,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27183:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27183:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4459,"nodeType":"ExpressionStatement","src":"27176:45:21"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27235:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27245:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4465,"nodeType":"ExpressionStatement","src":"27235:19:21"},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27268:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27278:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"27268:18:21"},{"expression":{"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27301:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27324:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4473,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27308:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27308:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4485,"nodeType":"ExpressionStatement","src":"27301:45:21"},{"expression":{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27360:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4487,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27370:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4491,"nodeType":"ExpressionStatement","src":"27360:19:21"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27393:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27403:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ExpressionStatement","src":"27393:18:21"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27426:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27449:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4499,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27433:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27433:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"27426:45:21"},{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27485:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27495:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"nodeType":"ExpressionStatement","src":"27485:19:21"},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27518:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"27528:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4523,"nodeType":"ExpressionStatement","src":"27518:18:21"},{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"27577:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4525,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27561:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27561:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"27551:47:21"}]},{"expression":{"id":4539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"27625:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4412,"id":4540,"nodeType":"Return","src":"27618:13:21"}]},"documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"26650:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:21","nodeType":"FunctionDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"value","nameLocation":"26925:5:21","nodeType":"VariableDeclaration","scope":4542,"src":"26917:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:21"},"returnParameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"26955:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:21"},"scope":4599,"src":"26901:737:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"27875:184:21","statements":[{"id":4577,"nodeType":"UncheckedBlock","src":"27885:168:21","statements":[{"assignments":[4554],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"result","nameLocation":"27917:6:21","nodeType":"VariableDeclaration","scope":4577,"src":"27909:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4558,"initialValue":{"arguments":[{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"27933:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4555,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4542,4579],"referencedDeclaration":4542,"src":"27926:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"27960:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4563,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"28002:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":4562,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"27985:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3005_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"28021:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"28036:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"27969:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"27969:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4552,"id":4576,"nodeType":"Return","src":"27953:89:21"}]}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"27644:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:21","nodeType":"FunctionDefinition","parameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"value","nameLocation":"27817:5:21","nodeType":"VariableDeclaration","scope":4579,"src":"27809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4548,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:21","nodeType":"VariableDeclaration","scope":4579,"src":"27824:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":4547,"nodeType":"UserDefinedTypeName","pathNode":{"id":4546,"name":"Rounding","nameLocations":["27824:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"27824:8:21"},"referencedDeclaration":3005,"src":"27824:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:21"},"returnParameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"27866:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:21"},"scope":4599,"src":"27793:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4597,"nodeType":"Block","src":"28257:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4590,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"28280:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}],"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4588,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:21","typeDescriptions":{}}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4587,"id":4596,"nodeType":"Return","src":"28267:31:21"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"28065:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:21","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:21","nodeType":"VariableDeclaration","scope":4598,"src":"28209:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"},"typeName":{"id":4582,"nodeType":"UserDefinedTypeName","pathNode":{"id":4581,"name":"Rounding","nameLocations":["28209:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"28209:8:21"},"referencedDeclaration":3005,"src":"28209:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3005","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:21"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4598,"src":"28251:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4585,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:21"},"scope":4599,"src":"28183:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4600,"src":"281:28026:21","usedErrors":[],"usedEvents":[]}],"src":"103:28205:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6364]},"id":6365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4601,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6364,"linearizedBaseContracts":[6364],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4609,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":4609,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4604,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":4609,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4614,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":4614,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4611,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4621,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":4621,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4616,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4619,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":4621,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4618,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4626,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":4626,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":4653,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4636,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4647,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":4646,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4641,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4645,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4648,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4633,"id":4652,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4654,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":4654,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4654,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4631,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":6364,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4681,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4664,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4663,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4675,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":4674,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4669,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4673,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4676,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4661,"id":4680,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4682,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":4682,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4682,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4659,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":6364,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4709,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4692,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4703,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":4702,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4697,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4701,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4704,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4689,"id":4708,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4710,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":4710,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4687,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":6364,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4737,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4720,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4719,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":4730,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4725,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4729,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4732,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4717,"id":4736,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":4711,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4738,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":4738,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":4717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4738,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4715,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":6364,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4748,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4759,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":4758,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4753,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4757,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":4762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4760,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4745,"id":4764,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":4739,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":4766,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4766,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4743,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":6364,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4793,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4776,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4775,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4787,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":4786,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4781,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4785,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":4790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4788,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4773,"id":4792,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4794,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":4794,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4794,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4771,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":6364,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4821,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4804,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4803,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4815,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":4814,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4809,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4813,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4816,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4801,"id":4820,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4822,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":4822,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4822,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4799,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":6364,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4849,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4832,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4831,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4843,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":4842,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4837,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4841,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4844,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4829,"id":4848,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":4823,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":4850,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4850,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4827,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":6364,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4877,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4860,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4859,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4871,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":4870,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4865,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4869,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":4874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4872,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4857,"id":4876,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4878,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":4878,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4878,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4855,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":6364,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4905,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4888,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4887,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4899,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":4898,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4893,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4897,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4900,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4885,"id":4904,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4906,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":4906,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4880,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4906,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4883,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":6364,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4933,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4916,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4915,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":4926,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4925,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4928,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4913,"id":4932,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4934,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":4934,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4934,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4911,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":6364,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4961,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4944,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4943,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4955,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":4954,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4949,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4953,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4956,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4941,"id":4960,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":4935,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4962,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":4962,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4962,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4939,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":6364,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4989,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4972,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4971,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":4982,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4981,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4984,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4969,"id":4988,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4990,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":4990,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4990,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4967,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":6364,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5017,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5000,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4999,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5011,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":5010,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5005,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5009,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5012,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4997,"id":5016,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5018,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":5018,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5018,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4995,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":6364,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5045,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5028,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5027,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5039,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":5038,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5033,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5037,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":5042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5040,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5025,"id":5044,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":5019,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5046,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":5046,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5046,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5023,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":6364,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5056,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5055,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5067,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":5066,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5061,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5065,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5068,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5053,"id":5072,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":5047,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":5074,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5074,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5051,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":6364,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5101,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5084,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":5094,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5089,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5093,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5096,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5081,"id":5100,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":5102,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5076,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5102,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5079,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":6364,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5129,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5112,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5111,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5123,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":5122,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5121,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":5126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5124,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5109,"id":5128,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":5103,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5130,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":5130,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5130,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5107,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":6364,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5157,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5140,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":5150,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5145,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5149,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5152,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5137,"id":5156,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5158,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":5158,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5158,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5135,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":6364,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5185,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5168,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5179,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":5178,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5173,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5177,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5180,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5165,"id":5184,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":5159,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":5186,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5186,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5163,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":6364,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5213,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5196,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5207,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":5206,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5201,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5205,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5208,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5193,"id":5212,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":5214,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5214,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5191,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":6364,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5224,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5235,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":5234,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5229,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5233,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5236,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5221,"id":5240,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":5242,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5216,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5242,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5219,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":6364,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5252,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5263,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":5262,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5257,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5261,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5264,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5249,"id":5268,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":5270,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5270,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5247,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":6364,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5297,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5280,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5291,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":5290,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5285,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5289,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5292,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5277,"id":5296,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":5298,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5298,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5275,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":6364,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5325,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5308,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5319,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":5318,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5313,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5317,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5320,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5305,"id":5324,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":5299,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":5326,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5326,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5303,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":6364,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5353,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5336,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":5346,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5341,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5345,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":5350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5348,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5333,"id":5352,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":5327,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":5354,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5354,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5331,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":6364,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5381,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5364,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5375,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":5374,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5369,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5373,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5376,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5361,"id":5380,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":5382,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5359,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":6364,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5409,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5392,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5403,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":5402,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5401,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5404,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5389,"id":5408,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":5383,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":5410,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5384,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5410,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5387,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":6364,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5437,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5420,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5431,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":5430,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5429,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5432,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5417,"id":5436,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":5411,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":5438,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5438,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5415,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":6364,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5465,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5448,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":5458,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5457,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5460,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5445,"id":5464,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":5466,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5466,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5443,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":6364,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5493,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5476,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":5486,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5485,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5488,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5473,"id":5492,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":5467,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":5494,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5494,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5471,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":6364,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":5509,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5508,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5501,"id":5515,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":5517,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5496,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":6364,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5526,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5531,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5541,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":5540,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5539,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":5543,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5519,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":5543,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5522,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":6364,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5552,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5557,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5567,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":5566,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5565,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":5569,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5545,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":5569,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5548,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":6364,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5578,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5583,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":5592,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5591,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":5595,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5571,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":5595,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5574,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":6364,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5604,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5609,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5619,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":5618,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5613,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5617,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":5621,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5597,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":5621,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5600,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":6364,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5630,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5635,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":5644,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5639,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5643,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":5647,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5623,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":5647,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5626,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":6364,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5672,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5656,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5661,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":5670,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5665,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5669,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":5673,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5649,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":5673,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5652,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":6364,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5698,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5682,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5687,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":5696,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5691,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5695,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":5699,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5675,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":5699,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5678,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":6364,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5708,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5713,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5723,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":5722,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5717,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5721,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":5725,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5701,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":5725,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5704,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":6364,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5734,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5739,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5749,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":5748,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5743,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5747,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":5751,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5727,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":5751,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5730,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":6364,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5760,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5765,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":5774,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5769,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5773,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":5777,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5753,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":5777,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5756,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":6364,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5802,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5786,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5791,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":5800,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5795,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5799,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":5803,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5779,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":5803,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5782,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":6364,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5812,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5817,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5827,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":5826,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5821,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5825,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":5829,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5805,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":5829,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5808,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":6364,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5838,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5843,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":5852,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5847,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5851,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":5855,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5831,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":5855,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5834,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":6364,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5864,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5869,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5879,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":5878,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5873,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5877,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":5881,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5857,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":5881,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5860,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":6364,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5906,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5890,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5895,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5905,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":5904,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5899,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5903,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5907,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":5907,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5883,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":5907,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5886,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":6364,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5932,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5916,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5921,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5931,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":5930,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5925,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5929,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5933,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":5933,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5909,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":5933,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5912,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":6364,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5942,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5947,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5957,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":5956,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5951,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5955,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":5934,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":5959,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5935,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":5940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":5959,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5938,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":6364,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5984,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5968,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5973,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5983,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":5982,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5977,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5981,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5985,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":5985,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5961,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":5985,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5964,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":6364,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6010,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5994,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5999,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6009,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":6008,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6003,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6007,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":5986,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6011,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":6011,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5987,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":6011,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5990,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":6364,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6036,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6020,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6025,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":6034,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6029,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6033,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":6012,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6037,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":6037,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6013,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":6037,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6016,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":6364,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6062,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6046,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6051,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6061,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":6060,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6055,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6059,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":6038,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6063,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":6063,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6039,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":6063,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6042,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":6364,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6088,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6072,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6077,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6087,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":6086,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6081,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6085,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":6064,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":6089,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6065,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":6089,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6068,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":6364,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6098,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6103,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6113,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":6112,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6107,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6111,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":6115,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6091,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":6115,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6094,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":6364,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6140,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6124,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6129,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6139,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":6138,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6133,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6137,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6141,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":6141,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6117,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":6141,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6120,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":6364,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6150,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6155,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6165,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":6164,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6163,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":6142,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":6167,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6143,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":6167,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6146,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":6364,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6176,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6181,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":6190,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6189,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":6193,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6169,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":6193,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6172,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":6364,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6218,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6202,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6207,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":6216,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6215,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":6219,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6195,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":6219,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6198,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":6364,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6244,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6228,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6233,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6243,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":6242,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6241,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6245,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":6245,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6221,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":6245,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6224,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":6364,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6254,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6259,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":6268,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6267,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":6246,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":6271,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6247,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":6271,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6250,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":6364,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6296,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6280,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6285,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":6294,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6293,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6297,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":6297,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6273,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":6297,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6276,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":6364,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6306,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6311,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6321,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":6320,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6319,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":6298,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":6323,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6299,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":6323,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6302,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":6364,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6352,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6335,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6332,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6346,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":6345,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6341,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6344,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6347,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6330,"id":6351,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6353,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":6353,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6353,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6328,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":6364,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6362,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nativeSrc":"34888:46:22","nodeType":"YulBlock","src":"34888:46:22","statements":[{"nativeSrc":"34902:22:22","nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:22","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:22","nodeType":"YulIdentifier","src":"34914:6:22"},"nativeSrc":"34914:9:22","nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:22","nodeType":"YulIdentifier","src":"34907:6:22"},"nativeSrc":"34907:17:22","nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nativeSrc":"34902:1:22","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6356,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":6359,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":6361,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":6354,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":6363,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6355,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":6363,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":6364,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6365,"src":"769:34173:22","usedErrors":[4609,4614,4621,4626],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6364],"SignedMath":[6508]},"id":6509,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6366,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6509,"sourceUnit":6365,"src":"135:40:23","symbolAliases":[{"foreign":{"id":6367,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"143:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6369,"nodeType":"StructuredDocumentation","src":"177:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6508,"linearizedBaseContracts":[6508],"name":"SignedMath","nameLocation":"266:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":6398,"nodeType":"Block","src":"746:215:23","statements":[{"id":6397,"nodeType":"UncheckedBlock","src":"756:199:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"894:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"900:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"904:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6390,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"932:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6388,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"916:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6364_$","typeString":"type(library SafeCast)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"916:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6386,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:23","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6380,"id":6396,"nodeType":"Return","src":"887:57:23"}]}]},"documentation":{"id":6370,"nodeType":"StructuredDocumentation","src":"283:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6399,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:23","nodeType":"FunctionDefinition","parameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"condition","nameLocation":"684:9:23","nodeType":"VariableDeclaration","scope":6399,"src":"679:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6371,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6374,"mutability":"mutable","name":"a","nameLocation":"702:1:23","nodeType":"VariableDeclaration","scope":6399,"src":"695:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6373,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6376,"mutability":"mutable","name":"b","nameLocation":"712:1:23","nodeType":"VariableDeclaration","scope":6399,"src":"705:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6375,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:23"},"returnParameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6399,"src":"738:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6378,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:23"},"scope":6508,"src":"662:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6417,"nodeType":"Block","src":"1102:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"1127:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6411,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"1134:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"1137:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6409,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1119:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6408,"id":6416,"nodeType":"Return","src":"1112:27:23"}]},"documentation":{"id":6400,"nodeType":"StructuredDocumentation","src":"967:66:23","text":" @dev Returns the largest of two signed numbers."},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:23","nodeType":"FunctionDefinition","parameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"a","nameLocation":"1058:1:23","nodeType":"VariableDeclaration","scope":6418,"src":"1051:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6401,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6404,"mutability":"mutable","name":"b","nameLocation":"1068:1:23","nodeType":"VariableDeclaration","scope":6418,"src":"1061:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6403,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:23"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6418,"src":"1094:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6406,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:23"},"scope":6508,"src":"1038:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6436,"nodeType":"Block","src":"1288:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"1313:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"1317:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"1320:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6428,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1305:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6427,"id":6435,"nodeType":"Return","src":"1298:27:23"}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"1152:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":6437,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:23","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"a","nameLocation":"1244:1:23","nodeType":"VariableDeclaration","scope":6437,"src":"1237:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6420,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6423,"mutability":"mutable","name":"b","nameLocation":"1254:1:23","nodeType":"VariableDeclaration","scope":6437,"src":"1247:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6422,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:23"},"returnParameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6437,"src":"1280:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6425,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:23"},"scope":6508,"src":"1224:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6480,"nodeType":"Block","src":"1537:162:23","statements":[{"assignments":[6448],"declarations":[{"constant":false,"id":6448,"mutability":"mutable","name":"x","nameLocation":"1606:1:23","nodeType":"VariableDeclaration","scope":6480,"src":"1599:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6447,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6461,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1611:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"1615:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1622:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"1626:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"1671:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{}}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6463,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:23","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1685:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"1689:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6446,"id":6479,"nodeType":"Return","src":"1644:48:23"}]},"documentation":{"id":6438,"nodeType":"StructuredDocumentation","src":"1338:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6481,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:23","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"a","nameLocation":"1493:1:23","nodeType":"VariableDeclaration","scope":6481,"src":"1486:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6439,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"b","nameLocation":"1503:1:23","nodeType":"VariableDeclaration","scope":6481,"src":"1496:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6441,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:23"},"returnParameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6481,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6444,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":6508,"src":"1469:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"1843:767:23","statements":[{"id":6505,"nodeType":"UncheckedBlock","src":"1853:751:23","statements":[{"assignments":[6490],"declarations":[{"constant":false,"id":6490,"mutability":"mutable","name":"mask","nameLocation":"2424:4:23","nodeType":"VariableDeclaration","scope":6505,"src":"2417:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6494,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"2431:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6497,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"2576:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6498,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"2580:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6501,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"2588:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:23","typeDescriptions":{}}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6488,"id":6504,"nodeType":"Return","src":"2560:33:23"}]}]},"documentation":{"id":6482,"nodeType":"StructuredDocumentation","src":"1705:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:23","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"n","nameLocation":"1808:1:23","nodeType":"VariableDeclaration","scope":6507,"src":"1801:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6483,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:23"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"1834:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:23"},"scope":6508,"src":"1788:822:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6509,"src":"258:2354:23","usedErrors":[],"usedEvents":[]}],"src":"109:2504:23"},"id":23},"contracts/CATFactory.sol":{"ast":{"absolutePath":"contracts/CATFactory.sol","exportedSymbols":{"AccessControl":[295],"CATFactory":[6642],"Context":[1527],"ContributionAccountingToken":[6974],"ECDSA":[2656],"EIP712":[2883],"ERC165":[2981],"ERC20":[1203],"ERC20Permit":[1435],"IAccessControl":[378],"IERC20":[1281],"IERC20Errors":[593],"IERC20Metadata":[1461],"IERC20Permit":[1497],"Nonces":[1595],"Ownable":[526]},"id":6643,"license":"AEL","nodeType":"SourceUnit","nodes":[{"id":6510,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6643,"sourceUnit":527,"src":"58:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ContributionAccountingToken.sol","file":"./ContributionAccountingToken.sol","id":6512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6643,"sourceUnit":6975,"src":"111:43:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6513,"name":"Ownable","nameLocations":["234:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"234:7:24"},"id":6514,"nodeType":"InheritanceSpecifier","src":"234:7:24"}],"canonicalName":"CATFactory","contractDependencies":[6974],"contractKind":"contract","fullyImplemented":true,"id":6642,"linearizedBaseContracts":[6642,526,1527],"name":"CATFactory","nameLocation":"220:10:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6516,"mutability":"mutable","name":"_nextTokenId","nameLocation":"339:12:24","nodeType":"VariableDeclaration","scope":6642,"src":"323:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"3385ab9c","id":6521,"mutability":"mutable","name":"administerableTokens","nameLocation":"448:20:24","nodeType":"VariableDeclaration","scope":6642,"src":"411:57:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":6520,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6517,"name":"address","nodeType":"ElementaryTypeName","src":"419:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"411:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6518,"name":"address","nodeType":"ElementaryTypeName","src":"430:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6519,"nodeType":"ArrayTypeName","src":"430:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"387e8311","id":6526,"mutability":"mutable","name":"mintableTokens","nameLocation":"525:14:24","nodeType":"VariableDeclaration","scope":6642,"src":"488:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":6525,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6522,"name":"address","nodeType":"ElementaryTypeName","src":"496:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"488:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6523,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6524,"nodeType":"ArrayTypeName","src":"507:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"054189e2ad79e5c2d10e8da115126520634a6a9b369a130345025ae1ddeafe92","id":6534,"name":"CATCreated","nameLocation":"613:10:24","nodeType":"EventDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"640:5:24","nodeType":"VariableDeclaration","scope":6534,"src":"624:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6527,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6530,"indexed":false,"mutability":"mutable","name":"catAddress","nameLocation":"655:10:24","nodeType":"VariableDeclaration","scope":6534,"src":"647:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6529,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6532,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"675:7:24","nodeType":"VariableDeclaration","scope":6534,"src":"667:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"667:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:60:24"},"src":"607:77:24"},{"body":{"id":6541,"nodeType":"Block","src":"724:2:24","statements":[]},"id":6542,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"712:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"716:6:24","memberName":"sender","nodeType":"MemberAccess","src":"712:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6539,"kind":"baseConstructorSpecifier","modifierName":{"id":6536,"name":"Ownable","nameLocations":["704:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"704:7:24"},"nodeType":"ModifierInvocation","src":"704:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[],"src":"701:2:24"},"returnParameters":{"id":6540,"nodeType":"ParameterList","parameters":[],"src":"724:0:24"},"scope":6642,"src":"690:36:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6604,"nodeType":"Block","src":"1380:546:24","statements":[{"assignments":[6559],"declarations":[{"constant":false,"id":6559,"mutability":"mutable","name":"newTokenId","nameLocation":"1398:10:24","nodeType":"VariableDeclaration","scope":6604,"src":"1390:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1390:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6561,"initialValue":{"id":6560,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1411:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1390:33:24"},{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1433:14:24","subExpression":{"id":6562,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1433:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6564,"nodeType":"ExpressionStatement","src":"1433:14:24"},{"assignments":[6567],"declarations":[{"constant":false,"id":6567,"mutability":"mutable","name":"newCAT","nameLocation":"1529:6:24","nodeType":"VariableDeclaration","scope":6604,"src":"1501:34:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"},"typeName":{"id":6566,"nodeType":"UserDefinedTypeName","pathNode":{"id":6565,"name":"ContributionAccountingToken","nameLocations":["1501:27:24"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"1501:27:24"},"referencedDeclaration":6974,"src":"1501:27:24","typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}},"visibility":"internal"}],"id":6579,"initialValue":{"arguments":[{"expression":{"id":6571,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1583:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1583:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6573,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"1607:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6574,"name":"thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"1630:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6575,"name":"maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"1659:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6576,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"1689:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6577,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"1707:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1538:31:24","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ContributionAccountingToken_$6974_$","typeString":"function (address,uint256,uint256,uint256,string memory,string memory) returns (contract ContributionAccountingToken)"},"typeName":{"id":6569,"nodeType":"UserDefinedTypeName","pathNode":{"id":6568,"name":"ContributionAccountingToken","nameLocations":["1542:27:24"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"1542:27:24"},"referencedDeclaration":6974,"src":"1542:27:24","typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:185:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}},"nodeType":"VariableDeclarationStatement","src":"1501:222:24"},{"assignments":[6581],"declarations":[{"constant":false,"id":6581,"mutability":"mutable","name":"catAddress","nameLocation":"1742:10:24","nodeType":"VariableDeclaration","scope":6604,"src":"1734:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6580,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6586,"initialValue":{"arguments":[{"id":6584,"name":"newCAT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"1763:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1755:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6582,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:24","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1734:36:24"},{"expression":{"arguments":[{"id":6592,"name":"catAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1818:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":6587,"name":"administerableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"1780:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":6590,"indexExpression":{"expression":{"id":6588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1801:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1805:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1801:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1780:32:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1813:4:24","memberName":"push","nodeType":"MemberAccess","src":"1780:37:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6594,"nodeType":"ExpressionStatement","src":"1780:49:24"},{"eventCall":{"arguments":[{"expression":{"id":6596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1856:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1860:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1856:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6598,"name":"catAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1868:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6599,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"1880:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6595,"name":"CATCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"1845:10:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1845:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6601,"nodeType":"EmitStatement","src":"1840:51:24"},{"expression":{"id":6602,"name":"catAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"1909:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6557,"id":6603,"nodeType":"Return","src":"1902:17:24"}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"732:441:24","text":" @dev Creates a new CAT contract and assigns it to the caller.\n @param maxSupply The maximum supply for the new CAT.\n @param thresholdSupply The threshold supply for the new CAT.\n @param maxExpansionRate The maximum expansion rate for the new CAT.\n @param name The name of the CAT token.\n @param symbol The symbol of the CAT token.\n @return The address of the newly created CAT contract."},"functionSelector":"c76fdf68","id":6605,"implemented":true,"kind":"function","modifiers":[],"name":"createCAT","nameLocation":"1187:9:24","nodeType":"FunctionDefinition","parameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"maxSupply","nameLocation":"1214:9:24","nodeType":"VariableDeclaration","scope":6605,"src":"1206:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6547,"mutability":"mutable","name":"thresholdSupply","nameLocation":"1241:15:24","nodeType":"VariableDeclaration","scope":6605,"src":"1233:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6549,"mutability":"mutable","name":"maxExpansionRate","nameLocation":"1274:16:24","nodeType":"VariableDeclaration","scope":6605,"src":"1266:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6551,"mutability":"mutable","name":"name","nameLocation":"1314:4:24","nodeType":"VariableDeclaration","scope":6605,"src":"1300:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6550,"name":"string","nodeType":"ElementaryTypeName","src":"1300:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6553,"mutability":"mutable","name":"symbol","nameLocation":"1342:6:24","nodeType":"VariableDeclaration","scope":6605,"src":"1328:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6552,"name":"string","nodeType":"ElementaryTypeName","src":"1328:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1196:158:24"},"returnParameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6605,"src":"1371:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"1371:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1370:9:24"},"scope":6642,"src":"1178:748:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6629,"nodeType":"Block","src":"2209:163:24","statements":[{"expression":{"arguments":[{"id":6619,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"2275:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6616,"name":"catAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"2247:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6615,"name":"ContributionAccountingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"2219:27:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContributionAccountingToken_$6974_$","typeString":"type(contract ContributionAccountingToken)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ContributionAccountingToken_$6974","typeString":"contract ContributionAccountingToken"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2259:15:24","memberName":"grantMinterRole","nodeType":"MemberAccess","referencedDeclaration":6959,"src":"2219:55:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6621,"nodeType":"ExpressionStatement","src":"2219:63:24"},{"expression":{"arguments":[{"id":6626,"name":"catAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"2320:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":6622,"name":"mintableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2292:14:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":6624,"indexExpression":{"id":6623,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"2307:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2292:22:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2315:4:24","memberName":"push","nodeType":"MemberAccess","src":"2292:27:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6628,"nodeType":"ExpressionStatement","src":"2292:39:24"}]},"documentation":{"id":6606,"nodeType":"StructuredDocumentation","src":"1932:194:24","text":" @dev Grants minter role to an address in the CAT contract.\n @param catAddress The address of the CAT contract.\n @param minter The address to grant the minter role."},"functionSelector":"25c71938","id":6630,"implemented":true,"kind":"function","modifiers":[{"id":6613,"kind":"modifierInvocation","modifierName":{"id":6612,"name":"onlyOwner","nameLocations":["2199:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2199:9:24"},"nodeType":"ModifierInvocation","src":"2199:9:24"}],"name":"grantMinterRole","nameLocation":"2140:15:24","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"catAddress","nameLocation":"2164:10:24","nodeType":"VariableDeclaration","scope":6630,"src":"2156:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6607,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6610,"mutability":"mutable","name":"minter","nameLocation":"2184:6:24","nodeType":"VariableDeclaration","scope":6630,"src":"2176:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6609,"name":"address","nodeType":"ElementaryTypeName","src":"2176:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2155:36:24"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[],"src":"2209:0:24"},"scope":6642,"src":"2131:241:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6640,"nodeType":"Block","src":"2540:88:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"2557:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2572:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2557:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6635,"id":6639,"nodeType":"Return","src":"2550:23:24"}]},"documentation":{"id":6631,"nodeType":"StructuredDocumentation","src":"2378:106:24","text":" @dev Returns the total number of CATs created.\n @return The total number of CATs."},"functionSelector":"247db5dd","id":6641,"implemented":true,"kind":"function","modifiers":[],"name":"totalCATs","nameLocation":"2498:9:24","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[],"src":"2507:2:24"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6641,"src":"2531:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2530:9:24"},"scope":6642,"src":"2489:139:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6643,"src":"211:2419:24","usedErrors":[392,397],"usedEvents":[403,6534]}],"src":"32:2599:24"},"id":24},"contracts/ContributionAccountingToken.sol":{"ast":{"absolutePath":"contracts/ContributionAccountingToken.sol","exportedSymbols":{"AccessControl":[295],"Context":[1527],"ContributionAccountingToken":[6974],"ECDSA":[2656],"EIP712":[2883],"ERC165":[2981],"ERC20":[1203],"ERC20Permit":[1435],"IAccessControl":[378],"IERC20":[1281],"IERC20Errors":[593],"IERC20Metadata":[1461],"IERC20Permit":[1497],"Nonces":[1595]},"id":6975,"license":"AEL","nodeType":"SourceUnit","nodes":[{"id":6644,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6975,"sourceUnit":1204,"src":"58:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6975,"sourceUnit":1436,"src":"114:72:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6975,"sourceUnit":296,"src":"187:58:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6648,"name":"ERC20","nameLocations":["287:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"287:5:25"},"id":6649,"nodeType":"InheritanceSpecifier","src":"287:5:25"},{"baseName":{"id":6650,"name":"ERC20Permit","nameLocations":["294:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"294:11:25"},"id":6651,"nodeType":"InheritanceSpecifier","src":"294:11:25"},{"baseName":{"id":6652,"name":"AccessControl","nameLocations":["307:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"307:13:25"},"id":6653,"nodeType":"InheritanceSpecifier","src":"307:13:25"}],"canonicalName":"ContributionAccountingToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6974,"linearizedBaseContracts":[6974,295,2981,2993,378,1435,1595,2883,551,1497,1203,593,1461,1281,1527],"name":"ContributionAccountingToken","nameLocation":"256:27:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":6658,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"351:11:25","nodeType":"VariableDeclaration","scope":6974,"src":"327:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"327:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"375:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6655,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"365:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":6661,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"419:10:25","nodeType":"VariableDeclaration","scope":6974,"src":"395:55:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"395:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"id":6660,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"432:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":6663,"mutability":"mutable","name":"maxSupply","nameLocation":"476:9:25","nodeType":"VariableDeclaration","scope":6974,"src":"461:24:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e6ad10e1","id":6665,"mutability":"mutable","name":"thresholdSupply","nameLocation":"506:15:25","nodeType":"VariableDeclaration","scope":6974,"src":"491:30:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"55233b48","id":6667,"mutability":"mutable","name":"maxExpansionRate","nameLocation":"542:16:25","nodeType":"VariableDeclaration","scope":6974,"src":"527:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"48709a93","id":6670,"mutability":"mutable","name":"transferRestricted","nameLocation":"576:18:25","nodeType":"VariableDeclaration","scope":6974,"src":"564:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6668,"name":"bool","nodeType":"ElementaryTypeName","src":"564:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"597:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":true,"functionSelector":"6c8597fc","id":6673,"mutability":"constant","name":"clowderFee","nameLocation":"631:10:25","nodeType":"VariableDeclaration","scope":6974,"src":"607:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6671,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"644:3:25","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":false,"functionSelector":"81fb8b06","id":6676,"mutability":"immutable","name":"clowderTreasury","nameLocation":"690:15:25","nodeType":"VariableDeclaration","scope":6974,"src":"665:85:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6674,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833353565353539424341383633343642383244353862653034363064363631444234383145303565","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:42:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x355e559BCA86346B82D58be0460d661DB481E05e"},"visibility":"public"},{"constant":false,"functionSelector":"8e80ff5d","id":6678,"mutability":"mutable","name":"lastMintTimestamp","nameLocation":"811:17:25","nodeType":"VariableDeclaration","scope":6974,"src":"796:32:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6677,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6c02a931","id":6680,"mutability":"mutable","name":"tokenName","nameLocation":"848:9:25","nodeType":"VariableDeclaration","scope":6974,"src":"834:23:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6679,"name":"string","nodeType":"ElementaryTypeName","src":"834:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"7b61c320","id":6682,"mutability":"mutable","name":"tokenSymbol","nameLocation":"891:11:25","nodeType":"VariableDeclaration","scope":6974,"src":"877:25:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6681,"name":"string","nodeType":"ElementaryTypeName","src":"877:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":true,"id":6685,"mutability":"constant","name":"denominator","nameLocation":"991:11:25","nodeType":"VariableDeclaration","scope":6974,"src":"974:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6683,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030303030","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1005:6:25","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"internal"},{"body":{"id":6742,"nodeType":"Block","src":"1264:342:25","statements":[{"expression":{"arguments":[{"id":6708,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1285:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6709,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"1305:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6707,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1274:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1274:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6711,"nodeType":"ExpressionStatement","src":"1274:44:25"},{"expression":{"arguments":[{"id":6713,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"1339:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6714,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"1352:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6712,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1328:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6716,"nodeType":"ExpressionStatement","src":"1328:37:25"},{"expression":{"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6717,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"1384:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6718,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1396:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1384:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6720,"nodeType":"ExpressionStatement","src":"1384:22:25"},{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6721,"name":"thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1416:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6722,"name":"_thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"1434:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1416:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6724,"nodeType":"ExpressionStatement","src":"1416:34:25"},{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"1460:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6726,"name":"_maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"1479:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1460:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6728,"nodeType":"ExpressionStatement","src":"1460:36:25"},{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6729,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"1506:9:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6730,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1518:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1506:17:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6732,"nodeType":"ExpressionStatement","src":"1506:17:25"},{"expression":{"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6733,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"1533:11:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6734,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"1547:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1533:21:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6736,"nodeType":"ExpressionStatement","src":"1533:21:25"},{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6737,"name":"lastMintTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1564:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6738,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1584:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1590:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"1584:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1564:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6741,"nodeType":"ExpressionStatement","src":"1564:35:25"}]},"id":6743,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6700,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1229:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6701,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"1236:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6702,"kind":"baseConstructorSpecifier","modifierName":{"id":6699,"name":"ERC20","nameLocations":["1223:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"1223:5:25"},"nodeType":"ModifierInvocation","src":"1223:21:25"},{"arguments":[{"id":6704,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1257:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6705,"kind":"baseConstructorSpecifier","modifierName":{"id":6703,"name":"ERC20Permit","nameLocations":["1245:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"1245:11:25"},"nodeType":"ModifierInvocation","src":"1245:18:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"defaultAdmin","nameLocation":"1047:12:25","nodeType":"VariableDeclaration","scope":6743,"src":"1039:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6686,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6689,"mutability":"mutable","name":"_maxSupply","nameLocation":"1077:10:25","nodeType":"VariableDeclaration","scope":6743,"src":"1069:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6691,"mutability":"mutable","name":"_thresholdSupply","nameLocation":"1105:16:25","nodeType":"VariableDeclaration","scope":6743,"src":"1097:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6693,"mutability":"mutable","name":"_maxExpansionRate","nameLocation":"1139:17:25","nodeType":"VariableDeclaration","scope":6743,"src":"1131:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1131:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"_name","nameLocation":"1180:5:25","nodeType":"VariableDeclaration","scope":6743,"src":"1166:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6694,"name":"string","nodeType":"ElementaryTypeName","src":"1166:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"_symbol","nameLocation":"1209:7:25","nodeType":"VariableDeclaration","scope":6743,"src":"1195:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6696,"name":"string","nodeType":"ElementaryTypeName","src":"1195:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1029:193:25"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[],"src":"1264:0:25"},"scope":6974,"src":"1018:588:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6828,"nodeType":"Block","src":"1683:823:25","statements":[{"assignments":[6754],"declarations":[{"constant":false,"id":6754,"mutability":"mutable","name":"currentSupply","nameLocation":"1701:13:25","nodeType":"VariableDeclaration","scope":6828,"src":"1693:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6757,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6755,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"1717:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1693:37:25"},{"assignments":[6759],"declarations":[{"constant":false,"id":6759,"mutability":"mutable","name":"feeAmount","nameLocation":"1792:9:25","nodeType":"VariableDeclaration","scope":6828,"src":"1784:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1784:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6766,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"1805:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6761,"name":"clowderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"1814:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1805:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1804:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"1828:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1804:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1784:55:25"},{"expression":{"arguments":[{"id":6768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"1902:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"1906:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6767,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1896:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6771,"nodeType":"ExpressionStatement","src":"1896:17:25"},{"expression":{"arguments":[{"id":6773,"name":"clowderTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1929:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6774,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"1946:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6772,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1923:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1923:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6776,"nodeType":"ExpressionStatement","src":"1923:33:25"},{"expression":{"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6777,"name":"lastMintTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1966:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6778,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1986:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1992:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"1986:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1966:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6781,"nodeType":"ExpressionStatement","src":"1966:35:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"2090:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"2106:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2090:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6786,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"2115:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2090:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6788,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"2128:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2090:47:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d6178696d756d20737570706c79","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2139:24:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","typeString":"literal_string \"Exceeds maximum supply\""},"value":"Exceeds maximum supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","typeString":"literal_string \"Exceeds maximum supply\""}],"id":6782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2082:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2082:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6792,"nodeType":"ExpressionStatement","src":"2082:82:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6793,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"2179:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6794,"name":"thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2196:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2179:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6827,"nodeType":"IfStatement","src":"2175:325:25","trueBody":{"id":6826,"nodeType":"Block","src":"2213:287:25","statements":[{"assignments":[6797],"declarations":[{"constant":false,"id":6797,"mutability":"mutable","name":"elapsedTime","nameLocation":"2235:11:25","nodeType":"VariableDeclaration","scope":6826,"src":"2227:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6802,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2249:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"2249:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6800,"name":"lastMintTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"2267:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2249:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2227:57:25"},{"assignments":[6804],"declarations":[{"constant":false,"id":6804,"mutability":"mutable","name":"maxMintableAmount","nameLocation":"2306:17:25","nodeType":"VariableDeclaration","scope":6826,"src":"2298:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6816,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6805,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"2327:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6806,"name":"maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"2343:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2327:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6808,"name":"elapsedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"2362:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2327:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2326:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_3153600000_by_1","typeString":"int_const 3153600000"},"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"333635","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:8:25","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":6812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2389:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2378:14:25","typeDescriptions":{"typeIdentifier":"t_rational_3153600000_by_1","typeString":"int_const 3153600000"}}],"id":6814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2377:16:25","typeDescriptions":{"typeIdentifier":"t_rational_3153600000_by_1","typeString":"int_const 3153600000"}},"src":"2326:67:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2298:95:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"2415:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6819,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"2424:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2415:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6821,"name":"maxMintableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"2437:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2415:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d6178696d756d20657870616e73696f6e2072617465","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2456:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc","typeString":"literal_string \"Exceeds maximum expansion rate\""},"value":"Exceeds maximum expansion rate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc","typeString":"literal_string \"Exceeds maximum expansion rate\""}],"id":6817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2407:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6825,"nodeType":"ExpressionStatement","src":"2407:82:25"}]}}]},"functionSelector":"40c10f19","id":6829,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6750,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"1670:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6751,"kind":"modifierInvocation","modifierName":{"id":6749,"name":"onlyRole","nameLocations":["1661:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1661:8:25"},"nodeType":"ModifierInvocation","src":"1661:21:25"}],"name":"mint","nameLocation":"1621:4:25","nodeType":"FunctionDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"to","nameLocation":"1634:2:25","nodeType":"VariableDeclaration","scope":6829,"src":"1626:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6744,"name":"address","nodeType":"ElementaryTypeName","src":"1626:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6747,"mutability":"mutable","name":"amount","nameLocation":"1646:6:25","nodeType":"VariableDeclaration","scope":6829,"src":"1638:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1625:28:25"},"returnParameters":{"id":6752,"nodeType":"ParameterList","parameters":[],"src":"1683:0:25"},"scope":6974,"src":"1612:894:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6848,"nodeType":"Block","src":"2595:139:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"newMaxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"2613:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6839,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"2628:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2613:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6577206d617820737570706c79206d757374206265206c657373207468616e2063757272656e74206d617820737570706c79","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2639:53:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8","typeString":"literal_string \"New max supply must be less than current max supply\""},"value":"New max supply must be less than current max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8","typeString":"literal_string \"New max supply must be less than current max supply\""}],"id":6837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2605:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2605:88:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6843,"nodeType":"ExpressionStatement","src":"2605:88:25"},{"expression":{"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6844,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"2703:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6845,"name":"newMaxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"2715:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2703:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6847,"nodeType":"ExpressionStatement","src":"2703:24:25"}]},"functionSelector":"73532802","id":6849,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6834,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2575:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6835,"kind":"modifierInvocation","modifierName":{"id":6833,"name":"onlyRole","nameLocations":["2566:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2566:8:25"},"nodeType":"ModifierInvocation","src":"2566:28:25"}],"name":"reduceMaxSupply","nameLocation":"2521:15:25","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"newMaxSupply","nameLocation":"2545:12:25","nodeType":"VariableDeclaration","scope":6849,"src":"2537:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2536:22:25"},"returnParameters":{"id":6836,"nodeType":"ParameterList","parameters":[],"src":"2595:0:25"},"scope":6974,"src":"2512:222:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6868,"nodeType":"Block","src":"2835:175:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"newThresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"2853:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6859,"name":"thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2874:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:36:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6577207468726573686f6c6420737570706c79206d757374206265206c657373207468616e2063757272656e74207468726573686f6c6420737570706c79","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:65:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e","typeString":"literal_string \"New threshold supply must be less than current threshold supply\""},"value":"New threshold supply must be less than current threshold supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e","typeString":"literal_string \"New threshold supply must be less than current threshold supply\""}],"id":6857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2845:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:112:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6863,"nodeType":"ExpressionStatement","src":"2845:112:25"},{"expression":{"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6864,"name":"thresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2967:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6865,"name":"newThresholdSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"2985:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2967:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6867,"nodeType":"ExpressionStatement","src":"2967:36:25"}]},"functionSelector":"0914d4da","id":6869,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6854,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2815:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6855,"kind":"modifierInvocation","modifierName":{"id":6853,"name":"onlyRole","nameLocations":["2806:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2806:8:25"},"nodeType":"ModifierInvocation","src":"2806:28:25"}],"name":"reduceThresholdSupply","nameLocation":"2749:21:25","nodeType":"FunctionDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"newThresholdSupply","nameLocation":"2779:18:25","nodeType":"VariableDeclaration","scope":6869,"src":"2771:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2771:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2770:28:25"},"returnParameters":{"id":6856,"nodeType":"ParameterList","parameters":[],"src":"2835:0:25"},"scope":6974,"src":"2740:270:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6888,"nodeType":"Block","src":"3113:183:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6878,"name":"newMaxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"3131:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6879,"name":"maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"3153:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3131:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6577206d617820657870616e73696f6e2072617465206d757374206265206c657373207468616e2063757272656e74206d617820657870616e73696f6e2072617465","id":6881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3171:69:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad","typeString":"literal_string \"New max expansion rate must be less than current max expansion rate\""},"value":"New max expansion rate must be less than current max expansion rate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad","typeString":"literal_string \"New max expansion rate must be less than current max expansion rate\""}],"id":6877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3123:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:118:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6883,"nodeType":"ExpressionStatement","src":"3123:118:25"},{"expression":{"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6884,"name":"maxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"3251:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6885,"name":"newMaxExpansionRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"3270:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3251:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6887,"nodeType":"ExpressionStatement","src":"3251:38:25"}]},"functionSelector":"e488ede8","id":6889,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6874,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3093:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6875,"kind":"modifierInvocation","modifierName":{"id":6873,"name":"onlyRole","nameLocations":["3084:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3084:8:25"},"nodeType":"ModifierInvocation","src":"3084:28:25"}],"name":"reduceMaxExpansionRate","nameLocation":"3025:22:25","nodeType":"FunctionDefinition","parameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"mutability":"mutable","name":"newMaxExpansionRate","nameLocation":"3056:19:25","nodeType":"VariableDeclaration","scope":6889,"src":"3048:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3047:29:25"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[],"src":"3113:0:25"},"scope":6974,"src":"3016:280:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6899,"nodeType":"Block","src":"3376:43:25","statements":[{"expression":{"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6895,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"3386:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3407:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3386:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6898,"nodeType":"ExpressionStatement","src":"3386:26:25"}]},"functionSelector":"83de3e6a","id":6900,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6892,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3356:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6893,"kind":"modifierInvocation","modifierName":{"id":6891,"name":"onlyRole","nameLocations":["3347:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3347:8:25"},"nodeType":"ModifierInvocation","src":"3347:28:25"}],"name":"disableTransferRestriction","nameLocation":"3311:26:25","nodeType":"FunctionDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[],"src":"3337:2:25"},"returnParameters":{"id":6894,"nodeType":"ParameterList","parameters":[],"src":"3376:0:25"},"scope":6974,"src":"3302:117:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1010],"body":{"id":6944,"nodeType":"Block","src":"3502:223:25","statements":[{"condition":{"id":6910,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"3516:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6935,"nodeType":"IfStatement","src":"3512:166:25","trueBody":{"id":6934,"nodeType":"Block","src":"3536:142:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6912,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"3558:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3574:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3566:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6913,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:25","typeDescriptions":{}}},"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3558:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3580:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3586:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6919,"name":"address","nodeType":"ElementaryTypeName","src":"3586:7:25","typeDescriptions":{}}},"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3586:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3580:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3558:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3610:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6925,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3600:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3600:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3616:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3600:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3558:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572207265737472696374656420746f206578697374696e6720746f6b656e20686f6c64657273","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3619:47:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415","typeString":"literal_string \"Transfer restricted to existing token holders\""},"value":"Transfer restricted to existing token holders"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415","typeString":"literal_string \"Transfer restricted to existing token holders\""}],"id":6911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3550:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:117:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6933,"nodeType":"ExpressionStatement","src":"3550:117:25"}]}},{"expression":{"arguments":[{"id":6939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"3701:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3707:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6941,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"3711:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6936,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3687:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ContributionAccountingToken_$6974_$","typeString":"type(contract super ContributionAccountingToken)"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3693:7:25","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1010,"src":"3687:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3687:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6943,"nodeType":"ExpressionStatement","src":"3687:31:25"}]},"id":6945,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3434:7:25","nodeType":"FunctionDefinition","overrides":{"id":6908,"nodeType":"OverrideSpecifier","overrides":[],"src":"3493:8:25"},"parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"from","nameLocation":"3450:4:25","nodeType":"VariableDeclaration","scope":6945,"src":"3442:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6901,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6904,"mutability":"mutable","name":"to","nameLocation":"3464:2:25","nodeType":"VariableDeclaration","scope":6945,"src":"3456:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6903,"name":"address","nodeType":"ElementaryTypeName","src":"3456:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6906,"mutability":"mutable","name":"amount","nameLocation":"3476:6:25","nodeType":"VariableDeclaration","scope":6945,"src":"3468:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3468:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3441:42:25"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[],"src":"3502:0:25"},"scope":6974,"src":"3425:300:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6958,"nodeType":"Block","src":"3809:48:25","statements":[{"expression":{"arguments":[{"id":6954,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3829:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6955,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3842:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6953,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3819:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6957,"nodeType":"ExpressionStatement","src":"3819:31:25"}]},"functionSelector":"3dd1eb61","id":6959,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6950,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3789:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6951,"kind":"modifierInvocation","modifierName":{"id":6949,"name":"onlyRole","nameLocations":["3780:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3780:8:25"},"nodeType":"ModifierInvocation","src":"3780:28:25"}],"name":"grantMinterRole","nameLocation":"3740:15:25","nodeType":"FunctionDefinition","parameters":{"id":6948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6947,"mutability":"mutable","name":"account","nameLocation":"3764:7:25","nodeType":"VariableDeclaration","scope":6959,"src":"3756:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6946,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3755:17:25"},"returnParameters":{"id":6952,"nodeType":"ParameterList","parameters":[],"src":"3809:0:25"},"scope":6974,"src":"3731:126:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6972,"nodeType":"Block","src":"3942:49:25","statements":[{"expression":{"arguments":[{"id":6968,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3963:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6969,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"3976:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6967,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3952:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6971,"nodeType":"ExpressionStatement","src":"3952:32:25"}]},"functionSelector":"69e2f0fb","id":6973,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6964,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3922:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6965,"kind":"modifierInvocation","modifierName":{"id":6963,"name":"onlyRole","nameLocations":["3913:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3913:8:25"},"nodeType":"ModifierInvocation","src":"3913:28:25"}],"name":"revokeMinterRole","nameLocation":"3872:16:25","nodeType":"FunctionDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"account","nameLocation":"3897:7:25","nodeType":"VariableDeclaration","scope":6973,"src":"3889:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6960,"name":"address","nodeType":"ElementaryTypeName","src":"3889:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3888:17:25"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[],"src":"3942:0:25"},"scope":6974,"src":"3863:128:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6975,"src":"247:3746:25","usedErrors":[305,308,563,568,573,582,587,592,1312,1319,1537,1661,1663,2319,2324,2329],"usedEvents":[317,326,335,531,1215,1224]}],"src":"32:3962:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634a59fab05765d67f31cc583ea360299d9a044922b6e51a7e4b81f28fc2a3fa64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4A59FAB0 JUMPI PUSH6 0xD67F31CC583E LOG3 PUSH1 0x29 SWAP14 SWAP11 DIV BLOBHASH 0x22 0xB6 0xE5 BYTE PUSH31 0x4B81F28FC2A3FA64736F6C634300081C003300000000000000000000000000 ","sourceMap":"1255:3026:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634a59fab05765d67f31cc583ea360299d9a044922b6e51a7e4b81f28fc2a3fa64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4A59FAB0 JUMPI PUSH6 0xD67F31CC583E LOG3 PUSH1 0x29 SWAP14 SWAP11 DIV BLOBHASH 0x22 0xB6 0xE5 BYTE PUSH31 0x4B81F28FC2A3FA64736F6C634300081C003300000000000000000000000000 ","sourceMap":"1255:3026:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b68d30b63a6eb1f31690db7089608c3d253889b7a5a42f7d1bf88ee718364364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB6 DUP14 ADDRESS 0xB6 GASPRICE PUSH15 0xB1F31690DB7089608C3D253889B7A5 LOG4 0x2F PUSH30 0x1BF88EE718364364736F6C634300081C0033000000000000000000000000 ","sourceMap":"251:3680:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b68d30b63a6eb1f31690db7089608c3d253889b7a5a42f7d1bf88ee718364364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB6 DUP14 ADDRESS 0xB6 GASPRICE PUSH15 0xB1F31690DB7089608C3D253889B7A5 LOG4 0x2F PUSH30 0x1BF88EE718364364736F6C634300081C0033000000000000000000000000 ","sourceMap":"251:3680:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f25eb071b4407f809f71cc583db7aec8e1433e0c8bf405bd3be048cceb0b1c8e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE MCOPY 0xB0 PUSH18 0xB4407F809F71CC583DB7AEC8E1433E0C8BF4 SDIV 0xBD EXTCODESIZE 0xE0 BASEFEE 0xCC 0xEB SIGNEXTEND SHR DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3181:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f25eb071b4407f809f71cc583db7aec8e1433e0c8bf405bd3be048cceb0b1c8e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE MCOPY 0xB0 PUSH18 0xB4407F809F71CC583DB7AEC8E1433E0C8BF4 SDIV 0xBD EXTCODESIZE 0xE0 BASEFEE 0xCC 0xEB SIGNEXTEND SHR DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3181:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/CATFactory.sol":{"CATFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"catAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"CATCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"administerableTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"thresholdSupply","type":"uint256"},{"internalType":"uint256","name":"maxExpansionRate","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"name":"createCAT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"catAddress","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"name":"grantMinterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"mintableTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalCATs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_6542":{"entryPoint":null,"id":6542,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":153,"id":525,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:26","nodeType":"YulBlock","src":"0:590:26","statements":[{"body":{"nativeSrc":"52:81:26","nodeType":"YulBlock","src":"52:81:26","statements":[{"nativeSrc":"62:65:26","nodeType":"YulAssignment","src":"62:65:26","value":{"arguments":[{"name":"value","nativeSrc":"77:5:26","nodeType":"YulIdentifier","src":"77:5:26"},{"kind":"number","nativeSrc":"84:42:26","nodeType":"YulLiteral","src":"84:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:26","nodeType":"YulIdentifier","src":"73:3:26"},"nativeSrc":"73:54:26","nodeType":"YulFunctionCall","src":"73:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:26","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:26","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:26","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:126:26"},{"body":{"nativeSrc":"184:51:26","nodeType":"YulBlock","src":"184:51:26","statements":[{"nativeSrc":"194:35:26","nodeType":"YulAssignment","src":"194:35:26","value":{"arguments":[{"name":"value","nativeSrc":"223:5:26","nodeType":"YulIdentifier","src":"223:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:26","nodeType":"YulIdentifier","src":"205:17:26"},"nativeSrc":"205:24:26","nodeType":"YulFunctionCall","src":"205:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:26","nodeType":"YulIdentifier","src":"194:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:26","nodeType":"YulTypedName","src":"166:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:26","nodeType":"YulTypedName","src":"176:7:26","type":""}],"src":"139:96:26"},{"body":{"nativeSrc":"306:53:26","nodeType":"YulBlock","src":"306:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:26","nodeType":"YulIdentifier","src":"323:3:26"},{"arguments":[{"name":"value","nativeSrc":"346:5:26","nodeType":"YulIdentifier","src":"346:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:26","nodeType":"YulIdentifier","src":"328:17:26"},"nativeSrc":"328:24:26","nodeType":"YulFunctionCall","src":"328:24:26"}],"functionName":{"name":"mstore","nativeSrc":"316:6:26","nodeType":"YulIdentifier","src":"316:6:26"},"nativeSrc":"316:37:26","nodeType":"YulFunctionCall","src":"316:37:26"},"nativeSrc":"316:37:26","nodeType":"YulExpressionStatement","src":"316:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:26","nodeType":"YulTypedName","src":"294:5:26","type":""},{"name":"pos","nativeSrc":"301:3:26","nodeType":"YulTypedName","src":"301:3:26","type":""}],"src":"241:118:26"},{"body":{"nativeSrc":"463:124:26","nodeType":"YulBlock","src":"463:124:26","statements":[{"nativeSrc":"473:26:26","nodeType":"YulAssignment","src":"473:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:26","nodeType":"YulIdentifier","src":"485:9:26"},{"kind":"number","nativeSrc":"496:2:26","nodeType":"YulLiteral","src":"496:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:26","nodeType":"YulIdentifier","src":"481:3:26"},"nativeSrc":"481:18:26","nodeType":"YulFunctionCall","src":"481:18:26"},"variableNames":[{"name":"tail","nativeSrc":"473:4:26","nodeType":"YulIdentifier","src":"473:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:26","nodeType":"YulIdentifier","src":"553:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:26","nodeType":"YulIdentifier","src":"566:9:26"},{"kind":"number","nativeSrc":"577:1:26","nodeType":"YulLiteral","src":"577:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:26","nodeType":"YulIdentifier","src":"562:3:26"},"nativeSrc":"562:17:26","nodeType":"YulFunctionCall","src":"562:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:26","nodeType":"YulIdentifier","src":"509:43:26"},"nativeSrc":"509:71:26","nodeType":"YulFunctionCall","src":"509:71:26"},"nativeSrc":"509:71:26","nodeType":"YulExpressionStatement","src":"509:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:26","nodeType":"YulTypedName","src":"435:9:26","type":""},{"name":"value0","nativeSrc":"447:6:26","nodeType":"YulTypedName","src":"447:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:26","nodeType":"YulTypedName","src":"458:4:26","type":""}],"src":"365:222:26"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b614985806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101275780638da5cb5b14610131578063c76fdf681461014f578063f2fde38b1461017f57610088565b8063247db5dd1461008d57806325c71938146100ab5780633385ab9c146100c7578063387e8311146100f7575b600080fd5b61009561019b565b6040516100a29190610705565b60405180910390f35b6100c560048036038101906100c09190610792565b6101b0565b005b6100e160048036038101906100dc91906107fe565b6102c7565b6040516100ee919061084d565b60405180910390f35b610111600480360381019061010c91906107fe565b610315565b60405161011e919061084d565b60405180910390f35b61012f610363565b005b610139610377565b604051610146919061084d565b60405180910390f35b610169600480360381019061016491906109ae565b6103a0565b604051610176919061084d565b60405180910390f35b61019960048036038101906101949190610a61565b610506565b005b6000600180546101ab9190610abd565b905090565b6101b861058c565b8173ffffffffffffffffffffffffffffffffffffffff16633dd1eb61826040518263ffffffff1660e01b81526004016101f1919061084d565b600060405180830381600087803b15801561020b57600080fd5b505af115801561021f573d6000803e3d6000fd5b50505050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260205281600052604060002081815481106102e357600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052816000526040600020818154811061033157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61036b61058c565b6103756000610613565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806001549050600160008154809291906103bb90610af1565b919050555060003388888888886040516103d4906106df565b6103e396959493929190610bb8565b604051809103906000f0801580156103ff573d6000803e3d6000fd5b5090506000819050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f054189e2ad79e5c2d10e8da115126520634a6a9b369a130345025ae1ddeafe9282856040516104ef929190610c27565b60405180910390a280935050505095945050505050565b61050e61058c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105805760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610577919061084d565b60405180910390fd5b61058981610613565b50565b6105946106d7565b73ffffffffffffffffffffffffffffffffffffffff166105b2610377565b73ffffffffffffffffffffffffffffffffffffffff1614610611576105d56106d7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610608919061084d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b613cff80610c5183390190565b6000819050919050565b6106ff816106ec565b82525050565b600060208201905061071a60008301846106f6565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075f82610734565b9050919050565b61076f81610754565b811461077a57600080fd5b50565b60008135905061078c81610766565b92915050565b600080604083850312156107a9576107a861072a565b5b60006107b78582860161077d565b92505060206107c88582860161077d565b9150509250929050565b6107db816106ec565b81146107e657600080fd5b50565b6000813590506107f8816107d2565b92915050565b600080604083850312156108155761081461072a565b5b60006108238582860161077d565b9250506020610834858286016107e9565b9150509250929050565b61084781610754565b82525050565b6000602082019050610862600083018461083e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108bb82610872565b810181811067ffffffffffffffff821117156108da576108d9610883565b5b80604052505050565b60006108ed610720565b90506108f982826108b2565b919050565b600067ffffffffffffffff82111561091957610918610883565b5b61092282610872565b9050602081019050919050565b82818337600083830152505050565b600061095161094c846108fe565b6108e3565b90508281526020810184848401111561096d5761096c61086d565b5b61097884828561092f565b509392505050565b600082601f83011261099557610994610868565b5b81356109a584826020860161093e565b91505092915050565b600080600080600060a086880312156109ca576109c961072a565b5b60006109d8888289016107e9565b95505060206109e9888289016107e9565b94505060406109fa888289016107e9565b935050606086013567ffffffffffffffff811115610a1b57610a1a61072f565b5b610a2788828901610980565b925050608086013567ffffffffffffffff811115610a4857610a4761072f565b5b610a5488828901610980565b9150509295509295909350565b600060208284031215610a7757610a7661072a565b5b6000610a858482850161077d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ac8826106ec565b9150610ad3836106ec565b9250828203905081811115610aeb57610aea610a8e565b5b92915050565b6000610afc826106ec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b2e57610b2d610a8e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b73578082015181840152602081019050610b58565b60008484015250505050565b6000610b8a82610b39565b610b948185610b44565b9350610ba4818560208601610b55565b610bad81610872565b840191505092915050565b600060c082019050610bcd600083018961083e565b610bda60208301886106f6565b610be760408301876106f6565b610bf460608301866106f6565b8181036080830152610c068185610b7f565b905081810360a0830152610c1a8184610b7f565b9050979650505050505050565b6000604082019050610c3c600083018561083e565b610c4960208301846106f6565b939250505056fe6101806040526001600c60006101000a81548160ff02191690831515021790555073355e559bca86346b82d58be0460d661db481e05e73ffffffffffffffffffffffffffffffffffffffff166101609073ffffffffffffffffffffffffffffffffffffffff1681525034801561007457600080fd5b50604051613cff380380613cff833981810160405281019061009691906106c0565b81806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250848481600390816100df919061099c565b5080600490816100ef919061099c565b50505061010660058361022960201b90919060201c565b610120818152505061012260068261022960201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505061015f61027960201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506101b06000801b876102d460201b60201c565b506101e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876102d460201b60201c565b508460098190555083600a8190555082600b8190555081600e9081610206919061099c565b5080600f9081610216919061099c565b5042600d81905550505050505050610bfb565b600060208351101561024b57610244836103d260201b60201c565b9050610273565b8261025b8361043a60201b60201c565b600001908161026a919061099c565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016102b9959493929190610aa5565b60405160208183030381529060405280519060200120905090565b60006102e6838361044460201b60201c565b6103c75760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103646104af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506103cc565b600090505b92915050565b600080829050601f8151111561041f57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016104169190610b42565b60405180910390fd5b80518161042b90610b94565b60001c1760001b915050919050565b6000819050919050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f6826104cb565b9050919050565b610506816104eb565b811461051157600080fd5b50565b600081519050610523816104fd565b92915050565b6000819050919050565b61053c81610529565b811461054757600080fd5b50565b60008151905061055981610533565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105b282610569565b810181811067ffffffffffffffff821117156105d1576105d061057a565b5b80604052505050565b60006105e46104b7565b90506105f082826105a9565b919050565b600067ffffffffffffffff8211156106105761060f61057a565b5b61061982610569565b9050602081019050919050565b60005b83811015610644578082015181840152602081019050610629565b60008484015250505050565b600061066361065e846105f5565b6105da565b90508281526020810184848401111561067f5761067e610564565b5b61068a848285610626565b509392505050565b600082601f8301126106a7576106a661055f565b5b81516106b7848260208601610650565b91505092915050565b60008060008060008060c087890312156106dd576106dc6104c1565b5b60006106eb89828a01610514565b96505060206106fc89828a0161054a565b955050604061070d89828a0161054a565b945050606061071e89828a0161054a565b935050608087015167ffffffffffffffff81111561073f5761073e6104c6565b5b61074b89828a01610692565b92505060a087015167ffffffffffffffff81111561076c5761076b6104c6565b5b61077889828a01610692565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107d757607f821691505b6020821081036107ea576107e9610790565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610815565b61085c8683610815565b95508019841693508086168417925050509392505050565b6000819050919050565b600061089961089461088f84610529565b610874565b610529565b9050919050565b6000819050919050565b6108b38361087e565b6108c76108bf826108a0565b848454610822565b825550505050565b600090565b6108dc6108cf565b6108e78184846108aa565b505050565b5b8181101561090b576109006000826108d4565b6001810190506108ed565b5050565b601f82111561095057610921816107f0565b61092a84610805565b81016020851015610939578190505b61094d61094585610805565b8301826108ec565b50505b505050565b600082821c905092915050565b600061097360001984600802610955565b1980831691505092915050565b600061098c8383610962565b9150826002028217905092915050565b6109a582610785565b67ffffffffffffffff8111156109be576109bd61057a565b5b6109c882546107bf565b6109d382828561090f565b600060209050601f831160018114610a0657600084156109f4578287015190505b6109fe8582610980565b865550610a66565b601f198416610a14866107f0565b60005b82811015610a3c57848901518255600182019150602085019450602081019050610a17565b86831015610a595784890151610a55601f891682610962565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b610a8181610a6e565b82525050565b610a9081610529565b82525050565b610a9f816104eb565b82525050565b600060a082019050610aba6000830188610a78565b610ac76020830187610a78565b610ad46040830186610a78565b610ae16060830185610a87565b610aee6080830184610a96565b9695505050505050565b600082825260208201905092915050565b6000610b1482610785565b610b1e8185610af8565b9350610b2e818560208601610626565b610b3781610569565b840191505092915050565b60006020820190508181036000830152610b5c8184610b09565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000610b8b8251610a6e565b80915050919050565b6000610b9f82610b64565b82610ba984610b6f565b9050610bb481610b7f565b92506020821015610bf457610bef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802610815565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161016051613098610c6760003960008181610a640152610dbf0152600061182b015260006117f001526000611c4b01526000611c2a01526000611576015260006115cc015260006115f501526130986000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c8063735328021161013057806395d89b41116100b8578063d547741f1161007c578063d547741f14610687578063d5abeb01146106a3578063dd62ed3e146106c1578063e488ede8146106f1578063e6ad10e11461070d57610232565b806395d89b41146105e1578063a217fddf146105ff578063a9059cbb1461061d578063d505accf1461064d578063d53913931461066957610232565b806381fb8b06116100ff57806381fb8b061461054757806383de3e6a1461056557806384b0196e1461056f5780638e80ff5d1461059357806391d14854146105b157610232565b806373532802146104bf57806375b238fc146104db5780637b61c320146104f95780637ecebe001461051757610232565b80633644e515116101be57806355233b481161018257806355233b481461041957806369e2f0fb146104375780636c02a931146104535780636c8597fc1461047157806370a082311461048f57610232565b80633644e5151461038957806336568abe146103a75780633dd1eb61146103c357806340c10f19146103df57806348709a93146103fb57610232565b806318160ddd1161020557806318160ddd146102d157806323b872dd146102ef578063248a9ca31461031f5780632f2ff15d1461034f578063313ce5671461036b57610232565b806301ffc9a71461023757806306fdde03146102675780630914d4da14610285578063095ea7b3146102a1575b600080fd5b610251600480360381019061024c919061232a565b61072b565b60405161025e9190612372565b60405180910390f35b61026f6107a5565b60405161027c919061241d565b60405180910390f35b61029f600480360381019061029a9190612475565b610837565b005b6102bb60048036038101906102b69190612500565b610893565b6040516102c89190612372565b60405180910390f35b6102d96108b6565b6040516102e6919061254f565b60405180910390f35b6103096004803603810190610304919061256a565b6108c0565b6040516103169190612372565b60405180910390f35b610339600480360381019061033491906125f3565b6108ef565b604051610346919061262f565b60405180910390f35b6103696004803603810190610364919061264a565b61090f565b005b610373610931565b60405161038091906126a6565b60405180910390f35b61039161093a565b60405161039e919061262f565b60405180910390f35b6103c160048036038101906103bc919061264a565b610949565b005b6103dd60048036038101906103d891906126c1565b6109c4565b005b6103f960048036038101906103f49190612500565b6109ff565b005b610403610b8a565b6040516104109190612372565b60405180910390f35b610421610b9d565b60405161042e919061254f565b60405180910390f35b610451600480360381019061044c91906126c1565b610ba3565b005b61045b610bde565b604051610468919061241d565b60405180910390f35b610479610c6c565b604051610486919061254f565b60405180910390f35b6104a960048036038101906104a491906126c1565b610c72565b6040516104b6919061254f565b60405180910390f35b6104d960048036038101906104d49190612475565b610cba565b005b6104e3610d16565b6040516104f0919061262f565b60405180910390f35b610501610d1d565b60405161050e919061241d565b60405180910390f35b610531600480360381019061052c91906126c1565b610dab565b60405161053e919061254f565b60405180910390f35b61054f610dbd565b60405161055c91906126fd565b60405180910390f35b61056d610de1565b005b610577610e0c565b60405161058a9796959493929190612811565b60405180910390f35b61059b610eb6565b6040516105a8919061254f565b60405180910390f35b6105cb60048036038101906105c6919061264a565b610ebc565b6040516105d89190612372565b60405180910390f35b6105e9610f27565b6040516105f6919061241d565b60405180910390f35b610607610fb9565b604051610614919061262f565b60405180910390f35b61063760048036038101906106329190612500565b610fc0565b6040516106449190612372565b60405180910390f35b610667600480360381019061066291906128c1565b610fe3565b005b61067161112b565b60405161067e919061262f565b60405180910390f35b6106a1600480360381019061069c919061264a565b61114f565b005b6106ab611171565b6040516106b8919061254f565b60405180910390f35b6106db60048036038101906106d69190612963565b611177565b6040516106e8919061254f565b60405180910390f35b61070b60048036038101906107069190612475565b6111fe565b005b61071561125a565b604051610722919061254f565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079e575061079d82611260565b5b9050919050565b6060600380546107b4906129d2565b80601f01602080910402602001604051908101604052809291908181526020018280546107e0906129d2565b801561082d5780601f106108025761010080835404028352916020019161082d565b820191906000526020600020905b81548152906001019060200180831161081057829003601f168201915b5050505050905090565b6000801b610844816112ca565b600a548210610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90612a75565b60405180910390fd5b81600a819055505050565b60008061089e6112de565b90506108ab8185856112e6565b600191505092915050565b6000600254905090565b6000806108cb6112de565b90506108d88582856112f8565b6108e385858561138c565b60019150509392505050565b600060086000838152602001908152602001600020600101549050919050565b610918826108ef565b610921816112ca565b61092b8383611480565b50505050565b60006012905090565b6000610944611572565b905090565b6109516112de565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b5576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bf8282611629565b505050565b6000801b6109d1816112ca565b6109fb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361090f565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a29816112ca565b6000610a336108b6565b90506000620186a06101f485610a499190612ac4565b610a539190612b35565b9050610a5f858561171c565b610a897f00000000000000000000000000000000000000000000000000000000000000008261171c565b42600d81905550600954818584610aa09190612b66565b610aaa9190612b66565b1115610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290612be6565b60405180910390fd5b600a548210610b83576000600d5442610b049190612c06565b9050600063bbf81e0082600b5486610b1c9190612ac4565b610b269190612ac4565b610b309190612b35565b9050808387610b3f9190612b66565b1115610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790612c86565b60405180910390fd5b50505b5050505050565b600c60009054906101000a900460ff1681565b600b5481565b6000801b610bb0816112ca565b610bda7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361114f565b5050565b600e8054610beb906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c17906129d2565b8015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b505050505081565b6101f481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b610cc7816112ca565b6009548210610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0290612d18565b60405180910390fd5b816009819055505050565b6000801b81565b600f8054610d2a906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d56906129d2565b8015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505050505081565b6000610db68261179e565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000801b610dee816112ca565b6000600c60006101000a81548160ff02191690831515021790555050565b600060608060008060006060610e206117e7565b610e28611822565b46306000801b600067ffffffffffffffff811115610e4957610e48612d38565b5b604051908082528060200260200182016040528015610e775781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600d5481565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610f36906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f62906129d2565b8015610faf5780601f10610f8457610100808354040283529160200191610faf565b820191906000526020600020905b815481529060010190602001808311610f9257829003601f168201915b5050505050905090565b6000801b81565b600080610fcb6112de565b9050610fd881858561138c565b600191505092915050565b8342111561102857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161101f919061254f565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886110578c61185d565b8960405160200161106d96959493929190612d67565b6040516020818303038152906040528051906020012090506000611090826118b4565b905060006110a0828787876118ce565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461111457808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161110b929190612dc8565b60405180910390fd5b61111f8a8a8a6112e6565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611158826108ef565b611161816112ca565b61116b8383611629565b50505050565b60095481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000801b61120b816112ca565b600b54821061124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124690612e89565b60405180910390fd5b81600b819055505050565b600a5481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6112db816112d66112de565b6118fe565b50565b600033905090565b6112f3838383600161194f565b505050565b60006113048484611177565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113865781811015611376578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161136d93929190612ea9565b60405180910390fd5b6113858484848403600061194f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fe5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113f591906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114705760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161146791906126fd565b60405180910390fd5b61147b838383611b26565b505050565b600061148c8383610ebc565b6115675760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115046112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061156c565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156115ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561161b577f00000000000000000000000000000000000000000000000000000000000000009050611626565b611623611c05565b90505b90565b60006116358383610ebc565b156117115760006008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116ae6112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611716565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361178e5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161178591906126fd565b60405180910390fd5b61179a60008383611b26565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061181d60057f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b606061185860067f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006118c76118c1611572565b83611d4b565b9050919050565b6000806000806118e088888888611d8c565b9250925092506118f08282611e80565b829350505050949350505050565b6119088282610ebc565b61194b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611942929190612ee0565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119c15760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119b891906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a335760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a2a91906126fd565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611b20578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b17919061254f565b60405180910390a35b50505050565b600c60009054906101000a900460ff1615611bf557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611ba25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611bb557506000611bb383610c72565b115b611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb90612f7b565b60405180910390fd5b5b611c00838383611fe4565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611c80959493929190612f9b565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611cb857611cb183612209565b9050611d45565b818054611cc4906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054611cf0906129d2565b8015611d3d5780601f10611d1257610100808354040283529160200191611d3d565b820191906000526020600020905b815481529060010190602001808311611d2057829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611dcc576000600385925092509250611e76565b600060018888888860405160008152602001604052604051611df19493929190612fee565b6020604051602081039080840390855afa158015611e13573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e6757600060016000801b93509350935050611e76565b8060008060001b935093509350505b9450945094915050565b60006003811115611e9457611e93613033565b5b826003811115611ea757611ea6613033565b5b0315611fe05760016003811115611ec157611ec0613033565b5b826003811115611ed457611ed3613033565b5b03611f0b576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611f1f57611f1e613033565b5b826003811115611f3257611f31613033565b5b03611f77578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611f6e919061254f565b60405180910390fd5b600380811115611f8a57611f89613033565b5b826003811115611f9d57611f9c613033565b5b03611fdf57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611fd6919061262f565b60405180910390fd5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361203657806002600082825461202a9190612b66565b92505081905550612109565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156120c2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016120b993929190612ea9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612152578060026000828254039250508190555061219f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121fc919061254f565b60405180910390a3505050565b606060006122168361227d565b90506000602067ffffffffffffffff81111561223557612234612d38565b5b6040519080825280601f01601f1916602001820160405280156122675781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156122c4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612307816122d2565b811461231257600080fd5b50565b600081359050612324816122fe565b92915050565b6000602082840312156123405761233f6122cd565b5b600061234e84828501612315565b91505092915050565b60008115159050919050565b61236c81612357565b82525050565b60006020820190506123876000830184612363565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123c75780820151818401526020810190506123ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006123ef8261238d565b6123f98185612398565b93506124098185602086016123a9565b612412816123d3565b840191505092915050565b6000602082019050818103600083015261243781846123e4565b905092915050565b6000819050919050565b6124528161243f565b811461245d57600080fd5b50565b60008135905061246f81612449565b92915050565b60006020828403121561248b5761248a6122cd565b5b600061249984828501612460565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124cd826124a2565b9050919050565b6124dd816124c2565b81146124e857600080fd5b50565b6000813590506124fa816124d4565b92915050565b60008060408385031215612517576125166122cd565b5b6000612525858286016124eb565b925050602061253685828601612460565b9150509250929050565b6125498161243f565b82525050565b60006020820190506125646000830184612540565b92915050565b600080600060608486031215612583576125826122cd565b5b6000612591868287016124eb565b93505060206125a2868287016124eb565b92505060406125b386828701612460565b9150509250925092565b6000819050919050565b6125d0816125bd565b81146125db57600080fd5b50565b6000813590506125ed816125c7565b92915050565b600060208284031215612609576126086122cd565b5b6000612617848285016125de565b91505092915050565b612629816125bd565b82525050565b60006020820190506126446000830184612620565b92915050565b60008060408385031215612661576126606122cd565b5b600061266f858286016125de565b9250506020612680858286016124eb565b9150509250929050565b600060ff82169050919050565b6126a08161268a565b82525050565b60006020820190506126bb6000830184612697565b92915050565b6000602082840312156126d7576126d66122cd565b5b60006126e5848285016124eb565b91505092915050565b6126f7816124c2565b82525050565b600060208201905061271260008301846126ee565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61274d81612718565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127888161243f565b82525050565b600061279a838361277f565b60208301905092915050565b6000602082019050919050565b60006127be82612753565b6127c8818561275e565b93506127d38361276f565b8060005b838110156128045781516127eb888261278e565b97506127f6836127a6565b9250506001810190506127d7565b5085935050505092915050565b600060e082019050612826600083018a612744565b818103602083015261283881896123e4565b9050818103604083015261284c81886123e4565b905061285b6060830187612540565b61286860808301866126ee565b61287560a0830185612620565b81810360c083015261288781846127b3565b905098975050505050505050565b61289e8161268a565b81146128a957600080fd5b50565b6000813590506128bb81612895565b92915050565b600080600080600080600060e0888a0312156128e0576128df6122cd565b5b60006128ee8a828b016124eb565b97505060206128ff8a828b016124eb565b96505060406129108a828b01612460565b95505060606129218a828b01612460565b94505060806129328a828b016128ac565b93505060a06129438a828b016125de565b92505060c06129548a828b016125de565b91505092959891949750929550565b6000806040838503121561297a576129796122cd565b5b6000612988858286016124eb565b9250506020612999858286016124eb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129ea57607f821691505b6020821081036129fd576129fc6129a3565b5b50919050565b7f4e6577207468726573686f6c6420737570706c79206d757374206265206c657360008201527f73207468616e2063757272656e74207468726573686f6c6420737570706c7900602082015250565b6000612a5f603f83612398565b9150612a6a82612a03565b604082019050919050565b60006020820190508181036000830152612a8e81612a52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612acf8261243f565b9150612ada8361243f565b9250828202612ae88161243f565b91508282048414831517612aff57612afe612a95565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b408261243f565b9150612b4b8361243f565b925082612b5b57612b5a612b06565b5b828204905092915050565b6000612b718261243f565b9150612b7c8361243f565b9250828201905080821115612b9457612b93612a95565b5b92915050565b7f45786365656473206d6178696d756d20737570706c7900000000000000000000600082015250565b6000612bd0601683612398565b9150612bdb82612b9a565b602082019050919050565b60006020820190508181036000830152612bff81612bc3565b9050919050565b6000612c118261243f565b9150612c1c8361243f565b9250828203905081811115612c3457612c33612a95565b5b92915050565b7f45786365656473206d6178696d756d20657870616e73696f6e20726174650000600082015250565b6000612c70601e83612398565b9150612c7b82612c3a565b602082019050919050565b60006020820190508181036000830152612c9f81612c63565b9050919050565b7f4e6577206d617820737570706c79206d757374206265206c657373207468616e60008201527f2063757272656e74206d617820737570706c7900000000000000000000000000602082015250565b6000612d02603383612398565b9150612d0d82612ca6565b604082019050919050565b60006020820190508181036000830152612d3181612cf5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050612d7c6000830189612620565b612d8960208301886126ee565b612d9660408301876126ee565b612da36060830186612540565b612db06080830185612540565b612dbd60a0830184612540565b979650505050505050565b6000604082019050612ddd60008301856126ee565b612dea60208301846126ee565b9392505050565b7f4e6577206d617820657870616e73696f6e2072617465206d757374206265206c60008201527f657373207468616e2063757272656e74206d617820657870616e73696f6e207260208201527f6174650000000000000000000000000000000000000000000000000000000000604082015250565b6000612e73604383612398565b9150612e7e82612df1565b606082019050919050565b60006020820190508181036000830152612ea281612e66565b9050919050565b6000606082019050612ebe60008301866126ee565b612ecb6020830185612540565b612ed86040830184612540565b949350505050565b6000604082019050612ef560008301856126ee565b612f026020830184612620565b9392505050565b7f5472616e73666572207265737472696374656420746f206578697374696e672060008201527f746f6b656e20686f6c6465727300000000000000000000000000000000000000602082015250565b6000612f65602d83612398565b9150612f7082612f09565b604082019050919050565b60006020820190508181036000830152612f9481612f58565b9050919050565b600060a082019050612fb06000830188612620565b612fbd6020830187612620565b612fca6040830186612620565b612fd76060830185612540565b612fe460808301846126ee565b9695505050505050565b60006080820190506130036000830187612620565b6130106020830186612697565b61301d6040830185612620565b61302a6060830184612620565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220f00b10514571d19e56da615bf2b400bf4610a5e73035179358a9b37985f6615164736f6c634300081c0033a26469706673582212209e772aa83a5d21fefc847ff87704cbb5176491be247ff6f79aec143b561a82ae64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4985 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xC76FDF68 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x247DB5DD EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x25C71938 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3385AB9C EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x387E8311 EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA61 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x58C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DD1EB61 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x58C JUMP JUMPDEST PUSH2 0x375 PUSH1 0x0 PUSH2 0x613 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB SWAP1 PUSH2 0xAF1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x3E3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54189E2AD79E5C2D10E8DA115126520634A6A9B369A130345025AE1DDEAFE92 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP3 SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x50E PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x613 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x594 PUSH2 0x6D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B2 PUSH2 0x377 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x611 JUMPI PUSH2 0x5D5 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3CFF DUP1 PUSH2 0xC51 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F DUP3 PUSH2 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x754 JUMP JUMPDEST DUP2 EQ PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78C DUP2 PUSH2 0x766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B7 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7C8 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F8 DUP2 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x815 JUMPI PUSH2 0x814 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x823 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x834 DUP6 DUP3 DUP7 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BB DUP3 PUSH2 0x872 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8DA JUMPI PUSH2 0x8D9 PUSH2 0x883 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8ED PUSH2 0x720 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F9 DUP3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x883 JUMP JUMPDEST JUMPDEST PUSH2 0x922 DUP3 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x951 PUSH2 0x94C DUP5 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96C PUSH2 0x86D JUMP JUMPDEST JUMPDEST PUSH2 0x978 DUP5 DUP3 DUP6 PUSH2 0x92F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x868 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9E9 DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9FA DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0x72F JUMP JUMPDEST JUMPDEST PUSH2 0xA27 DUP9 DUP3 DUP10 ADD PUSH2 0x980 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x72F JUMP JUMPDEST JUMPDEST PUSH2 0xA54 DUP9 DUP3 DUP10 ADD PUSH2 0x980 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA85 DUP5 DUP3 DUP6 ADD PUSH2 0x77D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH2 0xAD3 DUP4 PUSH2 0x6EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0xA8E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB2E JUMPI PUSH2 0xB2D PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP3 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB94 DUP2 DUP6 PUSH2 0xB44 JUMP JUMPDEST SWAP4 POP PUSH2 0xBA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB55 JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x872 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xBCD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xBF4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xC06 DUP2 DUP6 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xC1A DUP2 DUP5 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC3C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xC49 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH2 0x180 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH20 0x355E559BCA86346B82D58BE0460D661DB481E05E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CFF CODESIZE SUB DUP1 PUSH2 0x3CFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP POP POP PUSH2 0x106 PUSH1 0x5 DUP4 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x122 PUSH1 0x6 DUP3 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x15F PUSH2 0x279 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x1B0 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1E1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE SWAP1 DUP2 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0xF SWAP1 DUP2 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x24B JUMPI PUSH2 0x244 DUP4 PUSH2 0x3D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x273 JUMP JUMPDEST DUP3 PUSH2 0x25B DUP4 PUSH2 0x43A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP4 DUP4 PUSH2 0x444 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C7 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x364 PUSH2 0x4AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x41F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x42B SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x4CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C DUP2 PUSH2 0x529 JUMP JUMPDEST DUP2 EQ PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x559 DUP2 PUSH2 0x533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5B2 DUP3 PUSH2 0x569 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x57A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x4B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F0 DUP3 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x619 DUP3 PUSH2 0x569 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x644 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 PUSH2 0x65E DUP5 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x67F JUMPI PUSH2 0x67E PUSH2 0x564 JUMP JUMPDEST JUMPDEST PUSH2 0x68A DUP5 DUP3 DUP6 PUSH2 0x626 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x6B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x4C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP10 DUP3 DUP11 ADD PUSH2 0x514 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6FC DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x70D DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x71E DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73F JUMPI PUSH2 0x73E PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x74B DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76C JUMPI PUSH2 0x76B PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x778 DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x852 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x85C DUP7 DUP4 PUSH2 0x815 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x899 PUSH2 0x894 PUSH2 0x88F DUP5 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8BF DUP3 PUSH2 0x8A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x822 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x8E7 DUP2 DUP5 DUP5 PUSH2 0x8AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90B JUMPI PUSH2 0x900 PUSH1 0x0 DUP3 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x950 JUMPI PUSH2 0x921 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x92A DUP5 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x939 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x94D PUSH2 0x945 DUP6 PUSH2 0x805 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x973 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x955 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP4 DUP4 PUSH2 0x962 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x9C8 DUP3 SLOAD PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x9D3 DUP3 DUP3 DUP6 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA06 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x9F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9FE DUP6 DUP3 PUSH2 0x980 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA14 DUP7 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA3C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA17 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA59 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA55 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x962 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0xA6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0x529 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xABA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAC7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAD4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAE1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH2 0xB1E DUP2 DUP6 PUSH2 0xAF8 JUMP JUMPDEST SWAP4 POP PUSH2 0xB2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0xB37 DUP2 PUSH2 0x569 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5C DUP2 DUP5 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP3 MLOAD PUSH2 0xA6E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9F DUP3 PUSH2 0xB64 JUMP JUMPDEST DUP3 PUSH2 0xBA9 DUP5 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBEF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x815 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3098 PUSH2 0xC67 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA64 ADD MSTORE PUSH2 0xDBF ADD MSTORE PUSH1 0x0 PUSH2 0x182B ADD MSTORE PUSH1 0x0 PUSH2 0x17F0 ADD MSTORE PUSH1 0x0 PUSH2 0x1C4B ADD MSTORE PUSH1 0x0 PUSH2 0x1C2A ADD MSTORE PUSH1 0x0 PUSH2 0x1576 ADD MSTORE PUSH1 0x0 PUSH2 0x15CC ADD MSTORE PUSH1 0x0 PUSH2 0x15F5 ADD MSTORE PUSH2 0x3098 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73532802 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE488EDE8 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE6AD10E1 EQ PUSH2 0x70D JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x669 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81FB8B06 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x81FB8B06 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x83DE3E6A EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x8E80FF5D EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x73532802 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x517 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55233B48 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x55233B48 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x69E2F0FB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x6C8597FC EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x3FB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x914D4DA EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x403 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x671 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AB PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x715 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH2 0x79D DUP3 PUSH2 0x1260 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7B4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x802 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x810 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x89E PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8AB DUP2 DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D8 DUP6 DUP3 DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8E3 DUP6 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x92B DUP4 DUP4 PUSH2 0x1480 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x944 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BF DUP3 DUP3 PUSH2 0x1629 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9D1 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xA29 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1F4 DUP6 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5F DUP6 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x0 DUP3 PUSH2 0x171C JUMP JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD DUP2 DUP6 DUP5 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xB83 JUMPI PUSH1 0x0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xB SLOAD DUP7 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBB0 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xBDA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x114F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xBEB SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC17 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCC7 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xD2A SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xDEE DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xE20 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x1822 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF62 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0xFD8 DUP2 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1057 DUP13 PUSH2 0x185D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x106D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1090 DUP3 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1114 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP3 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F DUP11 DUP11 DUP11 PUSH2 0x12E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1158 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x120B DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12D6 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x194F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1386 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x194F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1504 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15EE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x161B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1623 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16AE PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x179A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x181D PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1858 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x1572 JUMP JUMPDEST DUP4 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x18E0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F0 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1908 DUP3 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x194B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B8 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B20 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1BB5 JUMPI POP PUSH1 0x0 PUSH2 0x1BB3 DUP4 PUSH2 0xC72 JUMP JUMPDEST GT JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1C00 DUP4 DUP4 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB8 JUMPI PUSH2 0x1CB1 DUP4 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D45 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E67 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1E76 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F77 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FDF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2036 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2152 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2216 DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2324 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP5 DUP3 DUP6 ADD PUSH2 0x2315 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2387 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EF DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x23F9 DUP2 DUP6 PUSH2 0x2398 JUMP JUMPDEST SWAP4 POP PUSH2 0x2409 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A9 JUMP JUMPDEST PUSH2 0x2412 DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP2 EQ PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246F DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248B JUMPI PUSH2 0x248A PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP5 DUP3 DUP6 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CD DUP3 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DD DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FA DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2536 DUP6 DUP3 DUP7 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2591 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A2 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B3 DUP7 DUP3 DUP8 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25ED DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2629 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2660 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP6 DUP3 DUP7 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A0 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP5 DUP3 DUP6 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26F7 DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2712 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274D DUP2 PUSH2 0x2718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2788 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP4 DUP4 PUSH2 0x277F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH2 0x27C8 DUP2 DUP6 PUSH2 0x275E JUMP JUMPDEST SWAP4 POP PUSH2 0x27D3 DUP4 PUSH2 0x276F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2804 JUMPI DUP2 MLOAD PUSH2 0x27EB DUP9 DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP8 POP PUSH2 0x27F6 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2826 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2744 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2838 DUP2 DUP10 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x284C DUP2 DUP9 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x285B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2868 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2875 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2887 DUP2 DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x28A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BB DUP2 PUSH2 0x2895 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH2 0x28DF PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28FF DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2910 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2921 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2932 DUP11 DUP3 DUP12 ADD PUSH2 0x28AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2943 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2954 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297A JUMPI PUSH2 0x2979 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2988 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2999 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29FD JUMPI PUSH2 0x29FC PUSH2 0x29A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577207468726573686F6C6420737570706C79206D757374206265206C6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73207468616E2063757272656E74207468726573686F6C6420737570706C7900 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5F PUSH1 0x3F DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6A DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8E DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ACF DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADA DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AE8 DUP2 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B40 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4B DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B94 JUMPI PUSH2 0x2B93 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20737570706C7900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 PUSH1 0x16 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20657870616E73696F6E20726174650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1E DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206D757374206265206C657373207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74206D617820737570706C7900000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D02 PUSH1 0x33 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D31 DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2D89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2D96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DA3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DB0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6577206D617820657870616E73696F6E2072617465206D757374206265206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657373207468616E2063757272656E74206D617820657870616E73696F6E2072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6174650000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E73 PUSH1 0x43 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA2 DUP2 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2ECB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2ED8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2F02 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572207265737472696374656420746F206578697374696E6720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E20686F6C6465727300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F65 PUSH1 0x2D DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F70 DUP3 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F94 DUP2 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FBD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FCA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FD7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2FE4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3003 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x3010 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x301D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x302A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LT MLOAD GASLIMIT PUSH18 0xD19E56DA615BF2B400BF4610A5E730351793 PC 0xA9 0xB3 PUSH26 0x85F6615164736F6C634300081C0033A26469706673582212209E PUSH24 0x2AA83A5D21FEFC847FF87704CBB5176491BE247FF6F79AEC EQ EXTCODESIZE JUMP BYTE DUP3 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"211:2419:24:-:0;;;690:36;;;;;;;;;;712:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;211:2419:24;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:26:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;211:2419:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_463":{"entryPoint":1420,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_1509":{"entryPoint":1751,"id":1509,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":1555,"id":525,"parameterSlots":1,"returnSlots":0},"@administerableTokens_6521":{"entryPoint":711,"id":6521,"parameterSlots":0,"returnSlots":0},"@createCAT_6605":{"entryPoint":928,"id":6605,"parameterSlots":5,"returnSlots":1},"@grantMinterRole_6630":{"entryPoint":432,"id":6630,"parameterSlots":2,"returnSlots":0},"@mintableTokens_6526":{"entryPoint":789,"id":6526,"parameterSlots":0,"returnSlots":0},"@owner_446":{"entryPoint":887,"id":446,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":867,"id":477,"parameterSlots":0,"returnSlots":0},"@totalCATs_6641":{"entryPoint":411,"id":6641,"parameterSlots":0,"returnSlots":1},"@transferOwnership_505":{"entryPoint":1286,"id":505,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2366,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1938,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2046,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":2478,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3111,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3000,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1797,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2275,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1824,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2302,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2884,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2749,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1844,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1772,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2351,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2901,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2226,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":2801,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2702,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2179,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2157,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1839,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1834,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2162,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2002,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9534:26","nodeType":"YulBlock","src":"0:9534:26","statements":[{"body":{"nativeSrc":"52:32:26","nodeType":"YulBlock","src":"52:32:26","statements":[{"nativeSrc":"62:16:26","nodeType":"YulAssignment","src":"62:16:26","value":{"name":"value","nativeSrc":"73:5:26","nodeType":"YulIdentifier","src":"73:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:26","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:26","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:26","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:77:26"},{"body":{"nativeSrc":"155:53:26","nodeType":"YulBlock","src":"155:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:26","nodeType":"YulIdentifier","src":"172:3:26"},{"arguments":[{"name":"value","nativeSrc":"195:5:26","nodeType":"YulIdentifier","src":"195:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:26","nodeType":"YulIdentifier","src":"177:17:26"},"nativeSrc":"177:24:26","nodeType":"YulFunctionCall","src":"177:24:26"}],"functionName":{"name":"mstore","nativeSrc":"165:6:26","nodeType":"YulIdentifier","src":"165:6:26"},"nativeSrc":"165:37:26","nodeType":"YulFunctionCall","src":"165:37:26"},"nativeSrc":"165:37:26","nodeType":"YulExpressionStatement","src":"165:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:26","nodeType":"YulTypedName","src":"143:5:26","type":""},{"name":"pos","nativeSrc":"150:3:26","nodeType":"YulTypedName","src":"150:3:26","type":""}],"src":"90:118:26"},{"body":{"nativeSrc":"312:124:26","nodeType":"YulBlock","src":"312:124:26","statements":[{"nativeSrc":"322:26:26","nodeType":"YulAssignment","src":"322:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:26","nodeType":"YulIdentifier","src":"334:9:26"},{"kind":"number","nativeSrc":"345:2:26","nodeType":"YulLiteral","src":"345:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:26","nodeType":"YulIdentifier","src":"330:3:26"},"nativeSrc":"330:18:26","nodeType":"YulFunctionCall","src":"330:18:26"},"variableNames":[{"name":"tail","nativeSrc":"322:4:26","nodeType":"YulIdentifier","src":"322:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:26","nodeType":"YulIdentifier","src":"402:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:26","nodeType":"YulIdentifier","src":"415:9:26"},{"kind":"number","nativeSrc":"426:1:26","nodeType":"YulLiteral","src":"426:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:26","nodeType":"YulIdentifier","src":"411:3:26"},"nativeSrc":"411:17:26","nodeType":"YulFunctionCall","src":"411:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:26","nodeType":"YulIdentifier","src":"358:43:26"},"nativeSrc":"358:71:26","nodeType":"YulFunctionCall","src":"358:71:26"},"nativeSrc":"358:71:26","nodeType":"YulExpressionStatement","src":"358:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:26","nodeType":"YulTypedName","src":"284:9:26","type":""},{"name":"value0","nativeSrc":"296:6:26","nodeType":"YulTypedName","src":"296:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:26","nodeType":"YulTypedName","src":"307:4:26","type":""}],"src":"214:222:26"},{"body":{"nativeSrc":"482:35:26","nodeType":"YulBlock","src":"482:35:26","statements":[{"nativeSrc":"492:19:26","nodeType":"YulAssignment","src":"492:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:26","nodeType":"YulLiteral","src":"508:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:26","nodeType":"YulIdentifier","src":"502:5:26"},"nativeSrc":"502:9:26","nodeType":"YulFunctionCall","src":"502:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:26","nodeType":"YulIdentifier","src":"492:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:26","nodeType":"YulTypedName","src":"475:6:26","type":""}],"src":"442:75:26"},{"body":{"nativeSrc":"612:28:26","nodeType":"YulBlock","src":"612:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:26","nodeType":"YulLiteral","src":"629:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:26","nodeType":"YulLiteral","src":"632:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:26","nodeType":"YulIdentifier","src":"622:6:26"},"nativeSrc":"622:12:26","nodeType":"YulFunctionCall","src":"622:12:26"},"nativeSrc":"622:12:26","nodeType":"YulExpressionStatement","src":"622:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:26","nodeType":"YulFunctionDefinition","src":"523:117:26"},{"body":{"nativeSrc":"735:28:26","nodeType":"YulBlock","src":"735:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:26","nodeType":"YulLiteral","src":"752:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:26","nodeType":"YulLiteral","src":"755:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:26","nodeType":"YulIdentifier","src":"745:6:26"},"nativeSrc":"745:12:26","nodeType":"YulFunctionCall","src":"745:12:26"},"nativeSrc":"745:12:26","nodeType":"YulExpressionStatement","src":"745:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:26","nodeType":"YulFunctionDefinition","src":"646:117:26"},{"body":{"nativeSrc":"814:81:26","nodeType":"YulBlock","src":"814:81:26","statements":[{"nativeSrc":"824:65:26","nodeType":"YulAssignment","src":"824:65:26","value":{"arguments":[{"name":"value","nativeSrc":"839:5:26","nodeType":"YulIdentifier","src":"839:5:26"},{"kind":"number","nativeSrc":"846:42:26","nodeType":"YulLiteral","src":"846:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"835:3:26","nodeType":"YulIdentifier","src":"835:3:26"},"nativeSrc":"835:54:26","nodeType":"YulFunctionCall","src":"835:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"824:7:26","nodeType":"YulIdentifier","src":"824:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"769:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"796:5:26","nodeType":"YulTypedName","src":"796:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"806:7:26","nodeType":"YulTypedName","src":"806:7:26","type":""}],"src":"769:126:26"},{"body":{"nativeSrc":"946:51:26","nodeType":"YulBlock","src":"946:51:26","statements":[{"nativeSrc":"956:35:26","nodeType":"YulAssignment","src":"956:35:26","value":{"arguments":[{"name":"value","nativeSrc":"985:5:26","nodeType":"YulIdentifier","src":"985:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"967:17:26","nodeType":"YulIdentifier","src":"967:17:26"},"nativeSrc":"967:24:26","nodeType":"YulFunctionCall","src":"967:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"956:7:26","nodeType":"YulIdentifier","src":"956:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"901:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"928:5:26","nodeType":"YulTypedName","src":"928:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"938:7:26","nodeType":"YulTypedName","src":"938:7:26","type":""}],"src":"901:96:26"},{"body":{"nativeSrc":"1046:79:26","nodeType":"YulBlock","src":"1046:79:26","statements":[{"body":{"nativeSrc":"1103:16:26","nodeType":"YulBlock","src":"1103:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1112:1:26","nodeType":"YulLiteral","src":"1112:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1115:1:26","nodeType":"YulLiteral","src":"1115:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1105:6:26","nodeType":"YulIdentifier","src":"1105:6:26"},"nativeSrc":"1105:12:26","nodeType":"YulFunctionCall","src":"1105:12:26"},"nativeSrc":"1105:12:26","nodeType":"YulExpressionStatement","src":"1105:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1069:5:26","nodeType":"YulIdentifier","src":"1069:5:26"},{"arguments":[{"name":"value","nativeSrc":"1094:5:26","nodeType":"YulIdentifier","src":"1094:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1076:17:26","nodeType":"YulIdentifier","src":"1076:17:26"},"nativeSrc":"1076:24:26","nodeType":"YulFunctionCall","src":"1076:24:26"}],"functionName":{"name":"eq","nativeSrc":"1066:2:26","nodeType":"YulIdentifier","src":"1066:2:26"},"nativeSrc":"1066:35:26","nodeType":"YulFunctionCall","src":"1066:35:26"}],"functionName":{"name":"iszero","nativeSrc":"1059:6:26","nodeType":"YulIdentifier","src":"1059:6:26"},"nativeSrc":"1059:43:26","nodeType":"YulFunctionCall","src":"1059:43:26"},"nativeSrc":"1056:63:26","nodeType":"YulIf","src":"1056:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"1003:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1039:5:26","nodeType":"YulTypedName","src":"1039:5:26","type":""}],"src":"1003:122:26"},{"body":{"nativeSrc":"1183:87:26","nodeType":"YulBlock","src":"1183:87:26","statements":[{"nativeSrc":"1193:29:26","nodeType":"YulAssignment","src":"1193:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1215:6:26","nodeType":"YulIdentifier","src":"1215:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1202:12:26","nodeType":"YulIdentifier","src":"1202:12:26"},"nativeSrc":"1202:20:26","nodeType":"YulFunctionCall","src":"1202:20:26"},"variableNames":[{"name":"value","nativeSrc":"1193:5:26","nodeType":"YulIdentifier","src":"1193:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1258:5:26","nodeType":"YulIdentifier","src":"1258:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1231:26:26","nodeType":"YulIdentifier","src":"1231:26:26"},"nativeSrc":"1231:33:26","nodeType":"YulFunctionCall","src":"1231:33:26"},"nativeSrc":"1231:33:26","nodeType":"YulExpressionStatement","src":"1231:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"1131:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1161:6:26","nodeType":"YulTypedName","src":"1161:6:26","type":""},{"name":"end","nativeSrc":"1169:3:26","nodeType":"YulTypedName","src":"1169:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1177:5:26","nodeType":"YulTypedName","src":"1177:5:26","type":""}],"src":"1131:139:26"},{"body":{"nativeSrc":"1359:391:26","nodeType":"YulBlock","src":"1359:391:26","statements":[{"body":{"nativeSrc":"1405:83:26","nodeType":"YulBlock","src":"1405:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1407:77:26","nodeType":"YulIdentifier","src":"1407:77:26"},"nativeSrc":"1407:79:26","nodeType":"YulFunctionCall","src":"1407:79:26"},"nativeSrc":"1407:79:26","nodeType":"YulExpressionStatement","src":"1407:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1380:7:26","nodeType":"YulIdentifier","src":"1380:7:26"},{"name":"headStart","nativeSrc":"1389:9:26","nodeType":"YulIdentifier","src":"1389:9:26"}],"functionName":{"name":"sub","nativeSrc":"1376:3:26","nodeType":"YulIdentifier","src":"1376:3:26"},"nativeSrc":"1376:23:26","nodeType":"YulFunctionCall","src":"1376:23:26"},{"kind":"number","nativeSrc":"1401:2:26","nodeType":"YulLiteral","src":"1401:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1372:3:26","nodeType":"YulIdentifier","src":"1372:3:26"},"nativeSrc":"1372:32:26","nodeType":"YulFunctionCall","src":"1372:32:26"},"nativeSrc":"1369:119:26","nodeType":"YulIf","src":"1369:119:26"},{"nativeSrc":"1498:117:26","nodeType":"YulBlock","src":"1498:117:26","statements":[{"nativeSrc":"1513:15:26","nodeType":"YulVariableDeclaration","src":"1513:15:26","value":{"kind":"number","nativeSrc":"1527:1:26","nodeType":"YulLiteral","src":"1527:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1517:6:26","nodeType":"YulTypedName","src":"1517:6:26","type":""}]},{"nativeSrc":"1542:63:26","nodeType":"YulAssignment","src":"1542:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1577:9:26","nodeType":"YulIdentifier","src":"1577:9:26"},{"name":"offset","nativeSrc":"1588:6:26","nodeType":"YulIdentifier","src":"1588:6:26"}],"functionName":{"name":"add","nativeSrc":"1573:3:26","nodeType":"YulIdentifier","src":"1573:3:26"},"nativeSrc":"1573:22:26","nodeType":"YulFunctionCall","src":"1573:22:26"},{"name":"dataEnd","nativeSrc":"1597:7:26","nodeType":"YulIdentifier","src":"1597:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1552:20:26","nodeType":"YulIdentifier","src":"1552:20:26"},"nativeSrc":"1552:53:26","nodeType":"YulFunctionCall","src":"1552:53:26"},"variableNames":[{"name":"value0","nativeSrc":"1542:6:26","nodeType":"YulIdentifier","src":"1542:6:26"}]}]},{"nativeSrc":"1625:118:26","nodeType":"YulBlock","src":"1625:118:26","statements":[{"nativeSrc":"1640:16:26","nodeType":"YulVariableDeclaration","src":"1640:16:26","value":{"kind":"number","nativeSrc":"1654:2:26","nodeType":"YulLiteral","src":"1654:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1644:6:26","nodeType":"YulTypedName","src":"1644:6:26","type":""}]},{"nativeSrc":"1670:63:26","nodeType":"YulAssignment","src":"1670:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1705:9:26","nodeType":"YulIdentifier","src":"1705:9:26"},{"name":"offset","nativeSrc":"1716:6:26","nodeType":"YulIdentifier","src":"1716:6:26"}],"functionName":{"name":"add","nativeSrc":"1701:3:26","nodeType":"YulIdentifier","src":"1701:3:26"},"nativeSrc":"1701:22:26","nodeType":"YulFunctionCall","src":"1701:22:26"},{"name":"dataEnd","nativeSrc":"1725:7:26","nodeType":"YulIdentifier","src":"1725:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1680:20:26","nodeType":"YulIdentifier","src":"1680:20:26"},"nativeSrc":"1680:53:26","nodeType":"YulFunctionCall","src":"1680:53:26"},"variableNames":[{"name":"value1","nativeSrc":"1670:6:26","nodeType":"YulIdentifier","src":"1670:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"1276:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1321:9:26","nodeType":"YulTypedName","src":"1321:9:26","type":""},{"name":"dataEnd","nativeSrc":"1332:7:26","nodeType":"YulTypedName","src":"1332:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1344:6:26","nodeType":"YulTypedName","src":"1344:6:26","type":""},{"name":"value1","nativeSrc":"1352:6:26","nodeType":"YulTypedName","src":"1352:6:26","type":""}],"src":"1276:474:26"},{"body":{"nativeSrc":"1799:79:26","nodeType":"YulBlock","src":"1799:79:26","statements":[{"body":{"nativeSrc":"1856:16:26","nodeType":"YulBlock","src":"1856:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1865:1:26","nodeType":"YulLiteral","src":"1865:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1868:1:26","nodeType":"YulLiteral","src":"1868:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1858:6:26","nodeType":"YulIdentifier","src":"1858:6:26"},"nativeSrc":"1858:12:26","nodeType":"YulFunctionCall","src":"1858:12:26"},"nativeSrc":"1858:12:26","nodeType":"YulExpressionStatement","src":"1858:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1822:5:26","nodeType":"YulIdentifier","src":"1822:5:26"},{"arguments":[{"name":"value","nativeSrc":"1847:5:26","nodeType":"YulIdentifier","src":"1847:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1829:17:26","nodeType":"YulIdentifier","src":"1829:17:26"},"nativeSrc":"1829:24:26","nodeType":"YulFunctionCall","src":"1829:24:26"}],"functionName":{"name":"eq","nativeSrc":"1819:2:26","nodeType":"YulIdentifier","src":"1819:2:26"},"nativeSrc":"1819:35:26","nodeType":"YulFunctionCall","src":"1819:35:26"}],"functionName":{"name":"iszero","nativeSrc":"1812:6:26","nodeType":"YulIdentifier","src":"1812:6:26"},"nativeSrc":"1812:43:26","nodeType":"YulFunctionCall","src":"1812:43:26"},"nativeSrc":"1809:63:26","nodeType":"YulIf","src":"1809:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"1756:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1792:5:26","nodeType":"YulTypedName","src":"1792:5:26","type":""}],"src":"1756:122:26"},{"body":{"nativeSrc":"1936:87:26","nodeType":"YulBlock","src":"1936:87:26","statements":[{"nativeSrc":"1946:29:26","nodeType":"YulAssignment","src":"1946:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1968:6:26","nodeType":"YulIdentifier","src":"1968:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1955:12:26","nodeType":"YulIdentifier","src":"1955:12:26"},"nativeSrc":"1955:20:26","nodeType":"YulFunctionCall","src":"1955:20:26"},"variableNames":[{"name":"value","nativeSrc":"1946:5:26","nodeType":"YulIdentifier","src":"1946:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2011:5:26","nodeType":"YulIdentifier","src":"2011:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1984:26:26","nodeType":"YulIdentifier","src":"1984:26:26"},"nativeSrc":"1984:33:26","nodeType":"YulFunctionCall","src":"1984:33:26"},"nativeSrc":"1984:33:26","nodeType":"YulExpressionStatement","src":"1984:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"1884:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1914:6:26","nodeType":"YulTypedName","src":"1914:6:26","type":""},{"name":"end","nativeSrc":"1922:3:26","nodeType":"YulTypedName","src":"1922:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1930:5:26","nodeType":"YulTypedName","src":"1930:5:26","type":""}],"src":"1884:139:26"},{"body":{"nativeSrc":"2112:391:26","nodeType":"YulBlock","src":"2112:391:26","statements":[{"body":{"nativeSrc":"2158:83:26","nodeType":"YulBlock","src":"2158:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2160:77:26","nodeType":"YulIdentifier","src":"2160:77:26"},"nativeSrc":"2160:79:26","nodeType":"YulFunctionCall","src":"2160:79:26"},"nativeSrc":"2160:79:26","nodeType":"YulExpressionStatement","src":"2160:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2133:7:26","nodeType":"YulIdentifier","src":"2133:7:26"},{"name":"headStart","nativeSrc":"2142:9:26","nodeType":"YulIdentifier","src":"2142:9:26"}],"functionName":{"name":"sub","nativeSrc":"2129:3:26","nodeType":"YulIdentifier","src":"2129:3:26"},"nativeSrc":"2129:23:26","nodeType":"YulFunctionCall","src":"2129:23:26"},{"kind":"number","nativeSrc":"2154:2:26","nodeType":"YulLiteral","src":"2154:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2125:3:26","nodeType":"YulIdentifier","src":"2125:3:26"},"nativeSrc":"2125:32:26","nodeType":"YulFunctionCall","src":"2125:32:26"},"nativeSrc":"2122:119:26","nodeType":"YulIf","src":"2122:119:26"},{"nativeSrc":"2251:117:26","nodeType":"YulBlock","src":"2251:117:26","statements":[{"nativeSrc":"2266:15:26","nodeType":"YulVariableDeclaration","src":"2266:15:26","value":{"kind":"number","nativeSrc":"2280:1:26","nodeType":"YulLiteral","src":"2280:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2270:6:26","nodeType":"YulTypedName","src":"2270:6:26","type":""}]},{"nativeSrc":"2295:63:26","nodeType":"YulAssignment","src":"2295:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2330:9:26","nodeType":"YulIdentifier","src":"2330:9:26"},{"name":"offset","nativeSrc":"2341:6:26","nodeType":"YulIdentifier","src":"2341:6:26"}],"functionName":{"name":"add","nativeSrc":"2326:3:26","nodeType":"YulIdentifier","src":"2326:3:26"},"nativeSrc":"2326:22:26","nodeType":"YulFunctionCall","src":"2326:22:26"},{"name":"dataEnd","nativeSrc":"2350:7:26","nodeType":"YulIdentifier","src":"2350:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2305:20:26","nodeType":"YulIdentifier","src":"2305:20:26"},"nativeSrc":"2305:53:26","nodeType":"YulFunctionCall","src":"2305:53:26"},"variableNames":[{"name":"value0","nativeSrc":"2295:6:26","nodeType":"YulIdentifier","src":"2295:6:26"}]}]},{"nativeSrc":"2378:118:26","nodeType":"YulBlock","src":"2378:118:26","statements":[{"nativeSrc":"2393:16:26","nodeType":"YulVariableDeclaration","src":"2393:16:26","value":{"kind":"number","nativeSrc":"2407:2:26","nodeType":"YulLiteral","src":"2407:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2397:6:26","nodeType":"YulTypedName","src":"2397:6:26","type":""}]},{"nativeSrc":"2423:63:26","nodeType":"YulAssignment","src":"2423:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2458:9:26","nodeType":"YulIdentifier","src":"2458:9:26"},{"name":"offset","nativeSrc":"2469:6:26","nodeType":"YulIdentifier","src":"2469:6:26"}],"functionName":{"name":"add","nativeSrc":"2454:3:26","nodeType":"YulIdentifier","src":"2454:3:26"},"nativeSrc":"2454:22:26","nodeType":"YulFunctionCall","src":"2454:22:26"},{"name":"dataEnd","nativeSrc":"2478:7:26","nodeType":"YulIdentifier","src":"2478:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2433:20:26","nodeType":"YulIdentifier","src":"2433:20:26"},"nativeSrc":"2433:53:26","nodeType":"YulFunctionCall","src":"2433:53:26"},"variableNames":[{"name":"value1","nativeSrc":"2423:6:26","nodeType":"YulIdentifier","src":"2423:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2029:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2074:9:26","nodeType":"YulTypedName","src":"2074:9:26","type":""},{"name":"dataEnd","nativeSrc":"2085:7:26","nodeType":"YulTypedName","src":"2085:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2097:6:26","nodeType":"YulTypedName","src":"2097:6:26","type":""},{"name":"value1","nativeSrc":"2105:6:26","nodeType":"YulTypedName","src":"2105:6:26","type":""}],"src":"2029:474:26"},{"body":{"nativeSrc":"2574:53:26","nodeType":"YulBlock","src":"2574:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2591:3:26","nodeType":"YulIdentifier","src":"2591:3:26"},{"arguments":[{"name":"value","nativeSrc":"2614:5:26","nodeType":"YulIdentifier","src":"2614:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2596:17:26","nodeType":"YulIdentifier","src":"2596:17:26"},"nativeSrc":"2596:24:26","nodeType":"YulFunctionCall","src":"2596:24:26"}],"functionName":{"name":"mstore","nativeSrc":"2584:6:26","nodeType":"YulIdentifier","src":"2584:6:26"},"nativeSrc":"2584:37:26","nodeType":"YulFunctionCall","src":"2584:37:26"},"nativeSrc":"2584:37:26","nodeType":"YulExpressionStatement","src":"2584:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2509:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2562:5:26","nodeType":"YulTypedName","src":"2562:5:26","type":""},{"name":"pos","nativeSrc":"2569:3:26","nodeType":"YulTypedName","src":"2569:3:26","type":""}],"src":"2509:118:26"},{"body":{"nativeSrc":"2731:124:26","nodeType":"YulBlock","src":"2731:124:26","statements":[{"nativeSrc":"2741:26:26","nodeType":"YulAssignment","src":"2741:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2753:9:26","nodeType":"YulIdentifier","src":"2753:9:26"},{"kind":"number","nativeSrc":"2764:2:26","nodeType":"YulLiteral","src":"2764:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2749:3:26","nodeType":"YulIdentifier","src":"2749:3:26"},"nativeSrc":"2749:18:26","nodeType":"YulFunctionCall","src":"2749:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2741:4:26","nodeType":"YulIdentifier","src":"2741:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2821:6:26","nodeType":"YulIdentifier","src":"2821:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"2834:9:26","nodeType":"YulIdentifier","src":"2834:9:26"},{"kind":"number","nativeSrc":"2845:1:26","nodeType":"YulLiteral","src":"2845:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2830:3:26","nodeType":"YulIdentifier","src":"2830:3:26"},"nativeSrc":"2830:17:26","nodeType":"YulFunctionCall","src":"2830:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2777:43:26","nodeType":"YulIdentifier","src":"2777:43:26"},"nativeSrc":"2777:71:26","nodeType":"YulFunctionCall","src":"2777:71:26"},"nativeSrc":"2777:71:26","nodeType":"YulExpressionStatement","src":"2777:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2633:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2703:9:26","nodeType":"YulTypedName","src":"2703:9:26","type":""},{"name":"value0","nativeSrc":"2715:6:26","nodeType":"YulTypedName","src":"2715:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2726:4:26","nodeType":"YulTypedName","src":"2726:4:26","type":""}],"src":"2633:222:26"},{"body":{"nativeSrc":"2950:28:26","nodeType":"YulBlock","src":"2950:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2967:1:26","nodeType":"YulLiteral","src":"2967:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2970:1:26","nodeType":"YulLiteral","src":"2970:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2960:6:26","nodeType":"YulIdentifier","src":"2960:6:26"},"nativeSrc":"2960:12:26","nodeType":"YulFunctionCall","src":"2960:12:26"},"nativeSrc":"2960:12:26","nodeType":"YulExpressionStatement","src":"2960:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2861:117:26","nodeType":"YulFunctionDefinition","src":"2861:117:26"},{"body":{"nativeSrc":"3073:28:26","nodeType":"YulBlock","src":"3073:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3090:1:26","nodeType":"YulLiteral","src":"3090:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3093:1:26","nodeType":"YulLiteral","src":"3093:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3083:6:26","nodeType":"YulIdentifier","src":"3083:6:26"},"nativeSrc":"3083:12:26","nodeType":"YulFunctionCall","src":"3083:12:26"},"nativeSrc":"3083:12:26","nodeType":"YulExpressionStatement","src":"3083:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2984:117:26","nodeType":"YulFunctionDefinition","src":"2984:117:26"},{"body":{"nativeSrc":"3155:54:26","nodeType":"YulBlock","src":"3155:54:26","statements":[{"nativeSrc":"3165:38:26","nodeType":"YulAssignment","src":"3165:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3183:5:26","nodeType":"YulIdentifier","src":"3183:5:26"},{"kind":"number","nativeSrc":"3190:2:26","nodeType":"YulLiteral","src":"3190:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3179:3:26","nodeType":"YulIdentifier","src":"3179:3:26"},"nativeSrc":"3179:14:26","nodeType":"YulFunctionCall","src":"3179:14:26"},{"arguments":[{"kind":"number","nativeSrc":"3199:2:26","nodeType":"YulLiteral","src":"3199:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3195:3:26","nodeType":"YulIdentifier","src":"3195:3:26"},"nativeSrc":"3195:7:26","nodeType":"YulFunctionCall","src":"3195:7:26"}],"functionName":{"name":"and","nativeSrc":"3175:3:26","nodeType":"YulIdentifier","src":"3175:3:26"},"nativeSrc":"3175:28:26","nodeType":"YulFunctionCall","src":"3175:28:26"},"variableNames":[{"name":"result","nativeSrc":"3165:6:26","nodeType":"YulIdentifier","src":"3165:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3107:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3138:5:26","nodeType":"YulTypedName","src":"3138:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3148:6:26","nodeType":"YulTypedName","src":"3148:6:26","type":""}],"src":"3107:102:26"},{"body":{"nativeSrc":"3243:152:26","nodeType":"YulBlock","src":"3243:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3260:1:26","nodeType":"YulLiteral","src":"3260:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3263:77:26","nodeType":"YulLiteral","src":"3263:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3253:6:26","nodeType":"YulIdentifier","src":"3253:6:26"},"nativeSrc":"3253:88:26","nodeType":"YulFunctionCall","src":"3253:88:26"},"nativeSrc":"3253:88:26","nodeType":"YulExpressionStatement","src":"3253:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3357:1:26","nodeType":"YulLiteral","src":"3357:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3360:4:26","nodeType":"YulLiteral","src":"3360:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3350:6:26","nodeType":"YulIdentifier","src":"3350:6:26"},"nativeSrc":"3350:15:26","nodeType":"YulFunctionCall","src":"3350:15:26"},"nativeSrc":"3350:15:26","nodeType":"YulExpressionStatement","src":"3350:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3381:1:26","nodeType":"YulLiteral","src":"3381:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3384:4:26","nodeType":"YulLiteral","src":"3384:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3374:6:26","nodeType":"YulIdentifier","src":"3374:6:26"},"nativeSrc":"3374:15:26","nodeType":"YulFunctionCall","src":"3374:15:26"},"nativeSrc":"3374:15:26","nodeType":"YulExpressionStatement","src":"3374:15:26"}]},"name":"panic_error_0x41","nativeSrc":"3215:180:26","nodeType":"YulFunctionDefinition","src":"3215:180:26"},{"body":{"nativeSrc":"3444:238:26","nodeType":"YulBlock","src":"3444:238:26","statements":[{"nativeSrc":"3454:58:26","nodeType":"YulVariableDeclaration","src":"3454:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"3476:6:26","nodeType":"YulIdentifier","src":"3476:6:26"},{"arguments":[{"name":"size","nativeSrc":"3506:4:26","nodeType":"YulIdentifier","src":"3506:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3484:21:26","nodeType":"YulIdentifier","src":"3484:21:26"},"nativeSrc":"3484:27:26","nodeType":"YulFunctionCall","src":"3484:27:26"}],"functionName":{"name":"add","nativeSrc":"3472:3:26","nodeType":"YulIdentifier","src":"3472:3:26"},"nativeSrc":"3472:40:26","nodeType":"YulFunctionCall","src":"3472:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"3458:10:26","nodeType":"YulTypedName","src":"3458:10:26","type":""}]},{"body":{"nativeSrc":"3623:22:26","nodeType":"YulBlock","src":"3623:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3625:16:26","nodeType":"YulIdentifier","src":"3625:16:26"},"nativeSrc":"3625:18:26","nodeType":"YulFunctionCall","src":"3625:18:26"},"nativeSrc":"3625:18:26","nodeType":"YulExpressionStatement","src":"3625:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3566:10:26","nodeType":"YulIdentifier","src":"3566:10:26"},{"kind":"number","nativeSrc":"3578:18:26","nodeType":"YulLiteral","src":"3578:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3563:2:26","nodeType":"YulIdentifier","src":"3563:2:26"},"nativeSrc":"3563:34:26","nodeType":"YulFunctionCall","src":"3563:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3602:10:26","nodeType":"YulIdentifier","src":"3602:10:26"},{"name":"memPtr","nativeSrc":"3614:6:26","nodeType":"YulIdentifier","src":"3614:6:26"}],"functionName":{"name":"lt","nativeSrc":"3599:2:26","nodeType":"YulIdentifier","src":"3599:2:26"},"nativeSrc":"3599:22:26","nodeType":"YulFunctionCall","src":"3599:22:26"}],"functionName":{"name":"or","nativeSrc":"3560:2:26","nodeType":"YulIdentifier","src":"3560:2:26"},"nativeSrc":"3560:62:26","nodeType":"YulFunctionCall","src":"3560:62:26"},"nativeSrc":"3557:88:26","nodeType":"YulIf","src":"3557:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3661:2:26","nodeType":"YulLiteral","src":"3661:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3665:10:26","nodeType":"YulIdentifier","src":"3665:10:26"}],"functionName":{"name":"mstore","nativeSrc":"3654:6:26","nodeType":"YulIdentifier","src":"3654:6:26"},"nativeSrc":"3654:22:26","nodeType":"YulFunctionCall","src":"3654:22:26"},"nativeSrc":"3654:22:26","nodeType":"YulExpressionStatement","src":"3654:22:26"}]},"name":"finalize_allocation","nativeSrc":"3401:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3430:6:26","nodeType":"YulTypedName","src":"3430:6:26","type":""},{"name":"size","nativeSrc":"3438:4:26","nodeType":"YulTypedName","src":"3438:4:26","type":""}],"src":"3401:281:26"},{"body":{"nativeSrc":"3729:88:26","nodeType":"YulBlock","src":"3729:88:26","statements":[{"nativeSrc":"3739:30:26","nodeType":"YulAssignment","src":"3739:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"3749:18:26","nodeType":"YulIdentifier","src":"3749:18:26"},"nativeSrc":"3749:20:26","nodeType":"YulFunctionCall","src":"3749:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"3739:6:26","nodeType":"YulIdentifier","src":"3739:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3798:6:26","nodeType":"YulIdentifier","src":"3798:6:26"},{"name":"size","nativeSrc":"3806:4:26","nodeType":"YulIdentifier","src":"3806:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"3778:19:26","nodeType":"YulIdentifier","src":"3778:19:26"},"nativeSrc":"3778:33:26","nodeType":"YulFunctionCall","src":"3778:33:26"},"nativeSrc":"3778:33:26","nodeType":"YulExpressionStatement","src":"3778:33:26"}]},"name":"allocate_memory","nativeSrc":"3688:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"3713:4:26","nodeType":"YulTypedName","src":"3713:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"3722:6:26","nodeType":"YulTypedName","src":"3722:6:26","type":""}],"src":"3688:129:26"},{"body":{"nativeSrc":"3890:241:26","nodeType":"YulBlock","src":"3890:241:26","statements":[{"body":{"nativeSrc":"3995:22:26","nodeType":"YulBlock","src":"3995:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3997:16:26","nodeType":"YulIdentifier","src":"3997:16:26"},"nativeSrc":"3997:18:26","nodeType":"YulFunctionCall","src":"3997:18:26"},"nativeSrc":"3997:18:26","nodeType":"YulExpressionStatement","src":"3997:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3967:6:26","nodeType":"YulIdentifier","src":"3967:6:26"},{"kind":"number","nativeSrc":"3975:18:26","nodeType":"YulLiteral","src":"3975:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3964:2:26","nodeType":"YulIdentifier","src":"3964:2:26"},"nativeSrc":"3964:30:26","nodeType":"YulFunctionCall","src":"3964:30:26"},"nativeSrc":"3961:56:26","nodeType":"YulIf","src":"3961:56:26"},{"nativeSrc":"4027:37:26","nodeType":"YulAssignment","src":"4027:37:26","value":{"arguments":[{"name":"length","nativeSrc":"4057:6:26","nodeType":"YulIdentifier","src":"4057:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4035:21:26","nodeType":"YulIdentifier","src":"4035:21:26"},"nativeSrc":"4035:29:26","nodeType":"YulFunctionCall","src":"4035:29:26"},"variableNames":[{"name":"size","nativeSrc":"4027:4:26","nodeType":"YulIdentifier","src":"4027:4:26"}]},{"nativeSrc":"4101:23:26","nodeType":"YulAssignment","src":"4101:23:26","value":{"arguments":[{"name":"size","nativeSrc":"4113:4:26","nodeType":"YulIdentifier","src":"4113:4:26"},{"kind":"number","nativeSrc":"4119:4:26","nodeType":"YulLiteral","src":"4119:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4109:3:26","nodeType":"YulIdentifier","src":"4109:3:26"},"nativeSrc":"4109:15:26","nodeType":"YulFunctionCall","src":"4109:15:26"},"variableNames":[{"name":"size","nativeSrc":"4101:4:26","nodeType":"YulIdentifier","src":"4101:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"3823:308:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3874:6:26","nodeType":"YulTypedName","src":"3874:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3885:4:26","nodeType":"YulTypedName","src":"3885:4:26","type":""}],"src":"3823:308:26"},{"body":{"nativeSrc":"4201:84:26","nodeType":"YulBlock","src":"4201:84:26","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4225:3:26","nodeType":"YulIdentifier","src":"4225:3:26"},{"name":"src","nativeSrc":"4230:3:26","nodeType":"YulIdentifier","src":"4230:3:26"},{"name":"length","nativeSrc":"4235:6:26","nodeType":"YulIdentifier","src":"4235:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"4212:12:26","nodeType":"YulIdentifier","src":"4212:12:26"},"nativeSrc":"4212:30:26","nodeType":"YulFunctionCall","src":"4212:30:26"},"nativeSrc":"4212:30:26","nodeType":"YulExpressionStatement","src":"4212:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4262:3:26","nodeType":"YulIdentifier","src":"4262:3:26"},{"name":"length","nativeSrc":"4267:6:26","nodeType":"YulIdentifier","src":"4267:6:26"}],"functionName":{"name":"add","nativeSrc":"4258:3:26","nodeType":"YulIdentifier","src":"4258:3:26"},"nativeSrc":"4258:16:26","nodeType":"YulFunctionCall","src":"4258:16:26"},{"kind":"number","nativeSrc":"4276:1:26","nodeType":"YulLiteral","src":"4276:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4251:6:26","nodeType":"YulIdentifier","src":"4251:6:26"},"nativeSrc":"4251:27:26","nodeType":"YulFunctionCall","src":"4251:27:26"},"nativeSrc":"4251:27:26","nodeType":"YulExpressionStatement","src":"4251:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4137:148:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4183:3:26","nodeType":"YulTypedName","src":"4183:3:26","type":""},{"name":"dst","nativeSrc":"4188:3:26","nodeType":"YulTypedName","src":"4188:3:26","type":""},{"name":"length","nativeSrc":"4193:6:26","nodeType":"YulTypedName","src":"4193:6:26","type":""}],"src":"4137:148:26"},{"body":{"nativeSrc":"4375:341:26","nodeType":"YulBlock","src":"4375:341:26","statements":[{"nativeSrc":"4385:75:26","nodeType":"YulAssignment","src":"4385:75:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4452:6:26","nodeType":"YulIdentifier","src":"4452:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4410:41:26","nodeType":"YulIdentifier","src":"4410:41:26"},"nativeSrc":"4410:49:26","nodeType":"YulFunctionCall","src":"4410:49:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"4394:15:26","nodeType":"YulIdentifier","src":"4394:15:26"},"nativeSrc":"4394:66:26","nodeType":"YulFunctionCall","src":"4394:66:26"},"variableNames":[{"name":"array","nativeSrc":"4385:5:26","nodeType":"YulIdentifier","src":"4385:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4476:5:26","nodeType":"YulIdentifier","src":"4476:5:26"},{"name":"length","nativeSrc":"4483:6:26","nodeType":"YulIdentifier","src":"4483:6:26"}],"functionName":{"name":"mstore","nativeSrc":"4469:6:26","nodeType":"YulIdentifier","src":"4469:6:26"},"nativeSrc":"4469:21:26","nodeType":"YulFunctionCall","src":"4469:21:26"},"nativeSrc":"4469:21:26","nodeType":"YulExpressionStatement","src":"4469:21:26"},{"nativeSrc":"4499:27:26","nodeType":"YulVariableDeclaration","src":"4499:27:26","value":{"arguments":[{"name":"array","nativeSrc":"4514:5:26","nodeType":"YulIdentifier","src":"4514:5:26"},{"kind":"number","nativeSrc":"4521:4:26","nodeType":"YulLiteral","src":"4521:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4510:3:26","nodeType":"YulIdentifier","src":"4510:3:26"},"nativeSrc":"4510:16:26","nodeType":"YulFunctionCall","src":"4510:16:26"},"variables":[{"name":"dst","nativeSrc":"4503:3:26","nodeType":"YulTypedName","src":"4503:3:26","type":""}]},{"body":{"nativeSrc":"4564:83:26","nodeType":"YulBlock","src":"4564:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4566:77:26","nodeType":"YulIdentifier","src":"4566:77:26"},"nativeSrc":"4566:79:26","nodeType":"YulFunctionCall","src":"4566:79:26"},"nativeSrc":"4566:79:26","nodeType":"YulExpressionStatement","src":"4566:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4545:3:26","nodeType":"YulIdentifier","src":"4545:3:26"},{"name":"length","nativeSrc":"4550:6:26","nodeType":"YulIdentifier","src":"4550:6:26"}],"functionName":{"name":"add","nativeSrc":"4541:3:26","nodeType":"YulIdentifier","src":"4541:3:26"},"nativeSrc":"4541:16:26","nodeType":"YulFunctionCall","src":"4541:16:26"},{"name":"end","nativeSrc":"4559:3:26","nodeType":"YulIdentifier","src":"4559:3:26"}],"functionName":{"name":"gt","nativeSrc":"4538:2:26","nodeType":"YulIdentifier","src":"4538:2:26"},"nativeSrc":"4538:25:26","nodeType":"YulFunctionCall","src":"4538:25:26"},"nativeSrc":"4535:112:26","nodeType":"YulIf","src":"4535:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"4693:3:26","nodeType":"YulIdentifier","src":"4693:3:26"},{"name":"dst","nativeSrc":"4698:3:26","nodeType":"YulIdentifier","src":"4698:3:26"},{"name":"length","nativeSrc":"4703:6:26","nodeType":"YulIdentifier","src":"4703:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4656:36:26","nodeType":"YulIdentifier","src":"4656:36:26"},"nativeSrc":"4656:54:26","nodeType":"YulFunctionCall","src":"4656:54:26"},"nativeSrc":"4656:54:26","nodeType":"YulExpressionStatement","src":"4656:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4291:425:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4348:3:26","nodeType":"YulTypedName","src":"4348:3:26","type":""},{"name":"length","nativeSrc":"4353:6:26","nodeType":"YulTypedName","src":"4353:6:26","type":""},{"name":"end","nativeSrc":"4361:3:26","nodeType":"YulTypedName","src":"4361:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4369:5:26","nodeType":"YulTypedName","src":"4369:5:26","type":""}],"src":"4291:425:26"},{"body":{"nativeSrc":"4798:278:26","nodeType":"YulBlock","src":"4798:278:26","statements":[{"body":{"nativeSrc":"4847:83:26","nodeType":"YulBlock","src":"4847:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"4849:77:26","nodeType":"YulIdentifier","src":"4849:77:26"},"nativeSrc":"4849:79:26","nodeType":"YulFunctionCall","src":"4849:79:26"},"nativeSrc":"4849:79:26","nodeType":"YulExpressionStatement","src":"4849:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4826:6:26","nodeType":"YulIdentifier","src":"4826:6:26"},{"kind":"number","nativeSrc":"4834:4:26","nodeType":"YulLiteral","src":"4834:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4822:3:26","nodeType":"YulIdentifier","src":"4822:3:26"},"nativeSrc":"4822:17:26","nodeType":"YulFunctionCall","src":"4822:17:26"},{"name":"end","nativeSrc":"4841:3:26","nodeType":"YulIdentifier","src":"4841:3:26"}],"functionName":{"name":"slt","nativeSrc":"4818:3:26","nodeType":"YulIdentifier","src":"4818:3:26"},"nativeSrc":"4818:27:26","nodeType":"YulFunctionCall","src":"4818:27:26"}],"functionName":{"name":"iszero","nativeSrc":"4811:6:26","nodeType":"YulIdentifier","src":"4811:6:26"},"nativeSrc":"4811:35:26","nodeType":"YulFunctionCall","src":"4811:35:26"},"nativeSrc":"4808:122:26","nodeType":"YulIf","src":"4808:122:26"},{"nativeSrc":"4939:34:26","nodeType":"YulVariableDeclaration","src":"4939:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"4966:6:26","nodeType":"YulIdentifier","src":"4966:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"4953:12:26","nodeType":"YulIdentifier","src":"4953:12:26"},"nativeSrc":"4953:20:26","nodeType":"YulFunctionCall","src":"4953:20:26"},"variables":[{"name":"length","nativeSrc":"4943:6:26","nodeType":"YulTypedName","src":"4943:6:26","type":""}]},{"nativeSrc":"4982:88:26","nodeType":"YulAssignment","src":"4982:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5043:6:26","nodeType":"YulIdentifier","src":"5043:6:26"},{"kind":"number","nativeSrc":"5051:4:26","nodeType":"YulLiteral","src":"5051:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5039:3:26","nodeType":"YulIdentifier","src":"5039:3:26"},"nativeSrc":"5039:17:26","nodeType":"YulFunctionCall","src":"5039:17:26"},{"name":"length","nativeSrc":"5058:6:26","nodeType":"YulIdentifier","src":"5058:6:26"},{"name":"end","nativeSrc":"5066:3:26","nodeType":"YulIdentifier","src":"5066:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4991:47:26","nodeType":"YulIdentifier","src":"4991:47:26"},"nativeSrc":"4991:79:26","nodeType":"YulFunctionCall","src":"4991:79:26"},"variableNames":[{"name":"array","nativeSrc":"4982:5:26","nodeType":"YulIdentifier","src":"4982:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"4736:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4776:6:26","nodeType":"YulTypedName","src":"4776:6:26","type":""},{"name":"end","nativeSrc":"4784:3:26","nodeType":"YulTypedName","src":"4784:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4792:5:26","nodeType":"YulTypedName","src":"4792:5:26","type":""}],"src":"4736:340:26"},{"body":{"nativeSrc":"5236:1117:26","nodeType":"YulBlock","src":"5236:1117:26","statements":[{"body":{"nativeSrc":"5283:83:26","nodeType":"YulBlock","src":"5283:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5285:77:26","nodeType":"YulIdentifier","src":"5285:77:26"},"nativeSrc":"5285:79:26","nodeType":"YulFunctionCall","src":"5285:79:26"},"nativeSrc":"5285:79:26","nodeType":"YulExpressionStatement","src":"5285:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5257:7:26","nodeType":"YulIdentifier","src":"5257:7:26"},{"name":"headStart","nativeSrc":"5266:9:26","nodeType":"YulIdentifier","src":"5266:9:26"}],"functionName":{"name":"sub","nativeSrc":"5253:3:26","nodeType":"YulIdentifier","src":"5253:3:26"},"nativeSrc":"5253:23:26","nodeType":"YulFunctionCall","src":"5253:23:26"},{"kind":"number","nativeSrc":"5278:3:26","nodeType":"YulLiteral","src":"5278:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"5249:3:26","nodeType":"YulIdentifier","src":"5249:3:26"},"nativeSrc":"5249:33:26","nodeType":"YulFunctionCall","src":"5249:33:26"},"nativeSrc":"5246:120:26","nodeType":"YulIf","src":"5246:120:26"},{"nativeSrc":"5376:117:26","nodeType":"YulBlock","src":"5376:117:26","statements":[{"nativeSrc":"5391:15:26","nodeType":"YulVariableDeclaration","src":"5391:15:26","value":{"kind":"number","nativeSrc":"5405:1:26","nodeType":"YulLiteral","src":"5405:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5395:6:26","nodeType":"YulTypedName","src":"5395:6:26","type":""}]},{"nativeSrc":"5420:63:26","nodeType":"YulAssignment","src":"5420:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5455:9:26","nodeType":"YulIdentifier","src":"5455:9:26"},{"name":"offset","nativeSrc":"5466:6:26","nodeType":"YulIdentifier","src":"5466:6:26"}],"functionName":{"name":"add","nativeSrc":"5451:3:26","nodeType":"YulIdentifier","src":"5451:3:26"},"nativeSrc":"5451:22:26","nodeType":"YulFunctionCall","src":"5451:22:26"},{"name":"dataEnd","nativeSrc":"5475:7:26","nodeType":"YulIdentifier","src":"5475:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5430:20:26","nodeType":"YulIdentifier","src":"5430:20:26"},"nativeSrc":"5430:53:26","nodeType":"YulFunctionCall","src":"5430:53:26"},"variableNames":[{"name":"value0","nativeSrc":"5420:6:26","nodeType":"YulIdentifier","src":"5420:6:26"}]}]},{"nativeSrc":"5503:118:26","nodeType":"YulBlock","src":"5503:118:26","statements":[{"nativeSrc":"5518:16:26","nodeType":"YulVariableDeclaration","src":"5518:16:26","value":{"kind":"number","nativeSrc":"5532:2:26","nodeType":"YulLiteral","src":"5532:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5522:6:26","nodeType":"YulTypedName","src":"5522:6:26","type":""}]},{"nativeSrc":"5548:63:26","nodeType":"YulAssignment","src":"5548:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5583:9:26","nodeType":"YulIdentifier","src":"5583:9:26"},{"name":"offset","nativeSrc":"5594:6:26","nodeType":"YulIdentifier","src":"5594:6:26"}],"functionName":{"name":"add","nativeSrc":"5579:3:26","nodeType":"YulIdentifier","src":"5579:3:26"},"nativeSrc":"5579:22:26","nodeType":"YulFunctionCall","src":"5579:22:26"},{"name":"dataEnd","nativeSrc":"5603:7:26","nodeType":"YulIdentifier","src":"5603:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5558:20:26","nodeType":"YulIdentifier","src":"5558:20:26"},"nativeSrc":"5558:53:26","nodeType":"YulFunctionCall","src":"5558:53:26"},"variableNames":[{"name":"value1","nativeSrc":"5548:6:26","nodeType":"YulIdentifier","src":"5548:6:26"}]}]},{"nativeSrc":"5631:118:26","nodeType":"YulBlock","src":"5631:118:26","statements":[{"nativeSrc":"5646:16:26","nodeType":"YulVariableDeclaration","src":"5646:16:26","value":{"kind":"number","nativeSrc":"5660:2:26","nodeType":"YulLiteral","src":"5660:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5650:6:26","nodeType":"YulTypedName","src":"5650:6:26","type":""}]},{"nativeSrc":"5676:63:26","nodeType":"YulAssignment","src":"5676:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5711:9:26","nodeType":"YulIdentifier","src":"5711:9:26"},{"name":"offset","nativeSrc":"5722:6:26","nodeType":"YulIdentifier","src":"5722:6:26"}],"functionName":{"name":"add","nativeSrc":"5707:3:26","nodeType":"YulIdentifier","src":"5707:3:26"},"nativeSrc":"5707:22:26","nodeType":"YulFunctionCall","src":"5707:22:26"},{"name":"dataEnd","nativeSrc":"5731:7:26","nodeType":"YulIdentifier","src":"5731:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5686:20:26","nodeType":"YulIdentifier","src":"5686:20:26"},"nativeSrc":"5686:53:26","nodeType":"YulFunctionCall","src":"5686:53:26"},"variableNames":[{"name":"value2","nativeSrc":"5676:6:26","nodeType":"YulIdentifier","src":"5676:6:26"}]}]},{"nativeSrc":"5759:288:26","nodeType":"YulBlock","src":"5759:288:26","statements":[{"nativeSrc":"5774:46:26","nodeType":"YulVariableDeclaration","src":"5774:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5805:9:26","nodeType":"YulIdentifier","src":"5805:9:26"},{"kind":"number","nativeSrc":"5816:2:26","nodeType":"YulLiteral","src":"5816:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5801:3:26","nodeType":"YulIdentifier","src":"5801:3:26"},"nativeSrc":"5801:18:26","nodeType":"YulFunctionCall","src":"5801:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"5788:12:26","nodeType":"YulIdentifier","src":"5788:12:26"},"nativeSrc":"5788:32:26","nodeType":"YulFunctionCall","src":"5788:32:26"},"variables":[{"name":"offset","nativeSrc":"5778:6:26","nodeType":"YulTypedName","src":"5778:6:26","type":""}]},{"body":{"nativeSrc":"5867:83:26","nodeType":"YulBlock","src":"5867:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"5869:77:26","nodeType":"YulIdentifier","src":"5869:77:26"},"nativeSrc":"5869:79:26","nodeType":"YulFunctionCall","src":"5869:79:26"},"nativeSrc":"5869:79:26","nodeType":"YulExpressionStatement","src":"5869:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5839:6:26","nodeType":"YulIdentifier","src":"5839:6:26"},{"kind":"number","nativeSrc":"5847:18:26","nodeType":"YulLiteral","src":"5847:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5836:2:26","nodeType":"YulIdentifier","src":"5836:2:26"},"nativeSrc":"5836:30:26","nodeType":"YulFunctionCall","src":"5836:30:26"},"nativeSrc":"5833:117:26","nodeType":"YulIf","src":"5833:117:26"},{"nativeSrc":"5964:73:26","nodeType":"YulAssignment","src":"5964:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6009:9:26","nodeType":"YulIdentifier","src":"6009:9:26"},{"name":"offset","nativeSrc":"6020:6:26","nodeType":"YulIdentifier","src":"6020:6:26"}],"functionName":{"name":"add","nativeSrc":"6005:3:26","nodeType":"YulIdentifier","src":"6005:3:26"},"nativeSrc":"6005:22:26","nodeType":"YulFunctionCall","src":"6005:22:26"},{"name":"dataEnd","nativeSrc":"6029:7:26","nodeType":"YulIdentifier","src":"6029:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5974:30:26","nodeType":"YulIdentifier","src":"5974:30:26"},"nativeSrc":"5974:63:26","nodeType":"YulFunctionCall","src":"5974:63:26"},"variableNames":[{"name":"value3","nativeSrc":"5964:6:26","nodeType":"YulIdentifier","src":"5964:6:26"}]}]},{"nativeSrc":"6057:289:26","nodeType":"YulBlock","src":"6057:289:26","statements":[{"nativeSrc":"6072:47:26","nodeType":"YulVariableDeclaration","src":"6072:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6103:9:26","nodeType":"YulIdentifier","src":"6103:9:26"},{"kind":"number","nativeSrc":"6114:3:26","nodeType":"YulLiteral","src":"6114:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6099:3:26","nodeType":"YulIdentifier","src":"6099:3:26"},"nativeSrc":"6099:19:26","nodeType":"YulFunctionCall","src":"6099:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"6086:12:26","nodeType":"YulIdentifier","src":"6086:12:26"},"nativeSrc":"6086:33:26","nodeType":"YulFunctionCall","src":"6086:33:26"},"variables":[{"name":"offset","nativeSrc":"6076:6:26","nodeType":"YulTypedName","src":"6076:6:26","type":""}]},{"body":{"nativeSrc":"6166:83:26","nodeType":"YulBlock","src":"6166:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6168:77:26","nodeType":"YulIdentifier","src":"6168:77:26"},"nativeSrc":"6168:79:26","nodeType":"YulFunctionCall","src":"6168:79:26"},"nativeSrc":"6168:79:26","nodeType":"YulExpressionStatement","src":"6168:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6138:6:26","nodeType":"YulIdentifier","src":"6138:6:26"},{"kind":"number","nativeSrc":"6146:18:26","nodeType":"YulLiteral","src":"6146:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6135:2:26","nodeType":"YulIdentifier","src":"6135:2:26"},"nativeSrc":"6135:30:26","nodeType":"YulFunctionCall","src":"6135:30:26"},"nativeSrc":"6132:117:26","nodeType":"YulIf","src":"6132:117:26"},{"nativeSrc":"6263:73:26","nodeType":"YulAssignment","src":"6263:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6308:9:26","nodeType":"YulIdentifier","src":"6308:9:26"},{"name":"offset","nativeSrc":"6319:6:26","nodeType":"YulIdentifier","src":"6319:6:26"}],"functionName":{"name":"add","nativeSrc":"6304:3:26","nodeType":"YulIdentifier","src":"6304:3:26"},"nativeSrc":"6304:22:26","nodeType":"YulFunctionCall","src":"6304:22:26"},{"name":"dataEnd","nativeSrc":"6328:7:26","nodeType":"YulIdentifier","src":"6328:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"6273:30:26","nodeType":"YulIdentifier","src":"6273:30:26"},"nativeSrc":"6273:63:26","nodeType":"YulFunctionCall","src":"6273:63:26"},"variableNames":[{"name":"value4","nativeSrc":"6263:6:26","nodeType":"YulIdentifier","src":"6263:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nativeSrc":"5082:1271:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5174:9:26","nodeType":"YulTypedName","src":"5174:9:26","type":""},{"name":"dataEnd","nativeSrc":"5185:7:26","nodeType":"YulTypedName","src":"5185:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5197:6:26","nodeType":"YulTypedName","src":"5197:6:26","type":""},{"name":"value1","nativeSrc":"5205:6:26","nodeType":"YulTypedName","src":"5205:6:26","type":""},{"name":"value2","nativeSrc":"5213:6:26","nodeType":"YulTypedName","src":"5213:6:26","type":""},{"name":"value3","nativeSrc":"5221:6:26","nodeType":"YulTypedName","src":"5221:6:26","type":""},{"name":"value4","nativeSrc":"5229:6:26","nodeType":"YulTypedName","src":"5229:6:26","type":""}],"src":"5082:1271:26"},{"body":{"nativeSrc":"6425:263:26","nodeType":"YulBlock","src":"6425:263:26","statements":[{"body":{"nativeSrc":"6471:83:26","nodeType":"YulBlock","src":"6471:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6473:77:26","nodeType":"YulIdentifier","src":"6473:77:26"},"nativeSrc":"6473:79:26","nodeType":"YulFunctionCall","src":"6473:79:26"},"nativeSrc":"6473:79:26","nodeType":"YulExpressionStatement","src":"6473:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6446:7:26","nodeType":"YulIdentifier","src":"6446:7:26"},{"name":"headStart","nativeSrc":"6455:9:26","nodeType":"YulIdentifier","src":"6455:9:26"}],"functionName":{"name":"sub","nativeSrc":"6442:3:26","nodeType":"YulIdentifier","src":"6442:3:26"},"nativeSrc":"6442:23:26","nodeType":"YulFunctionCall","src":"6442:23:26"},{"kind":"number","nativeSrc":"6467:2:26","nodeType":"YulLiteral","src":"6467:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6438:3:26","nodeType":"YulIdentifier","src":"6438:3:26"},"nativeSrc":"6438:32:26","nodeType":"YulFunctionCall","src":"6438:32:26"},"nativeSrc":"6435:119:26","nodeType":"YulIf","src":"6435:119:26"},{"nativeSrc":"6564:117:26","nodeType":"YulBlock","src":"6564:117:26","statements":[{"nativeSrc":"6579:15:26","nodeType":"YulVariableDeclaration","src":"6579:15:26","value":{"kind":"number","nativeSrc":"6593:1:26","nodeType":"YulLiteral","src":"6593:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6583:6:26","nodeType":"YulTypedName","src":"6583:6:26","type":""}]},{"nativeSrc":"6608:63:26","nodeType":"YulAssignment","src":"6608:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6643:9:26","nodeType":"YulIdentifier","src":"6643:9:26"},{"name":"offset","nativeSrc":"6654:6:26","nodeType":"YulIdentifier","src":"6654:6:26"}],"functionName":{"name":"add","nativeSrc":"6639:3:26","nodeType":"YulIdentifier","src":"6639:3:26"},"nativeSrc":"6639:22:26","nodeType":"YulFunctionCall","src":"6639:22:26"},{"name":"dataEnd","nativeSrc":"6663:7:26","nodeType":"YulIdentifier","src":"6663:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6618:20:26","nodeType":"YulIdentifier","src":"6618:20:26"},"nativeSrc":"6618:53:26","nodeType":"YulFunctionCall","src":"6618:53:26"},"variableNames":[{"name":"value0","nativeSrc":"6608:6:26","nodeType":"YulIdentifier","src":"6608:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6359:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6395:9:26","nodeType":"YulTypedName","src":"6395:9:26","type":""},{"name":"dataEnd","nativeSrc":"6406:7:26","nodeType":"YulTypedName","src":"6406:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6418:6:26","nodeType":"YulTypedName","src":"6418:6:26","type":""}],"src":"6359:329:26"},{"body":{"nativeSrc":"6722:152:26","nodeType":"YulBlock","src":"6722:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6739:1:26","nodeType":"YulLiteral","src":"6739:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6742:77:26","nodeType":"YulLiteral","src":"6742:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6732:6:26","nodeType":"YulIdentifier","src":"6732:6:26"},"nativeSrc":"6732:88:26","nodeType":"YulFunctionCall","src":"6732:88:26"},"nativeSrc":"6732:88:26","nodeType":"YulExpressionStatement","src":"6732:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6836:1:26","nodeType":"YulLiteral","src":"6836:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"6839:4:26","nodeType":"YulLiteral","src":"6839:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6829:6:26","nodeType":"YulIdentifier","src":"6829:6:26"},"nativeSrc":"6829:15:26","nodeType":"YulFunctionCall","src":"6829:15:26"},"nativeSrc":"6829:15:26","nodeType":"YulExpressionStatement","src":"6829:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6860:1:26","nodeType":"YulLiteral","src":"6860:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6863:4:26","nodeType":"YulLiteral","src":"6863:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6853:6:26","nodeType":"YulIdentifier","src":"6853:6:26"},"nativeSrc":"6853:15:26","nodeType":"YulFunctionCall","src":"6853:15:26"},"nativeSrc":"6853:15:26","nodeType":"YulExpressionStatement","src":"6853:15:26"}]},"name":"panic_error_0x11","nativeSrc":"6694:180:26","nodeType":"YulFunctionDefinition","src":"6694:180:26"},{"body":{"nativeSrc":"6925:149:26","nodeType":"YulBlock","src":"6925:149:26","statements":[{"nativeSrc":"6935:25:26","nodeType":"YulAssignment","src":"6935:25:26","value":{"arguments":[{"name":"x","nativeSrc":"6958:1:26","nodeType":"YulIdentifier","src":"6958:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6940:17:26","nodeType":"YulIdentifier","src":"6940:17:26"},"nativeSrc":"6940:20:26","nodeType":"YulFunctionCall","src":"6940:20:26"},"variableNames":[{"name":"x","nativeSrc":"6935:1:26","nodeType":"YulIdentifier","src":"6935:1:26"}]},{"nativeSrc":"6969:25:26","nodeType":"YulAssignment","src":"6969:25:26","value":{"arguments":[{"name":"y","nativeSrc":"6992:1:26","nodeType":"YulIdentifier","src":"6992:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6974:17:26","nodeType":"YulIdentifier","src":"6974:17:26"},"nativeSrc":"6974:20:26","nodeType":"YulFunctionCall","src":"6974:20:26"},"variableNames":[{"name":"y","nativeSrc":"6969:1:26","nodeType":"YulIdentifier","src":"6969:1:26"}]},{"nativeSrc":"7003:17:26","nodeType":"YulAssignment","src":"7003:17:26","value":{"arguments":[{"name":"x","nativeSrc":"7015:1:26","nodeType":"YulIdentifier","src":"7015:1:26"},{"name":"y","nativeSrc":"7018:1:26","nodeType":"YulIdentifier","src":"7018:1:26"}],"functionName":{"name":"sub","nativeSrc":"7011:3:26","nodeType":"YulIdentifier","src":"7011:3:26"},"nativeSrc":"7011:9:26","nodeType":"YulFunctionCall","src":"7011:9:26"},"variableNames":[{"name":"diff","nativeSrc":"7003:4:26","nodeType":"YulIdentifier","src":"7003:4:26"}]},{"body":{"nativeSrc":"7045:22:26","nodeType":"YulBlock","src":"7045:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7047:16:26","nodeType":"YulIdentifier","src":"7047:16:26"},"nativeSrc":"7047:18:26","nodeType":"YulFunctionCall","src":"7047:18:26"},"nativeSrc":"7047:18:26","nodeType":"YulExpressionStatement","src":"7047:18:26"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"7036:4:26","nodeType":"YulIdentifier","src":"7036:4:26"},{"name":"x","nativeSrc":"7042:1:26","nodeType":"YulIdentifier","src":"7042:1:26"}],"functionName":{"name":"gt","nativeSrc":"7033:2:26","nodeType":"YulIdentifier","src":"7033:2:26"},"nativeSrc":"7033:11:26","nodeType":"YulFunctionCall","src":"7033:11:26"},"nativeSrc":"7030:37:26","nodeType":"YulIf","src":"7030:37:26"}]},"name":"checked_sub_t_uint256","nativeSrc":"6880:194:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6911:1:26","nodeType":"YulTypedName","src":"6911:1:26","type":""},{"name":"y","nativeSrc":"6914:1:26","nodeType":"YulTypedName","src":"6914:1:26","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6920:4:26","nodeType":"YulTypedName","src":"6920:4:26","type":""}],"src":"6880:194:26"},{"body":{"nativeSrc":"7123:190:26","nodeType":"YulBlock","src":"7123:190:26","statements":[{"nativeSrc":"7133:33:26","nodeType":"YulAssignment","src":"7133:33:26","value":{"arguments":[{"name":"value","nativeSrc":"7160:5:26","nodeType":"YulIdentifier","src":"7160:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7142:17:26","nodeType":"YulIdentifier","src":"7142:17:26"},"nativeSrc":"7142:24:26","nodeType":"YulFunctionCall","src":"7142:24:26"},"variableNames":[{"name":"value","nativeSrc":"7133:5:26","nodeType":"YulIdentifier","src":"7133:5:26"}]},{"body":{"nativeSrc":"7256:22:26","nodeType":"YulBlock","src":"7256:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7258:16:26","nodeType":"YulIdentifier","src":"7258:16:26"},"nativeSrc":"7258:18:26","nodeType":"YulFunctionCall","src":"7258:18:26"},"nativeSrc":"7258:18:26","nodeType":"YulExpressionStatement","src":"7258:18:26"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"7181:5:26","nodeType":"YulIdentifier","src":"7181:5:26"},{"kind":"number","nativeSrc":"7188:66:26","nodeType":"YulLiteral","src":"7188:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"7178:2:26","nodeType":"YulIdentifier","src":"7178:2:26"},"nativeSrc":"7178:77:26","nodeType":"YulFunctionCall","src":"7178:77:26"},"nativeSrc":"7175:103:26","nodeType":"YulIf","src":"7175:103:26"},{"nativeSrc":"7287:20:26","nodeType":"YulAssignment","src":"7287:20:26","value":{"arguments":[{"name":"value","nativeSrc":"7298:5:26","nodeType":"YulIdentifier","src":"7298:5:26"},{"kind":"number","nativeSrc":"7305:1:26","nodeType":"YulLiteral","src":"7305:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7294:3:26","nodeType":"YulIdentifier","src":"7294:3:26"},"nativeSrc":"7294:13:26","nodeType":"YulFunctionCall","src":"7294:13:26"},"variableNames":[{"name":"ret","nativeSrc":"7287:3:26","nodeType":"YulIdentifier","src":"7287:3:26"}]}]},"name":"increment_t_uint256","nativeSrc":"7080:233:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7109:5:26","nodeType":"YulTypedName","src":"7109:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"7119:3:26","nodeType":"YulTypedName","src":"7119:3:26","type":""}],"src":"7080:233:26"},{"body":{"nativeSrc":"7378:40:26","nodeType":"YulBlock","src":"7378:40:26","statements":[{"nativeSrc":"7389:22:26","nodeType":"YulAssignment","src":"7389:22:26","value":{"arguments":[{"name":"value","nativeSrc":"7405:5:26","nodeType":"YulIdentifier","src":"7405:5:26"}],"functionName":{"name":"mload","nativeSrc":"7399:5:26","nodeType":"YulIdentifier","src":"7399:5:26"},"nativeSrc":"7399:12:26","nodeType":"YulFunctionCall","src":"7399:12:26"},"variableNames":[{"name":"length","nativeSrc":"7389:6:26","nodeType":"YulIdentifier","src":"7389:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7319:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7361:5:26","nodeType":"YulTypedName","src":"7361:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7371:6:26","nodeType":"YulTypedName","src":"7371:6:26","type":""}],"src":"7319:99:26"},{"body":{"nativeSrc":"7520:73:26","nodeType":"YulBlock","src":"7520:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7537:3:26","nodeType":"YulIdentifier","src":"7537:3:26"},{"name":"length","nativeSrc":"7542:6:26","nodeType":"YulIdentifier","src":"7542:6:26"}],"functionName":{"name":"mstore","nativeSrc":"7530:6:26","nodeType":"YulIdentifier","src":"7530:6:26"},"nativeSrc":"7530:19:26","nodeType":"YulFunctionCall","src":"7530:19:26"},"nativeSrc":"7530:19:26","nodeType":"YulExpressionStatement","src":"7530:19:26"},{"nativeSrc":"7558:29:26","nodeType":"YulAssignment","src":"7558:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"7577:3:26","nodeType":"YulIdentifier","src":"7577:3:26"},{"kind":"number","nativeSrc":"7582:4:26","nodeType":"YulLiteral","src":"7582:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7573:3:26","nodeType":"YulIdentifier","src":"7573:3:26"},"nativeSrc":"7573:14:26","nodeType":"YulFunctionCall","src":"7573:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"7558:11:26","nodeType":"YulIdentifier","src":"7558:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7424:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7492:3:26","nodeType":"YulTypedName","src":"7492:3:26","type":""},{"name":"length","nativeSrc":"7497:6:26","nodeType":"YulTypedName","src":"7497:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7508:11:26","nodeType":"YulTypedName","src":"7508:11:26","type":""}],"src":"7424:169:26"},{"body":{"nativeSrc":"7661:186:26","nodeType":"YulBlock","src":"7661:186:26","statements":[{"nativeSrc":"7672:10:26","nodeType":"YulVariableDeclaration","src":"7672:10:26","value":{"kind":"number","nativeSrc":"7681:1:26","nodeType":"YulLiteral","src":"7681:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7676:1:26","nodeType":"YulTypedName","src":"7676:1:26","type":""}]},{"body":{"nativeSrc":"7741:63:26","nodeType":"YulBlock","src":"7741:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7766:3:26","nodeType":"YulIdentifier","src":"7766:3:26"},{"name":"i","nativeSrc":"7771:1:26","nodeType":"YulIdentifier","src":"7771:1:26"}],"functionName":{"name":"add","nativeSrc":"7762:3:26","nodeType":"YulIdentifier","src":"7762:3:26"},"nativeSrc":"7762:11:26","nodeType":"YulFunctionCall","src":"7762:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7785:3:26","nodeType":"YulIdentifier","src":"7785:3:26"},{"name":"i","nativeSrc":"7790:1:26","nodeType":"YulIdentifier","src":"7790:1:26"}],"functionName":{"name":"add","nativeSrc":"7781:3:26","nodeType":"YulIdentifier","src":"7781:3:26"},"nativeSrc":"7781:11:26","nodeType":"YulFunctionCall","src":"7781:11:26"}],"functionName":{"name":"mload","nativeSrc":"7775:5:26","nodeType":"YulIdentifier","src":"7775:5:26"},"nativeSrc":"7775:18:26","nodeType":"YulFunctionCall","src":"7775:18:26"}],"functionName":{"name":"mstore","nativeSrc":"7755:6:26","nodeType":"YulIdentifier","src":"7755:6:26"},"nativeSrc":"7755:39:26","nodeType":"YulFunctionCall","src":"7755:39:26"},"nativeSrc":"7755:39:26","nodeType":"YulExpressionStatement","src":"7755:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7702:1:26","nodeType":"YulIdentifier","src":"7702:1:26"},{"name":"length","nativeSrc":"7705:6:26","nodeType":"YulIdentifier","src":"7705:6:26"}],"functionName":{"name":"lt","nativeSrc":"7699:2:26","nodeType":"YulIdentifier","src":"7699:2:26"},"nativeSrc":"7699:13:26","nodeType":"YulFunctionCall","src":"7699:13:26"},"nativeSrc":"7691:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"7713:19:26","nodeType":"YulBlock","src":"7713:19:26","statements":[{"nativeSrc":"7715:15:26","nodeType":"YulAssignment","src":"7715:15:26","value":{"arguments":[{"name":"i","nativeSrc":"7724:1:26","nodeType":"YulIdentifier","src":"7724:1:26"},{"kind":"number","nativeSrc":"7727:2:26","nodeType":"YulLiteral","src":"7727:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7720:3:26","nodeType":"YulIdentifier","src":"7720:3:26"},"nativeSrc":"7720:10:26","nodeType":"YulFunctionCall","src":"7720:10:26"},"variableNames":[{"name":"i","nativeSrc":"7715:1:26","nodeType":"YulIdentifier","src":"7715:1:26"}]}]},"pre":{"nativeSrc":"7695:3:26","nodeType":"YulBlock","src":"7695:3:26","statements":[]},"src":"7691:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7824:3:26","nodeType":"YulIdentifier","src":"7824:3:26"},{"name":"length","nativeSrc":"7829:6:26","nodeType":"YulIdentifier","src":"7829:6:26"}],"functionName":{"name":"add","nativeSrc":"7820:3:26","nodeType":"YulIdentifier","src":"7820:3:26"},"nativeSrc":"7820:16:26","nodeType":"YulFunctionCall","src":"7820:16:26"},{"kind":"number","nativeSrc":"7838:1:26","nodeType":"YulLiteral","src":"7838:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7813:6:26","nodeType":"YulIdentifier","src":"7813:6:26"},"nativeSrc":"7813:27:26","nodeType":"YulFunctionCall","src":"7813:27:26"},"nativeSrc":"7813:27:26","nodeType":"YulExpressionStatement","src":"7813:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7599:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7643:3:26","nodeType":"YulTypedName","src":"7643:3:26","type":""},{"name":"dst","nativeSrc":"7648:3:26","nodeType":"YulTypedName","src":"7648:3:26","type":""},{"name":"length","nativeSrc":"7653:6:26","nodeType":"YulTypedName","src":"7653:6:26","type":""}],"src":"7599:248:26"},{"body":{"nativeSrc":"7945:285:26","nodeType":"YulBlock","src":"7945:285:26","statements":[{"nativeSrc":"7955:53:26","nodeType":"YulVariableDeclaration","src":"7955:53:26","value":{"arguments":[{"name":"value","nativeSrc":"8002:5:26","nodeType":"YulIdentifier","src":"8002:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7969:32:26","nodeType":"YulIdentifier","src":"7969:32:26"},"nativeSrc":"7969:39:26","nodeType":"YulFunctionCall","src":"7969:39:26"},"variables":[{"name":"length","nativeSrc":"7959:6:26","nodeType":"YulTypedName","src":"7959:6:26","type":""}]},{"nativeSrc":"8017:78:26","nodeType":"YulAssignment","src":"8017:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"8083:3:26","nodeType":"YulIdentifier","src":"8083:3:26"},{"name":"length","nativeSrc":"8088:6:26","nodeType":"YulIdentifier","src":"8088:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8024:58:26","nodeType":"YulIdentifier","src":"8024:58:26"},"nativeSrc":"8024:71:26","nodeType":"YulFunctionCall","src":"8024:71:26"},"variableNames":[{"name":"pos","nativeSrc":"8017:3:26","nodeType":"YulIdentifier","src":"8017:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8143:5:26","nodeType":"YulIdentifier","src":"8143:5:26"},{"kind":"number","nativeSrc":"8150:4:26","nodeType":"YulLiteral","src":"8150:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8139:3:26","nodeType":"YulIdentifier","src":"8139:3:26"},"nativeSrc":"8139:16:26","nodeType":"YulFunctionCall","src":"8139:16:26"},{"name":"pos","nativeSrc":"8157:3:26","nodeType":"YulIdentifier","src":"8157:3:26"},{"name":"length","nativeSrc":"8162:6:26","nodeType":"YulIdentifier","src":"8162:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8104:34:26","nodeType":"YulIdentifier","src":"8104:34:26"},"nativeSrc":"8104:65:26","nodeType":"YulFunctionCall","src":"8104:65:26"},"nativeSrc":"8104:65:26","nodeType":"YulExpressionStatement","src":"8104:65:26"},{"nativeSrc":"8178:46:26","nodeType":"YulAssignment","src":"8178:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"8189:3:26","nodeType":"YulIdentifier","src":"8189:3:26"},{"arguments":[{"name":"length","nativeSrc":"8216:6:26","nodeType":"YulIdentifier","src":"8216:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8194:21:26","nodeType":"YulIdentifier","src":"8194:21:26"},"nativeSrc":"8194:29:26","nodeType":"YulFunctionCall","src":"8194:29:26"}],"functionName":{"name":"add","nativeSrc":"8185:3:26","nodeType":"YulIdentifier","src":"8185:3:26"},"nativeSrc":"8185:39:26","nodeType":"YulFunctionCall","src":"8185:39:26"},"variableNames":[{"name":"end","nativeSrc":"8178:3:26","nodeType":"YulIdentifier","src":"8178:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7853:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7926:5:26","nodeType":"YulTypedName","src":"7926:5:26","type":""},{"name":"pos","nativeSrc":"7933:3:26","nodeType":"YulTypedName","src":"7933:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7941:3:26","nodeType":"YulTypedName","src":"7941:3:26","type":""}],"src":"7853:377:26"},{"body":{"nativeSrc":"8514:679:26","nodeType":"YulBlock","src":"8514:679:26","statements":[{"nativeSrc":"8524:27:26","nodeType":"YulAssignment","src":"8524:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8536:9:26","nodeType":"YulIdentifier","src":"8536:9:26"},{"kind":"number","nativeSrc":"8547:3:26","nodeType":"YulLiteral","src":"8547:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8532:3:26","nodeType":"YulIdentifier","src":"8532:3:26"},"nativeSrc":"8532:19:26","nodeType":"YulFunctionCall","src":"8532:19:26"},"variableNames":[{"name":"tail","nativeSrc":"8524:4:26","nodeType":"YulIdentifier","src":"8524:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8605:6:26","nodeType":"YulIdentifier","src":"8605:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8618:9:26","nodeType":"YulIdentifier","src":"8618:9:26"},{"kind":"number","nativeSrc":"8629:1:26","nodeType":"YulLiteral","src":"8629:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8614:3:26","nodeType":"YulIdentifier","src":"8614:3:26"},"nativeSrc":"8614:17:26","nodeType":"YulFunctionCall","src":"8614:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8561:43:26","nodeType":"YulIdentifier","src":"8561:43:26"},"nativeSrc":"8561:71:26","nodeType":"YulFunctionCall","src":"8561:71:26"},"nativeSrc":"8561:71:26","nodeType":"YulExpressionStatement","src":"8561:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8686:6:26","nodeType":"YulIdentifier","src":"8686:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8699:9:26","nodeType":"YulIdentifier","src":"8699:9:26"},{"kind":"number","nativeSrc":"8710:2:26","nodeType":"YulLiteral","src":"8710:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8695:3:26","nodeType":"YulIdentifier","src":"8695:3:26"},"nativeSrc":"8695:18:26","nodeType":"YulFunctionCall","src":"8695:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8642:43:26","nodeType":"YulIdentifier","src":"8642:43:26"},"nativeSrc":"8642:72:26","nodeType":"YulFunctionCall","src":"8642:72:26"},"nativeSrc":"8642:72:26","nodeType":"YulExpressionStatement","src":"8642:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8768:6:26","nodeType":"YulIdentifier","src":"8768:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8781:9:26","nodeType":"YulIdentifier","src":"8781:9:26"},{"kind":"number","nativeSrc":"8792:2:26","nodeType":"YulLiteral","src":"8792:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8777:3:26","nodeType":"YulIdentifier","src":"8777:3:26"},"nativeSrc":"8777:18:26","nodeType":"YulFunctionCall","src":"8777:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8724:43:26","nodeType":"YulIdentifier","src":"8724:43:26"},"nativeSrc":"8724:72:26","nodeType":"YulFunctionCall","src":"8724:72:26"},"nativeSrc":"8724:72:26","nodeType":"YulExpressionStatement","src":"8724:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8850:6:26","nodeType":"YulIdentifier","src":"8850:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8863:9:26","nodeType":"YulIdentifier","src":"8863:9:26"},{"kind":"number","nativeSrc":"8874:2:26","nodeType":"YulLiteral","src":"8874:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8859:3:26","nodeType":"YulIdentifier","src":"8859:3:26"},"nativeSrc":"8859:18:26","nodeType":"YulFunctionCall","src":"8859:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8806:43:26","nodeType":"YulIdentifier","src":"8806:43:26"},"nativeSrc":"8806:72:26","nodeType":"YulFunctionCall","src":"8806:72:26"},"nativeSrc":"8806:72:26","nodeType":"YulExpressionStatement","src":"8806:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8899:9:26","nodeType":"YulIdentifier","src":"8899:9:26"},{"kind":"number","nativeSrc":"8910:3:26","nodeType":"YulLiteral","src":"8910:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8895:3:26","nodeType":"YulIdentifier","src":"8895:3:26"},"nativeSrc":"8895:19:26","nodeType":"YulFunctionCall","src":"8895:19:26"},{"arguments":[{"name":"tail","nativeSrc":"8920:4:26","nodeType":"YulIdentifier","src":"8920:4:26"},{"name":"headStart","nativeSrc":"8926:9:26","nodeType":"YulIdentifier","src":"8926:9:26"}],"functionName":{"name":"sub","nativeSrc":"8916:3:26","nodeType":"YulIdentifier","src":"8916:3:26"},"nativeSrc":"8916:20:26","nodeType":"YulFunctionCall","src":"8916:20:26"}],"functionName":{"name":"mstore","nativeSrc":"8888:6:26","nodeType":"YulIdentifier","src":"8888:6:26"},"nativeSrc":"8888:49:26","nodeType":"YulFunctionCall","src":"8888:49:26"},"nativeSrc":"8888:49:26","nodeType":"YulExpressionStatement","src":"8888:49:26"},{"nativeSrc":"8946:86:26","nodeType":"YulAssignment","src":"8946:86:26","value":{"arguments":[{"name":"value4","nativeSrc":"9018:6:26","nodeType":"YulIdentifier","src":"9018:6:26"},{"name":"tail","nativeSrc":"9027:4:26","nodeType":"YulIdentifier","src":"9027:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8954:63:26","nodeType":"YulIdentifier","src":"8954:63:26"},"nativeSrc":"8954:78:26","nodeType":"YulFunctionCall","src":"8954:78:26"},"variableNames":[{"name":"tail","nativeSrc":"8946:4:26","nodeType":"YulIdentifier","src":"8946:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9053:9:26","nodeType":"YulIdentifier","src":"9053:9:26"},{"kind":"number","nativeSrc":"9064:3:26","nodeType":"YulLiteral","src":"9064:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9049:3:26","nodeType":"YulIdentifier","src":"9049:3:26"},"nativeSrc":"9049:19:26","nodeType":"YulFunctionCall","src":"9049:19:26"},{"arguments":[{"name":"tail","nativeSrc":"9074:4:26","nodeType":"YulIdentifier","src":"9074:4:26"},{"name":"headStart","nativeSrc":"9080:9:26","nodeType":"YulIdentifier","src":"9080:9:26"}],"functionName":{"name":"sub","nativeSrc":"9070:3:26","nodeType":"YulIdentifier","src":"9070:3:26"},"nativeSrc":"9070:20:26","nodeType":"YulFunctionCall","src":"9070:20:26"}],"functionName":{"name":"mstore","nativeSrc":"9042:6:26","nodeType":"YulIdentifier","src":"9042:6:26"},"nativeSrc":"9042:49:26","nodeType":"YulFunctionCall","src":"9042:49:26"},"nativeSrc":"9042:49:26","nodeType":"YulExpressionStatement","src":"9042:49:26"},{"nativeSrc":"9100:86:26","nodeType":"YulAssignment","src":"9100:86:26","value":{"arguments":[{"name":"value5","nativeSrc":"9172:6:26","nodeType":"YulIdentifier","src":"9172:6:26"},{"name":"tail","nativeSrc":"9181:4:26","nodeType":"YulIdentifier","src":"9181:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9108:63:26","nodeType":"YulIdentifier","src":"9108:63:26"},"nativeSrc":"9108:78:26","nodeType":"YulFunctionCall","src":"9108:78:26"},"variableNames":[{"name":"tail","nativeSrc":"9100:4:26","nodeType":"YulIdentifier","src":"9100:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8236:957:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8446:9:26","nodeType":"YulTypedName","src":"8446:9:26","type":""},{"name":"value5","nativeSrc":"8458:6:26","nodeType":"YulTypedName","src":"8458:6:26","type":""},{"name":"value4","nativeSrc":"8466:6:26","nodeType":"YulTypedName","src":"8466:6:26","type":""},{"name":"value3","nativeSrc":"8474:6:26","nodeType":"YulTypedName","src":"8474:6:26","type":""},{"name":"value2","nativeSrc":"8482:6:26","nodeType":"YulTypedName","src":"8482:6:26","type":""},{"name":"value1","nativeSrc":"8490:6:26","nodeType":"YulTypedName","src":"8490:6:26","type":""},{"name":"value0","nativeSrc":"8498:6:26","nodeType":"YulTypedName","src":"8498:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8509:4:26","nodeType":"YulTypedName","src":"8509:4:26","type":""}],"src":"8236:957:26"},{"body":{"nativeSrc":"9325:206:26","nodeType":"YulBlock","src":"9325:206:26","statements":[{"nativeSrc":"9335:26:26","nodeType":"YulAssignment","src":"9335:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9347:9:26","nodeType":"YulIdentifier","src":"9347:9:26"},{"kind":"number","nativeSrc":"9358:2:26","nodeType":"YulLiteral","src":"9358:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9343:3:26","nodeType":"YulIdentifier","src":"9343:3:26"},"nativeSrc":"9343:18:26","nodeType":"YulFunctionCall","src":"9343:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9335:4:26","nodeType":"YulIdentifier","src":"9335:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9415:6:26","nodeType":"YulIdentifier","src":"9415:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9428:9:26","nodeType":"YulIdentifier","src":"9428:9:26"},{"kind":"number","nativeSrc":"9439:1:26","nodeType":"YulLiteral","src":"9439:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9424:3:26","nodeType":"YulIdentifier","src":"9424:3:26"},"nativeSrc":"9424:17:26","nodeType":"YulFunctionCall","src":"9424:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9371:43:26","nodeType":"YulIdentifier","src":"9371:43:26"},"nativeSrc":"9371:71:26","nodeType":"YulFunctionCall","src":"9371:71:26"},"nativeSrc":"9371:71:26","nodeType":"YulExpressionStatement","src":"9371:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9496:6:26","nodeType":"YulIdentifier","src":"9496:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9509:9:26","nodeType":"YulIdentifier","src":"9509:9:26"},{"kind":"number","nativeSrc":"9520:2:26","nodeType":"YulLiteral","src":"9520:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9505:3:26","nodeType":"YulIdentifier","src":"9505:3:26"},"nativeSrc":"9505:18:26","nodeType":"YulFunctionCall","src":"9505:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9452:43:26","nodeType":"YulIdentifier","src":"9452:43:26"},"nativeSrc":"9452:72:26","nodeType":"YulFunctionCall","src":"9452:72:26"},"nativeSrc":"9452:72:26","nodeType":"YulExpressionStatement","src":"9452:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9199:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9289:9:26","nodeType":"YulTypedName","src":"9289:9:26","type":""},{"name":"value1","nativeSrc":"9301:6:26","nodeType":"YulTypedName","src":"9301:6:26","type":""},{"name":"value0","nativeSrc":"9309:6:26","nodeType":"YulTypedName","src":"9309:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9320:4:26","nodeType":"YulTypedName","src":"9320:4:26","type":""}],"src":"9199:332:26"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101275780638da5cb5b14610131578063c76fdf681461014f578063f2fde38b1461017f57610088565b8063247db5dd1461008d57806325c71938146100ab5780633385ab9c146100c7578063387e8311146100f7575b600080fd5b61009561019b565b6040516100a29190610705565b60405180910390f35b6100c560048036038101906100c09190610792565b6101b0565b005b6100e160048036038101906100dc91906107fe565b6102c7565b6040516100ee919061084d565b60405180910390f35b610111600480360381019061010c91906107fe565b610315565b60405161011e919061084d565b60405180910390f35b61012f610363565b005b610139610377565b604051610146919061084d565b60405180910390f35b610169600480360381019061016491906109ae565b6103a0565b604051610176919061084d565b60405180910390f35b61019960048036038101906101949190610a61565b610506565b005b6000600180546101ab9190610abd565b905090565b6101b861058c565b8173ffffffffffffffffffffffffffffffffffffffff16633dd1eb61826040518263ffffffff1660e01b81526004016101f1919061084d565b600060405180830381600087803b15801561020b57600080fd5b505af115801561021f573d6000803e3d6000fd5b50505050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260205281600052604060002081815481106102e357600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052816000526040600020818154811061033157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61036b61058c565b6103756000610613565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806001549050600160008154809291906103bb90610af1565b919050555060003388888888886040516103d4906106df565b6103e396959493929190610bb8565b604051809103906000f0801580156103ff573d6000803e3d6000fd5b5090506000819050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f054189e2ad79e5c2d10e8da115126520634a6a9b369a130345025ae1ddeafe9282856040516104ef929190610c27565b60405180910390a280935050505095945050505050565b61050e61058c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105805760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610577919061084d565b60405180910390fd5b61058981610613565b50565b6105946106d7565b73ffffffffffffffffffffffffffffffffffffffff166105b2610377565b73ffffffffffffffffffffffffffffffffffffffff1614610611576105d56106d7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610608919061084d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b613cff80610c5183390190565b6000819050919050565b6106ff816106ec565b82525050565b600060208201905061071a60008301846106f6565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075f82610734565b9050919050565b61076f81610754565b811461077a57600080fd5b50565b60008135905061078c81610766565b92915050565b600080604083850312156107a9576107a861072a565b5b60006107b78582860161077d565b92505060206107c88582860161077d565b9150509250929050565b6107db816106ec565b81146107e657600080fd5b50565b6000813590506107f8816107d2565b92915050565b600080604083850312156108155761081461072a565b5b60006108238582860161077d565b9250506020610834858286016107e9565b9150509250929050565b61084781610754565b82525050565b6000602082019050610862600083018461083e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108bb82610872565b810181811067ffffffffffffffff821117156108da576108d9610883565b5b80604052505050565b60006108ed610720565b90506108f982826108b2565b919050565b600067ffffffffffffffff82111561091957610918610883565b5b61092282610872565b9050602081019050919050565b82818337600083830152505050565b600061095161094c846108fe565b6108e3565b90508281526020810184848401111561096d5761096c61086d565b5b61097884828561092f565b509392505050565b600082601f83011261099557610994610868565b5b81356109a584826020860161093e565b91505092915050565b600080600080600060a086880312156109ca576109c961072a565b5b60006109d8888289016107e9565b95505060206109e9888289016107e9565b94505060406109fa888289016107e9565b935050606086013567ffffffffffffffff811115610a1b57610a1a61072f565b5b610a2788828901610980565b925050608086013567ffffffffffffffff811115610a4857610a4761072f565b5b610a5488828901610980565b9150509295509295909350565b600060208284031215610a7757610a7661072a565b5b6000610a858482850161077d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ac8826106ec565b9150610ad3836106ec565b9250828203905081811115610aeb57610aea610a8e565b5b92915050565b6000610afc826106ec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b2e57610b2d610a8e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b73578082015181840152602081019050610b58565b60008484015250505050565b6000610b8a82610b39565b610b948185610b44565b9350610ba4818560208601610b55565b610bad81610872565b840191505092915050565b600060c082019050610bcd600083018961083e565b610bda60208301886106f6565b610be760408301876106f6565b610bf460608301866106f6565b8181036080830152610c068185610b7f565b905081810360a0830152610c1a8184610b7f565b9050979650505050505050565b6000604082019050610c3c600083018561083e565b610c4960208301846106f6565b939250505056fe6101806040526001600c60006101000a81548160ff02191690831515021790555073355e559bca86346b82d58be0460d661db481e05e73ffffffffffffffffffffffffffffffffffffffff166101609073ffffffffffffffffffffffffffffffffffffffff1681525034801561007457600080fd5b50604051613cff380380613cff833981810160405281019061009691906106c0565b81806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250848481600390816100df919061099c565b5080600490816100ef919061099c565b50505061010660058361022960201b90919060201c565b610120818152505061012260068261022960201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505061015f61027960201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506101b06000801b876102d460201b60201c565b506101e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876102d460201b60201c565b508460098190555083600a8190555082600b8190555081600e9081610206919061099c565b5080600f9081610216919061099c565b5042600d81905550505050505050610bfb565b600060208351101561024b57610244836103d260201b60201c565b9050610273565b8261025b8361043a60201b60201c565b600001908161026a919061099c565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016102b9959493929190610aa5565b60405160208183030381529060405280519060200120905090565b60006102e6838361044460201b60201c565b6103c75760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103646104af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506103cc565b600090505b92915050565b600080829050601f8151111561041f57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016104169190610b42565b60405180910390fd5b80518161042b90610b94565b60001c1760001b915050919050565b6000819050919050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f6826104cb565b9050919050565b610506816104eb565b811461051157600080fd5b50565b600081519050610523816104fd565b92915050565b6000819050919050565b61053c81610529565b811461054757600080fd5b50565b60008151905061055981610533565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105b282610569565b810181811067ffffffffffffffff821117156105d1576105d061057a565b5b80604052505050565b60006105e46104b7565b90506105f082826105a9565b919050565b600067ffffffffffffffff8211156106105761060f61057a565b5b61061982610569565b9050602081019050919050565b60005b83811015610644578082015181840152602081019050610629565b60008484015250505050565b600061066361065e846105f5565b6105da565b90508281526020810184848401111561067f5761067e610564565b5b61068a848285610626565b509392505050565b600082601f8301126106a7576106a661055f565b5b81516106b7848260208601610650565b91505092915050565b60008060008060008060c087890312156106dd576106dc6104c1565b5b60006106eb89828a01610514565b96505060206106fc89828a0161054a565b955050604061070d89828a0161054a565b945050606061071e89828a0161054a565b935050608087015167ffffffffffffffff81111561073f5761073e6104c6565b5b61074b89828a01610692565b92505060a087015167ffffffffffffffff81111561076c5761076b6104c6565b5b61077889828a01610692565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107d757607f821691505b6020821081036107ea576107e9610790565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610815565b61085c8683610815565b95508019841693508086168417925050509392505050565b6000819050919050565b600061089961089461088f84610529565b610874565b610529565b9050919050565b6000819050919050565b6108b38361087e565b6108c76108bf826108a0565b848454610822565b825550505050565b600090565b6108dc6108cf565b6108e78184846108aa565b505050565b5b8181101561090b576109006000826108d4565b6001810190506108ed565b5050565b601f82111561095057610921816107f0565b61092a84610805565b81016020851015610939578190505b61094d61094585610805565b8301826108ec565b50505b505050565b600082821c905092915050565b600061097360001984600802610955565b1980831691505092915050565b600061098c8383610962565b9150826002028217905092915050565b6109a582610785565b67ffffffffffffffff8111156109be576109bd61057a565b5b6109c882546107bf565b6109d382828561090f565b600060209050601f831160018114610a0657600084156109f4578287015190505b6109fe8582610980565b865550610a66565b601f198416610a14866107f0565b60005b82811015610a3c57848901518255600182019150602085019450602081019050610a17565b86831015610a595784890151610a55601f891682610962565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b610a8181610a6e565b82525050565b610a9081610529565b82525050565b610a9f816104eb565b82525050565b600060a082019050610aba6000830188610a78565b610ac76020830187610a78565b610ad46040830186610a78565b610ae16060830185610a87565b610aee6080830184610a96565b9695505050505050565b600082825260208201905092915050565b6000610b1482610785565b610b1e8185610af8565b9350610b2e818560208601610626565b610b3781610569565b840191505092915050565b60006020820190508181036000830152610b5c8184610b09565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000610b8b8251610a6e565b80915050919050565b6000610b9f82610b64565b82610ba984610b6f565b9050610bb481610b7f565b92506020821015610bf457610bef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802610815565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161016051613098610c6760003960008181610a640152610dbf0152600061182b015260006117f001526000611c4b01526000611c2a01526000611576015260006115cc015260006115f501526130986000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c8063735328021161013057806395d89b41116100b8578063d547741f1161007c578063d547741f14610687578063d5abeb01146106a3578063dd62ed3e146106c1578063e488ede8146106f1578063e6ad10e11461070d57610232565b806395d89b41146105e1578063a217fddf146105ff578063a9059cbb1461061d578063d505accf1461064d578063d53913931461066957610232565b806381fb8b06116100ff57806381fb8b061461054757806383de3e6a1461056557806384b0196e1461056f5780638e80ff5d1461059357806391d14854146105b157610232565b806373532802146104bf57806375b238fc146104db5780637b61c320146104f95780637ecebe001461051757610232565b80633644e515116101be57806355233b481161018257806355233b481461041957806369e2f0fb146104375780636c02a931146104535780636c8597fc1461047157806370a082311461048f57610232565b80633644e5151461038957806336568abe146103a75780633dd1eb61146103c357806340c10f19146103df57806348709a93146103fb57610232565b806318160ddd1161020557806318160ddd146102d157806323b872dd146102ef578063248a9ca31461031f5780632f2ff15d1461034f578063313ce5671461036b57610232565b806301ffc9a71461023757806306fdde03146102675780630914d4da14610285578063095ea7b3146102a1575b600080fd5b610251600480360381019061024c919061232a565b61072b565b60405161025e9190612372565b60405180910390f35b61026f6107a5565b60405161027c919061241d565b60405180910390f35b61029f600480360381019061029a9190612475565b610837565b005b6102bb60048036038101906102b69190612500565b610893565b6040516102c89190612372565b60405180910390f35b6102d96108b6565b6040516102e6919061254f565b60405180910390f35b6103096004803603810190610304919061256a565b6108c0565b6040516103169190612372565b60405180910390f35b610339600480360381019061033491906125f3565b6108ef565b604051610346919061262f565b60405180910390f35b6103696004803603810190610364919061264a565b61090f565b005b610373610931565b60405161038091906126a6565b60405180910390f35b61039161093a565b60405161039e919061262f565b60405180910390f35b6103c160048036038101906103bc919061264a565b610949565b005b6103dd60048036038101906103d891906126c1565b6109c4565b005b6103f960048036038101906103f49190612500565b6109ff565b005b610403610b8a565b6040516104109190612372565b60405180910390f35b610421610b9d565b60405161042e919061254f565b60405180910390f35b610451600480360381019061044c91906126c1565b610ba3565b005b61045b610bde565b604051610468919061241d565b60405180910390f35b610479610c6c565b604051610486919061254f565b60405180910390f35b6104a960048036038101906104a491906126c1565b610c72565b6040516104b6919061254f565b60405180910390f35b6104d960048036038101906104d49190612475565b610cba565b005b6104e3610d16565b6040516104f0919061262f565b60405180910390f35b610501610d1d565b60405161050e919061241d565b60405180910390f35b610531600480360381019061052c91906126c1565b610dab565b60405161053e919061254f565b60405180910390f35b61054f610dbd565b60405161055c91906126fd565b60405180910390f35b61056d610de1565b005b610577610e0c565b60405161058a9796959493929190612811565b60405180910390f35b61059b610eb6565b6040516105a8919061254f565b60405180910390f35b6105cb60048036038101906105c6919061264a565b610ebc565b6040516105d89190612372565b60405180910390f35b6105e9610f27565b6040516105f6919061241d565b60405180910390f35b610607610fb9565b604051610614919061262f565b60405180910390f35b61063760048036038101906106329190612500565b610fc0565b6040516106449190612372565b60405180910390f35b610667600480360381019061066291906128c1565b610fe3565b005b61067161112b565b60405161067e919061262f565b60405180910390f35b6106a1600480360381019061069c919061264a565b61114f565b005b6106ab611171565b6040516106b8919061254f565b60405180910390f35b6106db60048036038101906106d69190612963565b611177565b6040516106e8919061254f565b60405180910390f35b61070b60048036038101906107069190612475565b6111fe565b005b61071561125a565b604051610722919061254f565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079e575061079d82611260565b5b9050919050565b6060600380546107b4906129d2565b80601f01602080910402602001604051908101604052809291908181526020018280546107e0906129d2565b801561082d5780601f106108025761010080835404028352916020019161082d565b820191906000526020600020905b81548152906001019060200180831161081057829003601f168201915b5050505050905090565b6000801b610844816112ca565b600a548210610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90612a75565b60405180910390fd5b81600a819055505050565b60008061089e6112de565b90506108ab8185856112e6565b600191505092915050565b6000600254905090565b6000806108cb6112de565b90506108d88582856112f8565b6108e385858561138c565b60019150509392505050565b600060086000838152602001908152602001600020600101549050919050565b610918826108ef565b610921816112ca565b61092b8383611480565b50505050565b60006012905090565b6000610944611572565b905090565b6109516112de565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b5576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bf8282611629565b505050565b6000801b6109d1816112ca565b6109fb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361090f565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a29816112ca565b6000610a336108b6565b90506000620186a06101f485610a499190612ac4565b610a539190612b35565b9050610a5f858561171c565b610a897f00000000000000000000000000000000000000000000000000000000000000008261171c565b42600d81905550600954818584610aa09190612b66565b610aaa9190612b66565b1115610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290612be6565b60405180910390fd5b600a548210610b83576000600d5442610b049190612c06565b9050600063bbf81e0082600b5486610b1c9190612ac4565b610b269190612ac4565b610b309190612b35565b9050808387610b3f9190612b66565b1115610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790612c86565b60405180910390fd5b50505b5050505050565b600c60009054906101000a900460ff1681565b600b5481565b6000801b610bb0816112ca565b610bda7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361114f565b5050565b600e8054610beb906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c17906129d2565b8015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b505050505081565b6101f481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b610cc7816112ca565b6009548210610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0290612d18565b60405180910390fd5b816009819055505050565b6000801b81565b600f8054610d2a906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d56906129d2565b8015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505050505081565b6000610db68261179e565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000801b610dee816112ca565b6000600c60006101000a81548160ff02191690831515021790555050565b600060608060008060006060610e206117e7565b610e28611822565b46306000801b600067ffffffffffffffff811115610e4957610e48612d38565b5b604051908082528060200260200182016040528015610e775781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600d5481565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610f36906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f62906129d2565b8015610faf5780601f10610f8457610100808354040283529160200191610faf565b820191906000526020600020905b815481529060010190602001808311610f9257829003601f168201915b5050505050905090565b6000801b81565b600080610fcb6112de565b9050610fd881858561138c565b600191505092915050565b8342111561102857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161101f919061254f565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886110578c61185d565b8960405160200161106d96959493929190612d67565b6040516020818303038152906040528051906020012090506000611090826118b4565b905060006110a0828787876118ce565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461111457808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161110b929190612dc8565b60405180910390fd5b61111f8a8a8a6112e6565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611158826108ef565b611161816112ca565b61116b8383611629565b50505050565b60095481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000801b61120b816112ca565b600b54821061124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124690612e89565b60405180910390fd5b81600b819055505050565b600a5481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6112db816112d66112de565b6118fe565b50565b600033905090565b6112f3838383600161194f565b505050565b60006113048484611177565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113865781811015611376578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161136d93929190612ea9565b60405180910390fd5b6113858484848403600061194f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fe5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113f591906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114705760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161146791906126fd565b60405180910390fd5b61147b838383611b26565b505050565b600061148c8383610ebc565b6115675760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115046112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061156c565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156115ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561161b577f00000000000000000000000000000000000000000000000000000000000000009050611626565b611623611c05565b90505b90565b60006116358383610ebc565b156117115760006008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116ae6112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611716565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361178e5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161178591906126fd565b60405180910390fd5b61179a60008383611b26565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061181d60057f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b606061185860067f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006118c76118c1611572565b83611d4b565b9050919050565b6000806000806118e088888888611d8c565b9250925092506118f08282611e80565b829350505050949350505050565b6119088282610ebc565b61194b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611942929190612ee0565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119c15760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119b891906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a335760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a2a91906126fd565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611b20578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b17919061254f565b60405180910390a35b50505050565b600c60009054906101000a900460ff1615611bf557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611ba25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611bb557506000611bb383610c72565b115b611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb90612f7b565b60405180910390fd5b5b611c00838383611fe4565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611c80959493929190612f9b565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611cb857611cb183612209565b9050611d45565b818054611cc4906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054611cf0906129d2565b8015611d3d5780601f10611d1257610100808354040283529160200191611d3d565b820191906000526020600020905b815481529060010190602001808311611d2057829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611dcc576000600385925092509250611e76565b600060018888888860405160008152602001604052604051611df19493929190612fee565b6020604051602081039080840390855afa158015611e13573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e6757600060016000801b93509350935050611e76565b8060008060001b935093509350505b9450945094915050565b60006003811115611e9457611e93613033565b5b826003811115611ea757611ea6613033565b5b0315611fe05760016003811115611ec157611ec0613033565b5b826003811115611ed457611ed3613033565b5b03611f0b576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611f1f57611f1e613033565b5b826003811115611f3257611f31613033565b5b03611f77578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611f6e919061254f565b60405180910390fd5b600380811115611f8a57611f89613033565b5b826003811115611f9d57611f9c613033565b5b03611fdf57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611fd6919061262f565b60405180910390fd5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361203657806002600082825461202a9190612b66565b92505081905550612109565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156120c2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016120b993929190612ea9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612152578060026000828254039250508190555061219f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121fc919061254f565b60405180910390a3505050565b606060006122168361227d565b90506000602067ffffffffffffffff81111561223557612234612d38565b5b6040519080825280601f01601f1916602001820160405280156122675781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156122c4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612307816122d2565b811461231257600080fd5b50565b600081359050612324816122fe565b92915050565b6000602082840312156123405761233f6122cd565b5b600061234e84828501612315565b91505092915050565b60008115159050919050565b61236c81612357565b82525050565b60006020820190506123876000830184612363565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123c75780820151818401526020810190506123ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006123ef8261238d565b6123f98185612398565b93506124098185602086016123a9565b612412816123d3565b840191505092915050565b6000602082019050818103600083015261243781846123e4565b905092915050565b6000819050919050565b6124528161243f565b811461245d57600080fd5b50565b60008135905061246f81612449565b92915050565b60006020828403121561248b5761248a6122cd565b5b600061249984828501612460565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124cd826124a2565b9050919050565b6124dd816124c2565b81146124e857600080fd5b50565b6000813590506124fa816124d4565b92915050565b60008060408385031215612517576125166122cd565b5b6000612525858286016124eb565b925050602061253685828601612460565b9150509250929050565b6125498161243f565b82525050565b60006020820190506125646000830184612540565b92915050565b600080600060608486031215612583576125826122cd565b5b6000612591868287016124eb565b93505060206125a2868287016124eb565b92505060406125b386828701612460565b9150509250925092565b6000819050919050565b6125d0816125bd565b81146125db57600080fd5b50565b6000813590506125ed816125c7565b92915050565b600060208284031215612609576126086122cd565b5b6000612617848285016125de565b91505092915050565b612629816125bd565b82525050565b60006020820190506126446000830184612620565b92915050565b60008060408385031215612661576126606122cd565b5b600061266f858286016125de565b9250506020612680858286016124eb565b9150509250929050565b600060ff82169050919050565b6126a08161268a565b82525050565b60006020820190506126bb6000830184612697565b92915050565b6000602082840312156126d7576126d66122cd565b5b60006126e5848285016124eb565b91505092915050565b6126f7816124c2565b82525050565b600060208201905061271260008301846126ee565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61274d81612718565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127888161243f565b82525050565b600061279a838361277f565b60208301905092915050565b6000602082019050919050565b60006127be82612753565b6127c8818561275e565b93506127d38361276f565b8060005b838110156128045781516127eb888261278e565b97506127f6836127a6565b9250506001810190506127d7565b5085935050505092915050565b600060e082019050612826600083018a612744565b818103602083015261283881896123e4565b9050818103604083015261284c81886123e4565b905061285b6060830187612540565b61286860808301866126ee565b61287560a0830185612620565b81810360c083015261288781846127b3565b905098975050505050505050565b61289e8161268a565b81146128a957600080fd5b50565b6000813590506128bb81612895565b92915050565b600080600080600080600060e0888a0312156128e0576128df6122cd565b5b60006128ee8a828b016124eb565b97505060206128ff8a828b016124eb565b96505060406129108a828b01612460565b95505060606129218a828b01612460565b94505060806129328a828b016128ac565b93505060a06129438a828b016125de565b92505060c06129548a828b016125de565b91505092959891949750929550565b6000806040838503121561297a576129796122cd565b5b6000612988858286016124eb565b9250506020612999858286016124eb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129ea57607f821691505b6020821081036129fd576129fc6129a3565b5b50919050565b7f4e6577207468726573686f6c6420737570706c79206d757374206265206c657360008201527f73207468616e2063757272656e74207468726573686f6c6420737570706c7900602082015250565b6000612a5f603f83612398565b9150612a6a82612a03565b604082019050919050565b60006020820190508181036000830152612a8e81612a52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612acf8261243f565b9150612ada8361243f565b9250828202612ae88161243f565b91508282048414831517612aff57612afe612a95565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b408261243f565b9150612b4b8361243f565b925082612b5b57612b5a612b06565b5b828204905092915050565b6000612b718261243f565b9150612b7c8361243f565b9250828201905080821115612b9457612b93612a95565b5b92915050565b7f45786365656473206d6178696d756d20737570706c7900000000000000000000600082015250565b6000612bd0601683612398565b9150612bdb82612b9a565b602082019050919050565b60006020820190508181036000830152612bff81612bc3565b9050919050565b6000612c118261243f565b9150612c1c8361243f565b9250828203905081811115612c3457612c33612a95565b5b92915050565b7f45786365656473206d6178696d756d20657870616e73696f6e20726174650000600082015250565b6000612c70601e83612398565b9150612c7b82612c3a565b602082019050919050565b60006020820190508181036000830152612c9f81612c63565b9050919050565b7f4e6577206d617820737570706c79206d757374206265206c657373207468616e60008201527f2063757272656e74206d617820737570706c7900000000000000000000000000602082015250565b6000612d02603383612398565b9150612d0d82612ca6565b604082019050919050565b60006020820190508181036000830152612d3181612cf5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050612d7c6000830189612620565b612d8960208301886126ee565b612d9660408301876126ee565b612da36060830186612540565b612db06080830185612540565b612dbd60a0830184612540565b979650505050505050565b6000604082019050612ddd60008301856126ee565b612dea60208301846126ee565b9392505050565b7f4e6577206d617820657870616e73696f6e2072617465206d757374206265206c60008201527f657373207468616e2063757272656e74206d617820657870616e73696f6e207260208201527f6174650000000000000000000000000000000000000000000000000000000000604082015250565b6000612e73604383612398565b9150612e7e82612df1565b606082019050919050565b60006020820190508181036000830152612ea281612e66565b9050919050565b6000606082019050612ebe60008301866126ee565b612ecb6020830185612540565b612ed86040830184612540565b949350505050565b6000604082019050612ef560008301856126ee565b612f026020830184612620565b9392505050565b7f5472616e73666572207265737472696374656420746f206578697374696e672060008201527f746f6b656e20686f6c6465727300000000000000000000000000000000000000602082015250565b6000612f65602d83612398565b9150612f7082612f09565b604082019050919050565b60006020820190508181036000830152612f9481612f58565b9050919050565b600060a082019050612fb06000830188612620565b612fbd6020830187612620565b612fca6040830186612620565b612fd76060830185612540565b612fe460808301846126ee565b9695505050505050565b60006080820190506130036000830187612620565b6130106020830186612697565b61301d6040830185612620565b61302a6060830184612620565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220f00b10514571d19e56da615bf2b400bf4610a5e73035179358a9b37985f6615164736f6c634300081c0033a26469706673582212209e772aa83a5d21fefc847ff87704cbb5176491be247ff6f79aec143b561a82ae64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xC76FDF68 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x247DB5DD EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x25C71938 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3385AB9C EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x387E8311 EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA61 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x58C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DD1EB61 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x58C JUMP JUMPDEST PUSH2 0x375 PUSH1 0x0 PUSH2 0x613 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB SWAP1 PUSH2 0xAF1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x3E3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54189E2AD79E5C2D10E8DA115126520634A6A9B369A130345025AE1DDEAFE92 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP3 SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x50E PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x613 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x594 PUSH2 0x6D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B2 PUSH2 0x377 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x611 JUMPI PUSH2 0x5D5 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3CFF DUP1 PUSH2 0xC51 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F DUP3 PUSH2 0x734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x754 JUMP JUMPDEST DUP2 EQ PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78C DUP2 PUSH2 0x766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B7 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7C8 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F8 DUP2 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x815 JUMPI PUSH2 0x814 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x823 DUP6 DUP3 DUP7 ADD PUSH2 0x77D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x834 DUP6 DUP3 DUP7 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x754 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BB DUP3 PUSH2 0x872 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8DA JUMPI PUSH2 0x8D9 PUSH2 0x883 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8ED PUSH2 0x720 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F9 DUP3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x883 JUMP JUMPDEST JUMPDEST PUSH2 0x922 DUP3 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x951 PUSH2 0x94C DUP5 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96C PUSH2 0x86D JUMP JUMPDEST JUMPDEST PUSH2 0x978 DUP5 DUP3 DUP6 PUSH2 0x92F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x868 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9E9 DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9FA DUP9 DUP3 DUP10 ADD PUSH2 0x7E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0x72F JUMP JUMPDEST JUMPDEST PUSH2 0xA27 DUP9 DUP3 DUP10 ADD PUSH2 0x980 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x72F JUMP JUMPDEST JUMPDEST PUSH2 0xA54 DUP9 DUP3 DUP10 ADD PUSH2 0x980 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x72A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA85 DUP5 DUP3 DUP6 ADD PUSH2 0x77D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH2 0xAD3 DUP4 PUSH2 0x6EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0xA8E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB2E JUMPI PUSH2 0xB2D PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP3 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB94 DUP2 DUP6 PUSH2 0xB44 JUMP JUMPDEST SWAP4 POP PUSH2 0xBA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB55 JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x872 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xBCD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xBF4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xC06 DUP2 DUP6 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xC1A DUP2 DUP5 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC3C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xC49 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH2 0x180 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH20 0x355E559BCA86346B82D58BE0460D661DB481E05E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CFF CODESIZE SUB DUP1 PUSH2 0x3CFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP POP POP PUSH2 0x106 PUSH1 0x5 DUP4 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x122 PUSH1 0x6 DUP3 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x15F PUSH2 0x279 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x1B0 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1E1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE SWAP1 DUP2 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0xF SWAP1 DUP2 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x24B JUMPI PUSH2 0x244 DUP4 PUSH2 0x3D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x273 JUMP JUMPDEST DUP3 PUSH2 0x25B DUP4 PUSH2 0x43A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP4 DUP4 PUSH2 0x444 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C7 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x364 PUSH2 0x4AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x41F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x42B SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x4CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C DUP2 PUSH2 0x529 JUMP JUMPDEST DUP2 EQ PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x559 DUP2 PUSH2 0x533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5B2 DUP3 PUSH2 0x569 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x57A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x4B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F0 DUP3 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x619 DUP3 PUSH2 0x569 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x644 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 PUSH2 0x65E DUP5 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x67F JUMPI PUSH2 0x67E PUSH2 0x564 JUMP JUMPDEST JUMPDEST PUSH2 0x68A DUP5 DUP3 DUP6 PUSH2 0x626 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x6B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x4C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP10 DUP3 DUP11 ADD PUSH2 0x514 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6FC DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x70D DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x71E DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73F JUMPI PUSH2 0x73E PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x74B DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76C JUMPI PUSH2 0x76B PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x778 DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x852 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x85C DUP7 DUP4 PUSH2 0x815 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x899 PUSH2 0x894 PUSH2 0x88F DUP5 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8BF DUP3 PUSH2 0x8A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x822 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x8E7 DUP2 DUP5 DUP5 PUSH2 0x8AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90B JUMPI PUSH2 0x900 PUSH1 0x0 DUP3 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x950 JUMPI PUSH2 0x921 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x92A DUP5 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x939 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x94D PUSH2 0x945 DUP6 PUSH2 0x805 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x973 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x955 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP4 DUP4 PUSH2 0x962 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x9C8 DUP3 SLOAD PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x9D3 DUP3 DUP3 DUP6 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA06 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x9F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9FE DUP6 DUP3 PUSH2 0x980 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA14 DUP7 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA3C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA17 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA59 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA55 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x962 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0xA6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0x529 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xABA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAC7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAD4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAE1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH2 0xB1E DUP2 DUP6 PUSH2 0xAF8 JUMP JUMPDEST SWAP4 POP PUSH2 0xB2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0xB37 DUP2 PUSH2 0x569 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5C DUP2 DUP5 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP3 MLOAD PUSH2 0xA6E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9F DUP3 PUSH2 0xB64 JUMP JUMPDEST DUP3 PUSH2 0xBA9 DUP5 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBEF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x815 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3098 PUSH2 0xC67 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA64 ADD MSTORE PUSH2 0xDBF ADD MSTORE PUSH1 0x0 PUSH2 0x182B ADD MSTORE PUSH1 0x0 PUSH2 0x17F0 ADD MSTORE PUSH1 0x0 PUSH2 0x1C4B ADD MSTORE PUSH1 0x0 PUSH2 0x1C2A ADD MSTORE PUSH1 0x0 PUSH2 0x1576 ADD MSTORE PUSH1 0x0 PUSH2 0x15CC ADD MSTORE PUSH1 0x0 PUSH2 0x15F5 ADD MSTORE PUSH2 0x3098 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73532802 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE488EDE8 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE6AD10E1 EQ PUSH2 0x70D JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x669 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81FB8B06 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x81FB8B06 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x83DE3E6A EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x8E80FF5D EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x73532802 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x517 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55233B48 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x55233B48 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x69E2F0FB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x6C8597FC EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x3FB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x914D4DA EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x403 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x671 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AB PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x715 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH2 0x79D DUP3 PUSH2 0x1260 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7B4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x802 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x810 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x89E PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8AB DUP2 DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D8 DUP6 DUP3 DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8E3 DUP6 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x92B DUP4 DUP4 PUSH2 0x1480 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x944 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BF DUP3 DUP3 PUSH2 0x1629 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9D1 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xA29 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1F4 DUP6 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5F DUP6 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x0 DUP3 PUSH2 0x171C JUMP JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD DUP2 DUP6 DUP5 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xB83 JUMPI PUSH1 0x0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xB SLOAD DUP7 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBB0 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xBDA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x114F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xBEB SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC17 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCC7 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xD2A SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xDEE DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xE20 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x1822 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF62 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0xFD8 DUP2 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1057 DUP13 PUSH2 0x185D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x106D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1090 DUP3 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1114 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP3 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F DUP11 DUP11 DUP11 PUSH2 0x12E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1158 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x120B DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12D6 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x194F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1386 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x194F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1504 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15EE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x161B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1623 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16AE PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x179A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x181D PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1858 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x1572 JUMP JUMPDEST DUP4 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x18E0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F0 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1908 DUP3 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x194B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B8 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B20 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1BB5 JUMPI POP PUSH1 0x0 PUSH2 0x1BB3 DUP4 PUSH2 0xC72 JUMP JUMPDEST GT JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1C00 DUP4 DUP4 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB8 JUMPI PUSH2 0x1CB1 DUP4 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D45 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E67 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1E76 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F77 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FDF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2036 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2152 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2216 DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2324 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP5 DUP3 DUP6 ADD PUSH2 0x2315 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2387 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EF DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x23F9 DUP2 DUP6 PUSH2 0x2398 JUMP JUMPDEST SWAP4 POP PUSH2 0x2409 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A9 JUMP JUMPDEST PUSH2 0x2412 DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP2 EQ PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246F DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248B JUMPI PUSH2 0x248A PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP5 DUP3 DUP6 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CD DUP3 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DD DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FA DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2536 DUP6 DUP3 DUP7 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2591 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A2 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B3 DUP7 DUP3 DUP8 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25ED DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2629 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2660 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP6 DUP3 DUP7 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A0 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP5 DUP3 DUP6 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26F7 DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2712 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274D DUP2 PUSH2 0x2718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2788 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP4 DUP4 PUSH2 0x277F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH2 0x27C8 DUP2 DUP6 PUSH2 0x275E JUMP JUMPDEST SWAP4 POP PUSH2 0x27D3 DUP4 PUSH2 0x276F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2804 JUMPI DUP2 MLOAD PUSH2 0x27EB DUP9 DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP8 POP PUSH2 0x27F6 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2826 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2744 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2838 DUP2 DUP10 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x284C DUP2 DUP9 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x285B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2868 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2875 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2887 DUP2 DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x28A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BB DUP2 PUSH2 0x2895 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH2 0x28DF PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28FF DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2910 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2921 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2932 DUP11 DUP3 DUP12 ADD PUSH2 0x28AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2943 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2954 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297A JUMPI PUSH2 0x2979 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2988 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2999 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29FD JUMPI PUSH2 0x29FC PUSH2 0x29A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577207468726573686F6C6420737570706C79206D757374206265206C6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73207468616E2063757272656E74207468726573686F6C6420737570706C7900 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5F PUSH1 0x3F DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6A DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8E DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ACF DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADA DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AE8 DUP2 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B40 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4B DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B94 JUMPI PUSH2 0x2B93 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20737570706C7900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 PUSH1 0x16 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20657870616E73696F6E20726174650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1E DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206D757374206265206C657373207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74206D617820737570706C7900000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D02 PUSH1 0x33 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D31 DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2D89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2D96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DA3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DB0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6577206D617820657870616E73696F6E2072617465206D757374206265206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657373207468616E2063757272656E74206D617820657870616E73696F6E2072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6174650000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E73 PUSH1 0x43 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA2 DUP2 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2ECB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2ED8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2F02 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572207265737472696374656420746F206578697374696E6720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E20686F6C6465727300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F65 PUSH1 0x2D DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F70 DUP3 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F94 DUP2 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FBD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FCA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FD7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2FE4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3003 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x3010 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x301D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x302A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LT MLOAD GASLIMIT PUSH18 0xD19E56DA615BF2B400BF4610A5E730351793 PC 0xA9 0xB3 PUSH26 0x85F6615164736F6C634300081C0033A26469706673582212209E PUSH24 0x2AA83A5D21FEFC847FF87704CBB5176491BE247FF6F79AEC EQ EXTCODESIZE JUMP BYTE DUP3 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"211:2419:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2131:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;411:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:748:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2489:139:24;2531:7;2572:1;2557:12;;:16;;;;:::i;:::-;2550:23;;2489:139;:::o;2131:241::-;1531:13:2;:11;:13::i;:::-;2247:10:24::1;2219:55;;;2275:6;2219:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2292:14;:22;2307:6;2292:22;;;;;;;;;;;;;;;2320:10;2292:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:241:::0;;:::o;411:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;488:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1178:748:24:-;1371:7;1390:18;1411:12;;1390:33;;1433:12;;:14;;;;;;;;;:::i;:::-;;;;;;1501:34;1583:10;1607:9;1630:15;1659:16;1689:4;1707:6;1538:185;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1501:222;;1734:18;1763:6;1734:36;;1780:20;:32;1801:10;1780:32;;;;;;;;;;;;;;;1818:10;1780:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:10;1845:46;;;1868:10;1880;1845:46;;;;;;;:::i;:::-;;;;;;;;1909:10;1902:17;;;;;1178:748;;;;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:77:26:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:474::-;1344:6;1352;1401:2;1389:9;1380:7;1376:23;1372:32;1369:119;;;1407:79;;:::i;:::-;1369:119;1527:1;1552:53;1597:7;1588:6;1577:9;1573:22;1552:53;:::i;:::-;1542:63;;1498:117;1654:2;1680:53;1725:7;1716:6;1705:9;1701:22;1680:53;:::i;:::-;1670:63;;1625:118;1276:474;;;;;:::o;1756:122::-;1829:24;1847:5;1829:24;:::i;:::-;1822:5;1819:35;1809:63;;1868:1;1865;1858:12;1809:63;1756:122;:::o;1884:139::-;1930:5;1968:6;1955:20;1946:29;;1984:33;2011:5;1984:33;:::i;:::-;1884:139;;;;:::o;2029:474::-;2097:6;2105;2154:2;2142:9;2133:7;2129:23;2125:32;2122:119;;;2160:79;;:::i;:::-;2122:119;2280:1;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2251:117;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;2029:474;;;;;:::o;2509:118::-;2596:24;2614:5;2596:24;:::i;:::-;2591:3;2584:37;2509:118;;:::o;2633:222::-;2726:4;2764:2;2753:9;2749:18;2741:26;;2777:71;2845:1;2834:9;2830:17;2821:6;2777:71;:::i;:::-;2633:222;;;;:::o;2861:117::-;2970:1;2967;2960:12;2984:117;3093:1;3090;3083:12;3107:102;3148:6;3199:2;3195:7;3190:2;3183:5;3179:14;3175:28;3165:38;;3107:102;;;:::o;3215:180::-;3263:77;3260:1;3253:88;3360:4;3357:1;3350:15;3384:4;3381:1;3374:15;3401:281;3484:27;3506:4;3484:27;:::i;:::-;3476:6;3472:40;3614:6;3602:10;3599:22;3578:18;3566:10;3563:34;3560:62;3557:88;;;3625:18;;:::i;:::-;3557:88;3665:10;3661:2;3654:22;3444:238;3401:281;;:::o;3688:129::-;3722:6;3749:20;;:::i;:::-;3739:30;;3778:33;3806:4;3798:6;3778:33;:::i;:::-;3688:129;;;:::o;3823:308::-;3885:4;3975:18;3967:6;3964:30;3961:56;;;3997:18;;:::i;:::-;3961:56;4035:29;4057:6;4035:29;:::i;:::-;4027:37;;4119:4;4113;4109:15;4101:23;;3823:308;;;:::o;4137:148::-;4235:6;4230:3;4225;4212:30;4276:1;4267:6;4262:3;4258:16;4251:27;4137:148;;;:::o;4291:425::-;4369:5;4394:66;4410:49;4452:6;4410:49;:::i;:::-;4394:66;:::i;:::-;4385:75;;4483:6;4476:5;4469:21;4521:4;4514:5;4510:16;4559:3;4550:6;4545:3;4541:16;4538:25;4535:112;;;4566:79;;:::i;:::-;4535:112;4656:54;4703:6;4698:3;4693;4656:54;:::i;:::-;4375:341;4291:425;;;;;:::o;4736:340::-;4792:5;4841:3;4834:4;4826:6;4822:17;4818:27;4808:122;;4849:79;;:::i;:::-;4808:122;4966:6;4953:20;4991:79;5066:3;5058:6;5051:4;5043:6;5039:17;4991:79;:::i;:::-;4982:88;;4798:278;4736:340;;;;:::o;5082:1271::-;5197:6;5205;5213;5221;5229;5278:3;5266:9;5257:7;5253:23;5249:33;5246:120;;;5285:79;;:::i;:::-;5246:120;5405:1;5430:53;5475:7;5466:6;5455:9;5451:22;5430:53;:::i;:::-;5420:63;;5376:117;5532:2;5558:53;5603:7;5594:6;5583:9;5579:22;5558:53;:::i;:::-;5548:63;;5503:118;5660:2;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;:::i;:::-;5676:63;;5631:118;5816:2;5805:9;5801:18;5788:32;5847:18;5839:6;5836:30;5833:117;;;5869:79;;:::i;:::-;5833:117;5974:63;6029:7;6020:6;6009:9;6005:22;5974:63;:::i;:::-;5964:73;;5759:288;6114:3;6103:9;6099:19;6086:33;6146:18;6138:6;6135:30;6132:117;;;6168:79;;:::i;:::-;6132:117;6273:63;6328:7;6319:6;6308:9;6304:22;6273:63;:::i;:::-;6263:73;;6057:289;5082:1271;;;;;;;;:::o;6359:329::-;6418:6;6467:2;6455:9;6446:7;6442:23;6438:32;6435:119;;;6473:79;;:::i;:::-;6435:119;6593:1;6618:53;6663:7;6654:6;6643:9;6639:22;6618:53;:::i;:::-;6608:63;;6564:117;6359:329;;;;:::o;6694:180::-;6742:77;6739:1;6732:88;6839:4;6836:1;6829:15;6863:4;6860:1;6853:15;6880:194;6920:4;6940:20;6958:1;6940:20;:::i;:::-;6935:25;;6974:20;6992:1;6974:20;:::i;:::-;6969:25;;7018:1;7015;7011:9;7003:17;;7042:1;7036:4;7033:11;7030:37;;;7047:18;;:::i;:::-;7030:37;6880:194;;;;:::o;7080:233::-;7119:3;7142:24;7160:5;7142:24;:::i;:::-;7133:33;;7188:66;7181:5;7178:77;7175:103;;7258:18;;:::i;:::-;7175:103;7305:1;7298:5;7294:13;7287:20;;7080:233;;;:::o;7319:99::-;7371:6;7405:5;7399:12;7389:22;;7319:99;;;:::o;7424:169::-;7508:11;7542:6;7537:3;7530:19;7582:4;7577:3;7573:14;7558:29;;7424:169;;;;:::o;7599:248::-;7681:1;7691:113;7705:6;7702:1;7699:13;7691:113;;;7790:1;7785:3;7781:11;7775:18;7771:1;7766:3;7762:11;7755:39;7727:2;7724:1;7720:10;7715:15;;7691:113;;;7838:1;7829:6;7824:3;7820:16;7813:27;7661:186;7599:248;;;:::o;7853:377::-;7941:3;7969:39;8002:5;7969:39;:::i;:::-;8024:71;8088:6;8083:3;8024:71;:::i;:::-;8017:78;;8104:65;8162:6;8157:3;8150:4;8143:5;8139:16;8104:65;:::i;:::-;8194:29;8216:6;8194:29;:::i;:::-;8189:3;8185:39;8178:46;;7945:285;7853:377;;;;:::o;8236:957::-;8509:4;8547:3;8536:9;8532:19;8524:27;;8561:71;8629:1;8618:9;8614:17;8605:6;8561:71;:::i;:::-;8642:72;8710:2;8699:9;8695:18;8686:6;8642:72;:::i;:::-;8724;8792:2;8781:9;8777:18;8768:6;8724:72;:::i;:::-;8806;8874:2;8863:9;8859:18;8850:6;8806:72;:::i;:::-;8926:9;8920:4;8916:20;8910:3;8899:9;8895:19;8888:49;8954:78;9027:4;9018:6;8954:78;:::i;:::-;8946:86;;9080:9;9074:4;9070:20;9064:3;9053:9;9049:19;9042:49;9108:78;9181:4;9172:6;9108:78;:::i;:::-;9100:86;;8236:957;;;;;;;;;:::o;9199:332::-;9320:4;9358:2;9347:9;9343:18;9335:26;;9371:71;9439:1;9428:9;9424:17;9415:6;9371:71;:::i;:::-;9452:72;9520:2;9509:9;9505:18;9496:6;9452:72;:::i;:::-;9199:332;;;;;:::o"},"methodIdentifiers":{"administerableTokens(address,uint256)":"3385ab9c","createCAT(uint256,uint256,uint256,string,string)":"c76fdf68","grantMinterRole(address,address)":"25c71938","mintableTokens(address,uint256)":"387e8311","owner()":"8da5cb5b","renounceOwnership()":"715018a6","totalCATs()":"247db5dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"catAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CATCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"administerableTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExpansionRate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createCAT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"catAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintableTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCATs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createCAT(uint256,uint256,uint256,string,string)\":{\"details\":\"Creates a new CAT contract and assigns it to the caller.\",\"params\":{\"maxExpansionRate\":\"The maximum expansion rate for the new CAT.\",\"maxSupply\":\"The maximum supply for the new CAT.\",\"name\":\"The name of the CAT token.\",\"symbol\":\"The symbol of the CAT token.\",\"thresholdSupply\":\"The threshold supply for the new CAT.\"},\"returns\":{\"_0\":\"The address of the newly created CAT contract.\"}},\"grantMinterRole(address,address)\":{\"details\":\"Grants minter role to an address in the CAT contract.\",\"params\":{\"catAddress\":\"The address of the CAT contract.\",\"minter\":\"The address to grant the minter role.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"totalCATs()\":{\"details\":\"Returns the total number of CATs created.\",\"returns\":{\"_0\":\"The total number of CATs.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CATFactory.sol\":\"CATFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CATFactory.sol\":{\"keccak256\":\"0x42924faa509df4f6464b06f2a850083c31d54fc002c234fd42c1c589a2ca536c\",\"license\":\"AEL\",\"urls\":[\"bzz-raw://1f5dd1f7fd5d6f7096e7b0fb3acde14286ae9e17237fd3dff665b4b55bd00ab4\",\"dweb:/ipfs/QmQ99eXFUpk8ozf2XG1iqN8W5ShQs7JuLP7H6dKLKLUgNW\"]},\"contracts/ContributionAccountingToken.sol\":{\"keccak256\":\"0xe9a9f746be738f74f5e2958534fdf563bf017304ffa10d2b518a9650638793f6\",\"license\":\"AEL\",\"urls\":[\"bzz-raw://dcec763f8832e8214e89ab67434f92fbca8eda7f5fbfb13eb7516f0bc243cce4\",\"dweb:/ipfs/QmdkGCk94aX64nhzvUNi1Y4yfACK58hjsHL7iBcpyM1uQR\"]}},\"version\":1}"}},"contracts/ContributionAccountingToken.sol":{"ContributionAccountingToken":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_thresholdSupply","type":"uint256"},{"internalType":"uint256","name":"_maxExpansionRate","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clowderFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clowderTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disableTransferRestriction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantMinterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastMintTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxExpansionRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxExpansionRate","type":"uint256"}],"name":"reduceMaxExpansionRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxSupply","type":"uint256"}],"name":"reduceMaxSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newThresholdSupply","type":"uint256"}],"name":"reduceThresholdSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"revokeMinterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"thresholdSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferRestricted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1330":{"entryPoint":null,"id":1330,"parameterSlots":1,"returnSlots":0},"@_2753":{"entryPoint":null,"id":2753,"parameterSlots":2,"returnSlots":0},"@_6743":{"entryPoint":null,"id":6743,"parameterSlots":6,"returnSlots":0},"@_740":{"entryPoint":null,"id":740,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_2800":{"entryPoint":633,"id":2800,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":724,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1509":{"entryPoint":1199,"id":1509,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1965":{"entryPoint":1082,"id":1965,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":1092,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_1805":{"entryPoint":553,"id":1805,"parameterSlots":2,"returnSlots":1},"@toShortString_1707":{"entryPoint":978,"id":1707,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1616,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1728,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2710,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2680,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2725,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2882,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1498,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1207,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1525,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2927,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2916,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1925,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2808,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2319,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1259,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2670,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1321,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2284,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2964,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2174,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2460,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1574,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2053,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2432,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1449,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2164,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2402,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1936,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1402,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2208,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2943,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1375,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1380,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1222,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1217,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2069,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2389,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2260,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2082,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2218,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1277,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1331,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2255,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12979:26","nodeType":"YulBlock","src":"0:12979:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"611:79:26","nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nativeSrc":"668:16:26","nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:26","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:26","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:26","nodeType":"YulIdentifier","src":"670:6:26"},"nativeSrc":"670:12:26","nodeType":"YulFunctionCall","src":"670:12:26"},"nativeSrc":"670:12:26","nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:26","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nativeSrc":"659:5:26","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:26","nodeType":"YulIdentifier","src":"641:17:26"},"nativeSrc":"641:24:26","nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nativeSrc":"631:2:26","nodeType":"YulIdentifier","src":"631:2:26"},"nativeSrc":"631:35:26","nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nativeSrc":"624:6:26","nodeType":"YulIdentifier","src":"624:6:26"},"nativeSrc":"624:43:26","nodeType":"YulFunctionCall","src":"624:43:26"},"nativeSrc":"621:63:26","nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:26","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nativeSrc":"759:80:26","nodeType":"YulBlock","src":"759:80:26","statements":[{"nativeSrc":"769:22:26","nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:26","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nativeSrc":"778:5:26","nodeType":"YulIdentifier","src":"778:5:26"},"nativeSrc":"778:13:26","nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nativeSrc":"769:5:26","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:26","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:26","nodeType":"YulIdentifier","src":"800:26:26"},"nativeSrc":"800:33:26","nodeType":"YulFunctionCall","src":"800:33:26"},"nativeSrc":"800:33:26","nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:26","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nativeSrc":"745:3:26","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:26","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nativeSrc":"890:32:26","nodeType":"YulBlock","src":"890:32:26","statements":[{"nativeSrc":"900:16:26","nodeType":"YulAssignment","src":"900:16:26","value":{"name":"value","nativeSrc":"911:5:26","nodeType":"YulIdentifier","src":"911:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"900:7:26","nodeType":"YulIdentifier","src":"900:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"845:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"872:5:26","nodeType":"YulTypedName","src":"872:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"882:7:26","nodeType":"YulTypedName","src":"882:7:26","type":""}],"src":"845:77:26"},{"body":{"nativeSrc":"971:79:26","nodeType":"YulBlock","src":"971:79:26","statements":[{"body":{"nativeSrc":"1028:16:26","nodeType":"YulBlock","src":"1028:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:26","nodeType":"YulLiteral","src":"1037:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:26","nodeType":"YulLiteral","src":"1040:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:26","nodeType":"YulIdentifier","src":"1030:6:26"},"nativeSrc":"1030:12:26","nodeType":"YulFunctionCall","src":"1030:12:26"},"nativeSrc":"1030:12:26","nodeType":"YulExpressionStatement","src":"1030:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:26","nodeType":"YulIdentifier","src":"994:5:26"},{"arguments":[{"name":"value","nativeSrc":"1019:5:26","nodeType":"YulIdentifier","src":"1019:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1001:17:26","nodeType":"YulIdentifier","src":"1001:17:26"},"nativeSrc":"1001:24:26","nodeType":"YulFunctionCall","src":"1001:24:26"}],"functionName":{"name":"eq","nativeSrc":"991:2:26","nodeType":"YulIdentifier","src":"991:2:26"},"nativeSrc":"991:35:26","nodeType":"YulFunctionCall","src":"991:35:26"}],"functionName":{"name":"iszero","nativeSrc":"984:6:26","nodeType":"YulIdentifier","src":"984:6:26"},"nativeSrc":"984:43:26","nodeType":"YulFunctionCall","src":"984:43:26"},"nativeSrc":"981:63:26","nodeType":"YulIf","src":"981:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"928:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:26","nodeType":"YulTypedName","src":"964:5:26","type":""}],"src":"928:122:26"},{"body":{"nativeSrc":"1119:80:26","nodeType":"YulBlock","src":"1119:80:26","statements":[{"nativeSrc":"1129:22:26","nodeType":"YulAssignment","src":"1129:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:26","nodeType":"YulIdentifier","src":"1144:6:26"}],"functionName":{"name":"mload","nativeSrc":"1138:5:26","nodeType":"YulIdentifier","src":"1138:5:26"},"nativeSrc":"1138:13:26","nodeType":"YulFunctionCall","src":"1138:13:26"},"variableNames":[{"name":"value","nativeSrc":"1129:5:26","nodeType":"YulIdentifier","src":"1129:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:26","nodeType":"YulIdentifier","src":"1187:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1160:26:26","nodeType":"YulIdentifier","src":"1160:26:26"},"nativeSrc":"1160:33:26","nodeType":"YulFunctionCall","src":"1160:33:26"},"nativeSrc":"1160:33:26","nodeType":"YulExpressionStatement","src":"1160:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1056:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:26","nodeType":"YulTypedName","src":"1097:6:26","type":""},{"name":"end","nativeSrc":"1105:3:26","nodeType":"YulTypedName","src":"1105:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:26","nodeType":"YulTypedName","src":"1113:5:26","type":""}],"src":"1056:143:26"},{"body":{"nativeSrc":"1294:28:26","nodeType":"YulBlock","src":"1294:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1311:1:26","nodeType":"YulLiteral","src":"1311:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1314:1:26","nodeType":"YulLiteral","src":"1314:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1304:6:26","nodeType":"YulIdentifier","src":"1304:6:26"},"nativeSrc":"1304:12:26","nodeType":"YulFunctionCall","src":"1304:12:26"},"nativeSrc":"1304:12:26","nodeType":"YulExpressionStatement","src":"1304:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1205:117:26","nodeType":"YulFunctionDefinition","src":"1205:117:26"},{"body":{"nativeSrc":"1417:28:26","nodeType":"YulBlock","src":"1417:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1434:1:26","nodeType":"YulLiteral","src":"1434:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1437:1:26","nodeType":"YulLiteral","src":"1437:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1427:6:26","nodeType":"YulIdentifier","src":"1427:6:26"},"nativeSrc":"1427:12:26","nodeType":"YulFunctionCall","src":"1427:12:26"},"nativeSrc":"1427:12:26","nodeType":"YulExpressionStatement","src":"1427:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"1328:117:26","nodeType":"YulFunctionDefinition","src":"1328:117:26"},{"body":{"nativeSrc":"1499:54:26","nodeType":"YulBlock","src":"1499:54:26","statements":[{"nativeSrc":"1509:38:26","nodeType":"YulAssignment","src":"1509:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1527:5:26","nodeType":"YulIdentifier","src":"1527:5:26"},{"kind":"number","nativeSrc":"1534:2:26","nodeType":"YulLiteral","src":"1534:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1523:3:26","nodeType":"YulIdentifier","src":"1523:3:26"},"nativeSrc":"1523:14:26","nodeType":"YulFunctionCall","src":"1523:14:26"},{"arguments":[{"kind":"number","nativeSrc":"1543:2:26","nodeType":"YulLiteral","src":"1543:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1539:3:26","nodeType":"YulIdentifier","src":"1539:3:26"},"nativeSrc":"1539:7:26","nodeType":"YulFunctionCall","src":"1539:7:26"}],"functionName":{"name":"and","nativeSrc":"1519:3:26","nodeType":"YulIdentifier","src":"1519:3:26"},"nativeSrc":"1519:28:26","nodeType":"YulFunctionCall","src":"1519:28:26"},"variableNames":[{"name":"result","nativeSrc":"1509:6:26","nodeType":"YulIdentifier","src":"1509:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1451:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1482:5:26","nodeType":"YulTypedName","src":"1482:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1492:6:26","nodeType":"YulTypedName","src":"1492:6:26","type":""}],"src":"1451:102:26"},{"body":{"nativeSrc":"1587:152:26","nodeType":"YulBlock","src":"1587:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1604:1:26","nodeType":"YulLiteral","src":"1604:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1607:77:26","nodeType":"YulLiteral","src":"1607:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1597:6:26","nodeType":"YulIdentifier","src":"1597:6:26"},"nativeSrc":"1597:88:26","nodeType":"YulFunctionCall","src":"1597:88:26"},"nativeSrc":"1597:88:26","nodeType":"YulExpressionStatement","src":"1597:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1701:1:26","nodeType":"YulLiteral","src":"1701:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"1704:4:26","nodeType":"YulLiteral","src":"1704:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1694:6:26","nodeType":"YulIdentifier","src":"1694:6:26"},"nativeSrc":"1694:15:26","nodeType":"YulFunctionCall","src":"1694:15:26"},"nativeSrc":"1694:15:26","nodeType":"YulExpressionStatement","src":"1694:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1725:1:26","nodeType":"YulLiteral","src":"1725:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1728:4:26","nodeType":"YulLiteral","src":"1728:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1718:6:26","nodeType":"YulIdentifier","src":"1718:6:26"},"nativeSrc":"1718:15:26","nodeType":"YulFunctionCall","src":"1718:15:26"},"nativeSrc":"1718:15:26","nodeType":"YulExpressionStatement","src":"1718:15:26"}]},"name":"panic_error_0x41","nativeSrc":"1559:180:26","nodeType":"YulFunctionDefinition","src":"1559:180:26"},{"body":{"nativeSrc":"1788:238:26","nodeType":"YulBlock","src":"1788:238:26","statements":[{"nativeSrc":"1798:58:26","nodeType":"YulVariableDeclaration","src":"1798:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"1820:6:26","nodeType":"YulIdentifier","src":"1820:6:26"},{"arguments":[{"name":"size","nativeSrc":"1850:4:26","nodeType":"YulIdentifier","src":"1850:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1828:21:26","nodeType":"YulIdentifier","src":"1828:21:26"},"nativeSrc":"1828:27:26","nodeType":"YulFunctionCall","src":"1828:27:26"}],"functionName":{"name":"add","nativeSrc":"1816:3:26","nodeType":"YulIdentifier","src":"1816:3:26"},"nativeSrc":"1816:40:26","nodeType":"YulFunctionCall","src":"1816:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"1802:10:26","nodeType":"YulTypedName","src":"1802:10:26","type":""}]},{"body":{"nativeSrc":"1967:22:26","nodeType":"YulBlock","src":"1967:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1969:16:26","nodeType":"YulIdentifier","src":"1969:16:26"},"nativeSrc":"1969:18:26","nodeType":"YulFunctionCall","src":"1969:18:26"},"nativeSrc":"1969:18:26","nodeType":"YulExpressionStatement","src":"1969:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1910:10:26","nodeType":"YulIdentifier","src":"1910:10:26"},{"kind":"number","nativeSrc":"1922:18:26","nodeType":"YulLiteral","src":"1922:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1907:2:26","nodeType":"YulIdentifier","src":"1907:2:26"},"nativeSrc":"1907:34:26","nodeType":"YulFunctionCall","src":"1907:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1946:10:26","nodeType":"YulIdentifier","src":"1946:10:26"},{"name":"memPtr","nativeSrc":"1958:6:26","nodeType":"YulIdentifier","src":"1958:6:26"}],"functionName":{"name":"lt","nativeSrc":"1943:2:26","nodeType":"YulIdentifier","src":"1943:2:26"},"nativeSrc":"1943:22:26","nodeType":"YulFunctionCall","src":"1943:22:26"}],"functionName":{"name":"or","nativeSrc":"1904:2:26","nodeType":"YulIdentifier","src":"1904:2:26"},"nativeSrc":"1904:62:26","nodeType":"YulFunctionCall","src":"1904:62:26"},"nativeSrc":"1901:88:26","nodeType":"YulIf","src":"1901:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2005:2:26","nodeType":"YulLiteral","src":"2005:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2009:10:26","nodeType":"YulIdentifier","src":"2009:10:26"}],"functionName":{"name":"mstore","nativeSrc":"1998:6:26","nodeType":"YulIdentifier","src":"1998:6:26"},"nativeSrc":"1998:22:26","nodeType":"YulFunctionCall","src":"1998:22:26"},"nativeSrc":"1998:22:26","nodeType":"YulExpressionStatement","src":"1998:22:26"}]},"name":"finalize_allocation","nativeSrc":"1745:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1774:6:26","nodeType":"YulTypedName","src":"1774:6:26","type":""},{"name":"size","nativeSrc":"1782:4:26","nodeType":"YulTypedName","src":"1782:4:26","type":""}],"src":"1745:281:26"},{"body":{"nativeSrc":"2073:88:26","nodeType":"YulBlock","src":"2073:88:26","statements":[{"nativeSrc":"2083:30:26","nodeType":"YulAssignment","src":"2083:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2093:18:26","nodeType":"YulIdentifier","src":"2093:18:26"},"nativeSrc":"2093:20:26","nodeType":"YulFunctionCall","src":"2093:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"2083:6:26","nodeType":"YulIdentifier","src":"2083:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2142:6:26","nodeType":"YulIdentifier","src":"2142:6:26"},{"name":"size","nativeSrc":"2150:4:26","nodeType":"YulIdentifier","src":"2150:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2122:19:26","nodeType":"YulIdentifier","src":"2122:19:26"},"nativeSrc":"2122:33:26","nodeType":"YulFunctionCall","src":"2122:33:26"},"nativeSrc":"2122:33:26","nodeType":"YulExpressionStatement","src":"2122:33:26"}]},"name":"allocate_memory","nativeSrc":"2032:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2057:4:26","nodeType":"YulTypedName","src":"2057:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2066:6:26","nodeType":"YulTypedName","src":"2066:6:26","type":""}],"src":"2032:129:26"},{"body":{"nativeSrc":"2234:241:26","nodeType":"YulBlock","src":"2234:241:26","statements":[{"body":{"nativeSrc":"2339:22:26","nodeType":"YulBlock","src":"2339:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2341:16:26","nodeType":"YulIdentifier","src":"2341:16:26"},"nativeSrc":"2341:18:26","nodeType":"YulFunctionCall","src":"2341:18:26"},"nativeSrc":"2341:18:26","nodeType":"YulExpressionStatement","src":"2341:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2311:6:26","nodeType":"YulIdentifier","src":"2311:6:26"},{"kind":"number","nativeSrc":"2319:18:26","nodeType":"YulLiteral","src":"2319:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2308:2:26","nodeType":"YulIdentifier","src":"2308:2:26"},"nativeSrc":"2308:30:26","nodeType":"YulFunctionCall","src":"2308:30:26"},"nativeSrc":"2305:56:26","nodeType":"YulIf","src":"2305:56:26"},{"nativeSrc":"2371:37:26","nodeType":"YulAssignment","src":"2371:37:26","value":{"arguments":[{"name":"length","nativeSrc":"2401:6:26","nodeType":"YulIdentifier","src":"2401:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2379:21:26","nodeType":"YulIdentifier","src":"2379:21:26"},"nativeSrc":"2379:29:26","nodeType":"YulFunctionCall","src":"2379:29:26"},"variableNames":[{"name":"size","nativeSrc":"2371:4:26","nodeType":"YulIdentifier","src":"2371:4:26"}]},{"nativeSrc":"2445:23:26","nodeType":"YulAssignment","src":"2445:23:26","value":{"arguments":[{"name":"size","nativeSrc":"2457:4:26","nodeType":"YulIdentifier","src":"2457:4:26"},{"kind":"number","nativeSrc":"2463:4:26","nodeType":"YulLiteral","src":"2463:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2453:3:26","nodeType":"YulIdentifier","src":"2453:3:26"},"nativeSrc":"2453:15:26","nodeType":"YulFunctionCall","src":"2453:15:26"},"variableNames":[{"name":"size","nativeSrc":"2445:4:26","nodeType":"YulIdentifier","src":"2445:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2167:308:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2218:6:26","nodeType":"YulTypedName","src":"2218:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2229:4:26","nodeType":"YulTypedName","src":"2229:4:26","type":""}],"src":"2167:308:26"},{"body":{"nativeSrc":"2543:186:26","nodeType":"YulBlock","src":"2543:186:26","statements":[{"nativeSrc":"2554:10:26","nodeType":"YulVariableDeclaration","src":"2554:10:26","value":{"kind":"number","nativeSrc":"2563:1:26","nodeType":"YulLiteral","src":"2563:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2558:1:26","nodeType":"YulTypedName","src":"2558:1:26","type":""}]},{"body":{"nativeSrc":"2623:63:26","nodeType":"YulBlock","src":"2623:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2648:3:26","nodeType":"YulIdentifier","src":"2648:3:26"},{"name":"i","nativeSrc":"2653:1:26","nodeType":"YulIdentifier","src":"2653:1:26"}],"functionName":{"name":"add","nativeSrc":"2644:3:26","nodeType":"YulIdentifier","src":"2644:3:26"},"nativeSrc":"2644:11:26","nodeType":"YulFunctionCall","src":"2644:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2667:3:26","nodeType":"YulIdentifier","src":"2667:3:26"},{"name":"i","nativeSrc":"2672:1:26","nodeType":"YulIdentifier","src":"2672:1:26"}],"functionName":{"name":"add","nativeSrc":"2663:3:26","nodeType":"YulIdentifier","src":"2663:3:26"},"nativeSrc":"2663:11:26","nodeType":"YulFunctionCall","src":"2663:11:26"}],"functionName":{"name":"mload","nativeSrc":"2657:5:26","nodeType":"YulIdentifier","src":"2657:5:26"},"nativeSrc":"2657:18:26","nodeType":"YulFunctionCall","src":"2657:18:26"}],"functionName":{"name":"mstore","nativeSrc":"2637:6:26","nodeType":"YulIdentifier","src":"2637:6:26"},"nativeSrc":"2637:39:26","nodeType":"YulFunctionCall","src":"2637:39:26"},"nativeSrc":"2637:39:26","nodeType":"YulExpressionStatement","src":"2637:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2584:1:26","nodeType":"YulIdentifier","src":"2584:1:26"},{"name":"length","nativeSrc":"2587:6:26","nodeType":"YulIdentifier","src":"2587:6:26"}],"functionName":{"name":"lt","nativeSrc":"2581:2:26","nodeType":"YulIdentifier","src":"2581:2:26"},"nativeSrc":"2581:13:26","nodeType":"YulFunctionCall","src":"2581:13:26"},"nativeSrc":"2573:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"2595:19:26","nodeType":"YulBlock","src":"2595:19:26","statements":[{"nativeSrc":"2597:15:26","nodeType":"YulAssignment","src":"2597:15:26","value":{"arguments":[{"name":"i","nativeSrc":"2606:1:26","nodeType":"YulIdentifier","src":"2606:1:26"},{"kind":"number","nativeSrc":"2609:2:26","nodeType":"YulLiteral","src":"2609:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2602:3:26","nodeType":"YulIdentifier","src":"2602:3:26"},"nativeSrc":"2602:10:26","nodeType":"YulFunctionCall","src":"2602:10:26"},"variableNames":[{"name":"i","nativeSrc":"2597:1:26","nodeType":"YulIdentifier","src":"2597:1:26"}]}]},"pre":{"nativeSrc":"2577:3:26","nodeType":"YulBlock","src":"2577:3:26","statements":[]},"src":"2573:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2706:3:26","nodeType":"YulIdentifier","src":"2706:3:26"},{"name":"length","nativeSrc":"2711:6:26","nodeType":"YulIdentifier","src":"2711:6:26"}],"functionName":{"name":"add","nativeSrc":"2702:3:26","nodeType":"YulIdentifier","src":"2702:3:26"},"nativeSrc":"2702:16:26","nodeType":"YulFunctionCall","src":"2702:16:26"},{"kind":"number","nativeSrc":"2720:1:26","nodeType":"YulLiteral","src":"2720:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2695:6:26","nodeType":"YulIdentifier","src":"2695:6:26"},"nativeSrc":"2695:27:26","nodeType":"YulFunctionCall","src":"2695:27:26"},"nativeSrc":"2695:27:26","nodeType":"YulExpressionStatement","src":"2695:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2481:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2525:3:26","nodeType":"YulTypedName","src":"2525:3:26","type":""},{"name":"dst","nativeSrc":"2530:3:26","nodeType":"YulTypedName","src":"2530:3:26","type":""},{"name":"length","nativeSrc":"2535:6:26","nodeType":"YulTypedName","src":"2535:6:26","type":""}],"src":"2481:248:26"},{"body":{"nativeSrc":"2830:339:26","nodeType":"YulBlock","src":"2830:339:26","statements":[{"nativeSrc":"2840:75:26","nodeType":"YulAssignment","src":"2840:75:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2907:6:26","nodeType":"YulIdentifier","src":"2907:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2865:41:26","nodeType":"YulIdentifier","src":"2865:41:26"},"nativeSrc":"2865:49:26","nodeType":"YulFunctionCall","src":"2865:49:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"2849:15:26","nodeType":"YulIdentifier","src":"2849:15:26"},"nativeSrc":"2849:66:26","nodeType":"YulFunctionCall","src":"2849:66:26"},"variableNames":[{"name":"array","nativeSrc":"2840:5:26","nodeType":"YulIdentifier","src":"2840:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2931:5:26","nodeType":"YulIdentifier","src":"2931:5:26"},{"name":"length","nativeSrc":"2938:6:26","nodeType":"YulIdentifier","src":"2938:6:26"}],"functionName":{"name":"mstore","nativeSrc":"2924:6:26","nodeType":"YulIdentifier","src":"2924:6:26"},"nativeSrc":"2924:21:26","nodeType":"YulFunctionCall","src":"2924:21:26"},"nativeSrc":"2924:21:26","nodeType":"YulExpressionStatement","src":"2924:21:26"},{"nativeSrc":"2954:27:26","nodeType":"YulVariableDeclaration","src":"2954:27:26","value":{"arguments":[{"name":"array","nativeSrc":"2969:5:26","nodeType":"YulIdentifier","src":"2969:5:26"},{"kind":"number","nativeSrc":"2976:4:26","nodeType":"YulLiteral","src":"2976:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2965:3:26","nodeType":"YulIdentifier","src":"2965:3:26"},"nativeSrc":"2965:16:26","nodeType":"YulFunctionCall","src":"2965:16:26"},"variables":[{"name":"dst","nativeSrc":"2958:3:26","nodeType":"YulTypedName","src":"2958:3:26","type":""}]},{"body":{"nativeSrc":"3019:83:26","nodeType":"YulBlock","src":"3019:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3021:77:26","nodeType":"YulIdentifier","src":"3021:77:26"},"nativeSrc":"3021:79:26","nodeType":"YulFunctionCall","src":"3021:79:26"},"nativeSrc":"3021:79:26","nodeType":"YulExpressionStatement","src":"3021:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3000:3:26","nodeType":"YulIdentifier","src":"3000:3:26"},{"name":"length","nativeSrc":"3005:6:26","nodeType":"YulIdentifier","src":"3005:6:26"}],"functionName":{"name":"add","nativeSrc":"2996:3:26","nodeType":"YulIdentifier","src":"2996:3:26"},"nativeSrc":"2996:16:26","nodeType":"YulFunctionCall","src":"2996:16:26"},{"name":"end","nativeSrc":"3014:3:26","nodeType":"YulIdentifier","src":"3014:3:26"}],"functionName":{"name":"gt","nativeSrc":"2993:2:26","nodeType":"YulIdentifier","src":"2993:2:26"},"nativeSrc":"2993:25:26","nodeType":"YulFunctionCall","src":"2993:25:26"},"nativeSrc":"2990:112:26","nodeType":"YulIf","src":"2990:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"3146:3:26","nodeType":"YulIdentifier","src":"3146:3:26"},{"name":"dst","nativeSrc":"3151:3:26","nodeType":"YulIdentifier","src":"3151:3:26"},{"name":"length","nativeSrc":"3156:6:26","nodeType":"YulIdentifier","src":"3156:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3111:34:26","nodeType":"YulIdentifier","src":"3111:34:26"},"nativeSrc":"3111:52:26","nodeType":"YulFunctionCall","src":"3111:52:26"},"nativeSrc":"3111:52:26","nodeType":"YulExpressionStatement","src":"3111:52:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2735:434:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2803:3:26","nodeType":"YulTypedName","src":"2803:3:26","type":""},{"name":"length","nativeSrc":"2808:6:26","nodeType":"YulTypedName","src":"2808:6:26","type":""},{"name":"end","nativeSrc":"2816:3:26","nodeType":"YulTypedName","src":"2816:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2824:5:26","nodeType":"YulTypedName","src":"2824:5:26","type":""}],"src":"2735:434:26"},{"body":{"nativeSrc":"3262:282:26","nodeType":"YulBlock","src":"3262:282:26","statements":[{"body":{"nativeSrc":"3311:83:26","nodeType":"YulBlock","src":"3311:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3313:77:26","nodeType":"YulIdentifier","src":"3313:77:26"},"nativeSrc":"3313:79:26","nodeType":"YulFunctionCall","src":"3313:79:26"},"nativeSrc":"3313:79:26","nodeType":"YulExpressionStatement","src":"3313:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3290:6:26","nodeType":"YulIdentifier","src":"3290:6:26"},{"kind":"number","nativeSrc":"3298:4:26","nodeType":"YulLiteral","src":"3298:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3286:3:26","nodeType":"YulIdentifier","src":"3286:3:26"},"nativeSrc":"3286:17:26","nodeType":"YulFunctionCall","src":"3286:17:26"},{"name":"end","nativeSrc":"3305:3:26","nodeType":"YulIdentifier","src":"3305:3:26"}],"functionName":{"name":"slt","nativeSrc":"3282:3:26","nodeType":"YulIdentifier","src":"3282:3:26"},"nativeSrc":"3282:27:26","nodeType":"YulFunctionCall","src":"3282:27:26"}],"functionName":{"name":"iszero","nativeSrc":"3275:6:26","nodeType":"YulIdentifier","src":"3275:6:26"},"nativeSrc":"3275:35:26","nodeType":"YulFunctionCall","src":"3275:35:26"},"nativeSrc":"3272:122:26","nodeType":"YulIf","src":"3272:122:26"},{"nativeSrc":"3403:27:26","nodeType":"YulVariableDeclaration","src":"3403:27:26","value":{"arguments":[{"name":"offset","nativeSrc":"3423:6:26","nodeType":"YulIdentifier","src":"3423:6:26"}],"functionName":{"name":"mload","nativeSrc":"3417:5:26","nodeType":"YulIdentifier","src":"3417:5:26"},"nativeSrc":"3417:13:26","nodeType":"YulFunctionCall","src":"3417:13:26"},"variables":[{"name":"length","nativeSrc":"3407:6:26","nodeType":"YulTypedName","src":"3407:6:26","type":""}]},{"nativeSrc":"3439:99:26","nodeType":"YulAssignment","src":"3439:99:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3511:6:26","nodeType":"YulIdentifier","src":"3511:6:26"},{"kind":"number","nativeSrc":"3519:4:26","nodeType":"YulLiteral","src":"3519:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3507:3:26","nodeType":"YulIdentifier","src":"3507:3:26"},"nativeSrc":"3507:17:26","nodeType":"YulFunctionCall","src":"3507:17:26"},{"name":"length","nativeSrc":"3526:6:26","nodeType":"YulIdentifier","src":"3526:6:26"},{"name":"end","nativeSrc":"3534:3:26","nodeType":"YulIdentifier","src":"3534:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"3448:58:26","nodeType":"YulIdentifier","src":"3448:58:26"},"nativeSrc":"3448:90:26","nodeType":"YulFunctionCall","src":"3448:90:26"},"variableNames":[{"name":"array","nativeSrc":"3439:5:26","nodeType":"YulIdentifier","src":"3439:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3189:355:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3240:6:26","nodeType":"YulTypedName","src":"3240:6:26","type":""},{"name":"end","nativeSrc":"3248:3:26","nodeType":"YulTypedName","src":"3248:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3256:5:26","nodeType":"YulTypedName","src":"3256:5:26","type":""}],"src":"3189:355:26"},{"body":{"nativeSrc":"3732:1298:26","nodeType":"YulBlock","src":"3732:1298:26","statements":[{"body":{"nativeSrc":"3779:83:26","nodeType":"YulBlock","src":"3779:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3781:77:26","nodeType":"YulIdentifier","src":"3781:77:26"},"nativeSrc":"3781:79:26","nodeType":"YulFunctionCall","src":"3781:79:26"},"nativeSrc":"3781:79:26","nodeType":"YulExpressionStatement","src":"3781:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3753:7:26","nodeType":"YulIdentifier","src":"3753:7:26"},{"name":"headStart","nativeSrc":"3762:9:26","nodeType":"YulIdentifier","src":"3762:9:26"}],"functionName":{"name":"sub","nativeSrc":"3749:3:26","nodeType":"YulIdentifier","src":"3749:3:26"},"nativeSrc":"3749:23:26","nodeType":"YulFunctionCall","src":"3749:23:26"},{"kind":"number","nativeSrc":"3774:3:26","nodeType":"YulLiteral","src":"3774:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"3745:3:26","nodeType":"YulIdentifier","src":"3745:3:26"},"nativeSrc":"3745:33:26","nodeType":"YulFunctionCall","src":"3745:33:26"},"nativeSrc":"3742:120:26","nodeType":"YulIf","src":"3742:120:26"},{"nativeSrc":"3872:128:26","nodeType":"YulBlock","src":"3872:128:26","statements":[{"nativeSrc":"3887:15:26","nodeType":"YulVariableDeclaration","src":"3887:15:26","value":{"kind":"number","nativeSrc":"3901:1:26","nodeType":"YulLiteral","src":"3901:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3891:6:26","nodeType":"YulTypedName","src":"3891:6:26","type":""}]},{"nativeSrc":"3916:74:26","nodeType":"YulAssignment","src":"3916:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3962:9:26","nodeType":"YulIdentifier","src":"3962:9:26"},{"name":"offset","nativeSrc":"3973:6:26","nodeType":"YulIdentifier","src":"3973:6:26"}],"functionName":{"name":"add","nativeSrc":"3958:3:26","nodeType":"YulIdentifier","src":"3958:3:26"},"nativeSrc":"3958:22:26","nodeType":"YulFunctionCall","src":"3958:22:26"},{"name":"dataEnd","nativeSrc":"3982:7:26","nodeType":"YulIdentifier","src":"3982:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"3926:31:26","nodeType":"YulIdentifier","src":"3926:31:26"},"nativeSrc":"3926:64:26","nodeType":"YulFunctionCall","src":"3926:64:26"},"variableNames":[{"name":"value0","nativeSrc":"3916:6:26","nodeType":"YulIdentifier","src":"3916:6:26"}]}]},{"nativeSrc":"4010:129:26","nodeType":"YulBlock","src":"4010:129:26","statements":[{"nativeSrc":"4025:16:26","nodeType":"YulVariableDeclaration","src":"4025:16:26","value":{"kind":"number","nativeSrc":"4039:2:26","nodeType":"YulLiteral","src":"4039:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4029:6:26","nodeType":"YulTypedName","src":"4029:6:26","type":""}]},{"nativeSrc":"4055:74:26","nodeType":"YulAssignment","src":"4055:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4101:9:26","nodeType":"YulIdentifier","src":"4101:9:26"},{"name":"offset","nativeSrc":"4112:6:26","nodeType":"YulIdentifier","src":"4112:6:26"}],"functionName":{"name":"add","nativeSrc":"4097:3:26","nodeType":"YulIdentifier","src":"4097:3:26"},"nativeSrc":"4097:22:26","nodeType":"YulFunctionCall","src":"4097:22:26"},{"name":"dataEnd","nativeSrc":"4121:7:26","nodeType":"YulIdentifier","src":"4121:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4065:31:26","nodeType":"YulIdentifier","src":"4065:31:26"},"nativeSrc":"4065:64:26","nodeType":"YulFunctionCall","src":"4065:64:26"},"variableNames":[{"name":"value1","nativeSrc":"4055:6:26","nodeType":"YulIdentifier","src":"4055:6:26"}]}]},{"nativeSrc":"4149:129:26","nodeType":"YulBlock","src":"4149:129:26","statements":[{"nativeSrc":"4164:16:26","nodeType":"YulVariableDeclaration","src":"4164:16:26","value":{"kind":"number","nativeSrc":"4178:2:26","nodeType":"YulLiteral","src":"4178:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4168:6:26","nodeType":"YulTypedName","src":"4168:6:26","type":""}]},{"nativeSrc":"4194:74:26","nodeType":"YulAssignment","src":"4194:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4240:9:26","nodeType":"YulIdentifier","src":"4240:9:26"},{"name":"offset","nativeSrc":"4251:6:26","nodeType":"YulIdentifier","src":"4251:6:26"}],"functionName":{"name":"add","nativeSrc":"4236:3:26","nodeType":"YulIdentifier","src":"4236:3:26"},"nativeSrc":"4236:22:26","nodeType":"YulFunctionCall","src":"4236:22:26"},{"name":"dataEnd","nativeSrc":"4260:7:26","nodeType":"YulIdentifier","src":"4260:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4204:31:26","nodeType":"YulIdentifier","src":"4204:31:26"},"nativeSrc":"4204:64:26","nodeType":"YulFunctionCall","src":"4204:64:26"},"variableNames":[{"name":"value2","nativeSrc":"4194:6:26","nodeType":"YulIdentifier","src":"4194:6:26"}]}]},{"nativeSrc":"4288:129:26","nodeType":"YulBlock","src":"4288:129:26","statements":[{"nativeSrc":"4303:16:26","nodeType":"YulVariableDeclaration","src":"4303:16:26","value":{"kind":"number","nativeSrc":"4317:2:26","nodeType":"YulLiteral","src":"4317:2:26","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4307:6:26","nodeType":"YulTypedName","src":"4307:6:26","type":""}]},{"nativeSrc":"4333:74:26","nodeType":"YulAssignment","src":"4333:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4379:9:26","nodeType":"YulIdentifier","src":"4379:9:26"},{"name":"offset","nativeSrc":"4390:6:26","nodeType":"YulIdentifier","src":"4390:6:26"}],"functionName":{"name":"add","nativeSrc":"4375:3:26","nodeType":"YulIdentifier","src":"4375:3:26"},"nativeSrc":"4375:22:26","nodeType":"YulFunctionCall","src":"4375:22:26"},{"name":"dataEnd","nativeSrc":"4399:7:26","nodeType":"YulIdentifier","src":"4399:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4343:31:26","nodeType":"YulIdentifier","src":"4343:31:26"},"nativeSrc":"4343:64:26","nodeType":"YulFunctionCall","src":"4343:64:26"},"variableNames":[{"name":"value3","nativeSrc":"4333:6:26","nodeType":"YulIdentifier","src":"4333:6:26"}]}]},{"nativeSrc":"4427:293:26","nodeType":"YulBlock","src":"4427:293:26","statements":[{"nativeSrc":"4442:40:26","nodeType":"YulVariableDeclaration","src":"4442:40:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4466:9:26","nodeType":"YulIdentifier","src":"4466:9:26"},{"kind":"number","nativeSrc":"4477:3:26","nodeType":"YulLiteral","src":"4477:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4462:3:26","nodeType":"YulIdentifier","src":"4462:3:26"},"nativeSrc":"4462:19:26","nodeType":"YulFunctionCall","src":"4462:19:26"}],"functionName":{"name":"mload","nativeSrc":"4456:5:26","nodeType":"YulIdentifier","src":"4456:5:26"},"nativeSrc":"4456:26:26","nodeType":"YulFunctionCall","src":"4456:26:26"},"variables":[{"name":"offset","nativeSrc":"4446:6:26","nodeType":"YulTypedName","src":"4446:6:26","type":""}]},{"body":{"nativeSrc":"4529:83:26","nodeType":"YulBlock","src":"4529:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4531:77:26","nodeType":"YulIdentifier","src":"4531:77:26"},"nativeSrc":"4531:79:26","nodeType":"YulFunctionCall","src":"4531:79:26"},"nativeSrc":"4531:79:26","nodeType":"YulExpressionStatement","src":"4531:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4501:6:26","nodeType":"YulIdentifier","src":"4501:6:26"},{"kind":"number","nativeSrc":"4509:18:26","nodeType":"YulLiteral","src":"4509:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4498:2:26","nodeType":"YulIdentifier","src":"4498:2:26"},"nativeSrc":"4498:30:26","nodeType":"YulFunctionCall","src":"4498:30:26"},"nativeSrc":"4495:117:26","nodeType":"YulIf","src":"4495:117:26"},{"nativeSrc":"4626:84:26","nodeType":"YulAssignment","src":"4626:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4682:9:26","nodeType":"YulIdentifier","src":"4682:9:26"},{"name":"offset","nativeSrc":"4693:6:26","nodeType":"YulIdentifier","src":"4693:6:26"}],"functionName":{"name":"add","nativeSrc":"4678:3:26","nodeType":"YulIdentifier","src":"4678:3:26"},"nativeSrc":"4678:22:26","nodeType":"YulFunctionCall","src":"4678:22:26"},{"name":"dataEnd","nativeSrc":"4702:7:26","nodeType":"YulIdentifier","src":"4702:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4636:41:26","nodeType":"YulIdentifier","src":"4636:41:26"},"nativeSrc":"4636:74:26","nodeType":"YulFunctionCall","src":"4636:74:26"},"variableNames":[{"name":"value4","nativeSrc":"4626:6:26","nodeType":"YulIdentifier","src":"4626:6:26"}]}]},{"nativeSrc":"4730:293:26","nodeType":"YulBlock","src":"4730:293:26","statements":[{"nativeSrc":"4745:40:26","nodeType":"YulVariableDeclaration","src":"4745:40:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4769:9:26","nodeType":"YulIdentifier","src":"4769:9:26"},{"kind":"number","nativeSrc":"4780:3:26","nodeType":"YulLiteral","src":"4780:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4765:3:26","nodeType":"YulIdentifier","src":"4765:3:26"},"nativeSrc":"4765:19:26","nodeType":"YulFunctionCall","src":"4765:19:26"}],"functionName":{"name":"mload","nativeSrc":"4759:5:26","nodeType":"YulIdentifier","src":"4759:5:26"},"nativeSrc":"4759:26:26","nodeType":"YulFunctionCall","src":"4759:26:26"},"variables":[{"name":"offset","nativeSrc":"4749:6:26","nodeType":"YulTypedName","src":"4749:6:26","type":""}]},{"body":{"nativeSrc":"4832:83:26","nodeType":"YulBlock","src":"4832:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4834:77:26","nodeType":"YulIdentifier","src":"4834:77:26"},"nativeSrc":"4834:79:26","nodeType":"YulFunctionCall","src":"4834:79:26"},"nativeSrc":"4834:79:26","nodeType":"YulExpressionStatement","src":"4834:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4804:6:26","nodeType":"YulIdentifier","src":"4804:6:26"},{"kind":"number","nativeSrc":"4812:18:26","nodeType":"YulLiteral","src":"4812:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4801:2:26","nodeType":"YulIdentifier","src":"4801:2:26"},"nativeSrc":"4801:30:26","nodeType":"YulFunctionCall","src":"4801:30:26"},"nativeSrc":"4798:117:26","nodeType":"YulIf","src":"4798:117:26"},{"nativeSrc":"4929:84:26","nodeType":"YulAssignment","src":"4929:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4985:9:26","nodeType":"YulIdentifier","src":"4985:9:26"},{"name":"offset","nativeSrc":"4996:6:26","nodeType":"YulIdentifier","src":"4996:6:26"}],"functionName":{"name":"add","nativeSrc":"4981:3:26","nodeType":"YulIdentifier","src":"4981:3:26"},"nativeSrc":"4981:22:26","nodeType":"YulFunctionCall","src":"4981:22:26"},{"name":"dataEnd","nativeSrc":"5005:7:26","nodeType":"YulIdentifier","src":"5005:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4939:41:26","nodeType":"YulIdentifier","src":"4939:41:26"},"nativeSrc":"4939:74:26","nodeType":"YulFunctionCall","src":"4939:74:26"},"variableNames":[{"name":"value5","nativeSrc":"4929:6:26","nodeType":"YulIdentifier","src":"4929:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"3550:1480:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3662:9:26","nodeType":"YulTypedName","src":"3662:9:26","type":""},{"name":"dataEnd","nativeSrc":"3673:7:26","nodeType":"YulTypedName","src":"3673:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3685:6:26","nodeType":"YulTypedName","src":"3685:6:26","type":""},{"name":"value1","nativeSrc":"3693:6:26","nodeType":"YulTypedName","src":"3693:6:26","type":""},{"name":"value2","nativeSrc":"3701:6:26","nodeType":"YulTypedName","src":"3701:6:26","type":""},{"name":"value3","nativeSrc":"3709:6:26","nodeType":"YulTypedName","src":"3709:6:26","type":""},{"name":"value4","nativeSrc":"3717:6:26","nodeType":"YulTypedName","src":"3717:6:26","type":""},{"name":"value5","nativeSrc":"3725:6:26","nodeType":"YulTypedName","src":"3725:6:26","type":""}],"src":"3550:1480:26"},{"body":{"nativeSrc":"5095:40:26","nodeType":"YulBlock","src":"5095:40:26","statements":[{"nativeSrc":"5106:22:26","nodeType":"YulAssignment","src":"5106:22:26","value":{"arguments":[{"name":"value","nativeSrc":"5122:5:26","nodeType":"YulIdentifier","src":"5122:5:26"}],"functionName":{"name":"mload","nativeSrc":"5116:5:26","nodeType":"YulIdentifier","src":"5116:5:26"},"nativeSrc":"5116:12:26","nodeType":"YulFunctionCall","src":"5116:12:26"},"variableNames":[{"name":"length","nativeSrc":"5106:6:26","nodeType":"YulIdentifier","src":"5106:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"5036:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5078:5:26","nodeType":"YulTypedName","src":"5078:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5088:6:26","nodeType":"YulTypedName","src":"5088:6:26","type":""}],"src":"5036:99:26"},{"body":{"nativeSrc":"5169:152:26","nodeType":"YulBlock","src":"5169:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5186:1:26","nodeType":"YulLiteral","src":"5186:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5189:77:26","nodeType":"YulLiteral","src":"5189:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5179:6:26","nodeType":"YulIdentifier","src":"5179:6:26"},"nativeSrc":"5179:88:26","nodeType":"YulFunctionCall","src":"5179:88:26"},"nativeSrc":"5179:88:26","nodeType":"YulExpressionStatement","src":"5179:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5283:1:26","nodeType":"YulLiteral","src":"5283:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"5286:4:26","nodeType":"YulLiteral","src":"5286:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5276:6:26","nodeType":"YulIdentifier","src":"5276:6:26"},"nativeSrc":"5276:15:26","nodeType":"YulFunctionCall","src":"5276:15:26"},"nativeSrc":"5276:15:26","nodeType":"YulExpressionStatement","src":"5276:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5307:1:26","nodeType":"YulLiteral","src":"5307:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5310:4:26","nodeType":"YulLiteral","src":"5310:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5300:6:26","nodeType":"YulIdentifier","src":"5300:6:26"},"nativeSrc":"5300:15:26","nodeType":"YulFunctionCall","src":"5300:15:26"},"nativeSrc":"5300:15:26","nodeType":"YulExpressionStatement","src":"5300:15:26"}]},"name":"panic_error_0x22","nativeSrc":"5141:180:26","nodeType":"YulFunctionDefinition","src":"5141:180:26"},{"body":{"nativeSrc":"5378:269:26","nodeType":"YulBlock","src":"5378:269:26","statements":[{"nativeSrc":"5388:22:26","nodeType":"YulAssignment","src":"5388:22:26","value":{"arguments":[{"name":"data","nativeSrc":"5402:4:26","nodeType":"YulIdentifier","src":"5402:4:26"},{"kind":"number","nativeSrc":"5408:1:26","nodeType":"YulLiteral","src":"5408:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5398:3:26","nodeType":"YulIdentifier","src":"5398:3:26"},"nativeSrc":"5398:12:26","nodeType":"YulFunctionCall","src":"5398:12:26"},"variableNames":[{"name":"length","nativeSrc":"5388:6:26","nodeType":"YulIdentifier","src":"5388:6:26"}]},{"nativeSrc":"5419:38:26","nodeType":"YulVariableDeclaration","src":"5419:38:26","value":{"arguments":[{"name":"data","nativeSrc":"5449:4:26","nodeType":"YulIdentifier","src":"5449:4:26"},{"kind":"number","nativeSrc":"5455:1:26","nodeType":"YulLiteral","src":"5455:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5445:3:26","nodeType":"YulIdentifier","src":"5445:3:26"},"nativeSrc":"5445:12:26","nodeType":"YulFunctionCall","src":"5445:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5423:18:26","nodeType":"YulTypedName","src":"5423:18:26","type":""}]},{"body":{"nativeSrc":"5496:51:26","nodeType":"YulBlock","src":"5496:51:26","statements":[{"nativeSrc":"5510:27:26","nodeType":"YulAssignment","src":"5510:27:26","value":{"arguments":[{"name":"length","nativeSrc":"5524:6:26","nodeType":"YulIdentifier","src":"5524:6:26"},{"kind":"number","nativeSrc":"5532:4:26","nodeType":"YulLiteral","src":"5532:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5520:3:26","nodeType":"YulIdentifier","src":"5520:3:26"},"nativeSrc":"5520:17:26","nodeType":"YulFunctionCall","src":"5520:17:26"},"variableNames":[{"name":"length","nativeSrc":"5510:6:26","nodeType":"YulIdentifier","src":"5510:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5476:18:26","nodeType":"YulIdentifier","src":"5476:18:26"}],"functionName":{"name":"iszero","nativeSrc":"5469:6:26","nodeType":"YulIdentifier","src":"5469:6:26"},"nativeSrc":"5469:26:26","nodeType":"YulFunctionCall","src":"5469:26:26"},"nativeSrc":"5466:81:26","nodeType":"YulIf","src":"5466:81:26"},{"body":{"nativeSrc":"5599:42:26","nodeType":"YulBlock","src":"5599:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"5613:16:26","nodeType":"YulIdentifier","src":"5613:16:26"},"nativeSrc":"5613:18:26","nodeType":"YulFunctionCall","src":"5613:18:26"},"nativeSrc":"5613:18:26","nodeType":"YulExpressionStatement","src":"5613:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5563:18:26","nodeType":"YulIdentifier","src":"5563:18:26"},{"arguments":[{"name":"length","nativeSrc":"5586:6:26","nodeType":"YulIdentifier","src":"5586:6:26"},{"kind":"number","nativeSrc":"5594:2:26","nodeType":"YulLiteral","src":"5594:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5583:2:26","nodeType":"YulIdentifier","src":"5583:2:26"},"nativeSrc":"5583:14:26","nodeType":"YulFunctionCall","src":"5583:14:26"}],"functionName":{"name":"eq","nativeSrc":"5560:2:26","nodeType":"YulIdentifier","src":"5560:2:26"},"nativeSrc":"5560:38:26","nodeType":"YulFunctionCall","src":"5560:38:26"},"nativeSrc":"5557:84:26","nodeType":"YulIf","src":"5557:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"5327:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5362:4:26","nodeType":"YulTypedName","src":"5362:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5371:6:26","nodeType":"YulTypedName","src":"5371:6:26","type":""}],"src":"5327:320:26"},{"body":{"nativeSrc":"5707:87:26","nodeType":"YulBlock","src":"5707:87:26","statements":[{"nativeSrc":"5717:11:26","nodeType":"YulAssignment","src":"5717:11:26","value":{"name":"ptr","nativeSrc":"5725:3:26","nodeType":"YulIdentifier","src":"5725:3:26"},"variableNames":[{"name":"data","nativeSrc":"5717:4:26","nodeType":"YulIdentifier","src":"5717:4:26"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5745:1:26","nodeType":"YulLiteral","src":"5745:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"5748:3:26","nodeType":"YulIdentifier","src":"5748:3:26"}],"functionName":{"name":"mstore","nativeSrc":"5738:6:26","nodeType":"YulIdentifier","src":"5738:6:26"},"nativeSrc":"5738:14:26","nodeType":"YulFunctionCall","src":"5738:14:26"},"nativeSrc":"5738:14:26","nodeType":"YulExpressionStatement","src":"5738:14:26"},{"nativeSrc":"5761:26:26","nodeType":"YulAssignment","src":"5761:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"5779:1:26","nodeType":"YulLiteral","src":"5779:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5782:4:26","nodeType":"YulLiteral","src":"5782:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"5769:9:26","nodeType":"YulIdentifier","src":"5769:9:26"},"nativeSrc":"5769:18:26","nodeType":"YulFunctionCall","src":"5769:18:26"},"variableNames":[{"name":"data","nativeSrc":"5761:4:26","nodeType":"YulIdentifier","src":"5761:4:26"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"5653:141:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"5694:3:26","nodeType":"YulTypedName","src":"5694:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"5702:4:26","nodeType":"YulTypedName","src":"5702:4:26","type":""}],"src":"5653:141:26"},{"body":{"nativeSrc":"5844:49:26","nodeType":"YulBlock","src":"5844:49:26","statements":[{"nativeSrc":"5854:33:26","nodeType":"YulAssignment","src":"5854:33:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5872:5:26","nodeType":"YulIdentifier","src":"5872:5:26"},{"kind":"number","nativeSrc":"5879:2:26","nodeType":"YulLiteral","src":"5879:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5868:3:26","nodeType":"YulIdentifier","src":"5868:3:26"},"nativeSrc":"5868:14:26","nodeType":"YulFunctionCall","src":"5868:14:26"},{"kind":"number","nativeSrc":"5884:2:26","nodeType":"YulLiteral","src":"5884:2:26","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"5864:3:26","nodeType":"YulIdentifier","src":"5864:3:26"},"nativeSrc":"5864:23:26","nodeType":"YulFunctionCall","src":"5864:23:26"},"variableNames":[{"name":"result","nativeSrc":"5854:6:26","nodeType":"YulIdentifier","src":"5854:6:26"}]}]},"name":"divide_by_32_ceil","nativeSrc":"5800:93:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5827:5:26","nodeType":"YulTypedName","src":"5827:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5837:6:26","nodeType":"YulTypedName","src":"5837:6:26","type":""}],"src":"5800:93:26"},{"body":{"nativeSrc":"5952:54:26","nodeType":"YulBlock","src":"5952:54:26","statements":[{"nativeSrc":"5962:37:26","nodeType":"YulAssignment","src":"5962:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"5987:4:26","nodeType":"YulIdentifier","src":"5987:4:26"},{"name":"value","nativeSrc":"5993:5:26","nodeType":"YulIdentifier","src":"5993:5:26"}],"functionName":{"name":"shl","nativeSrc":"5983:3:26","nodeType":"YulIdentifier","src":"5983:3:26"},"nativeSrc":"5983:16:26","nodeType":"YulFunctionCall","src":"5983:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"5962:8:26","nodeType":"YulIdentifier","src":"5962:8:26"}]}]},"name":"shift_left_dynamic","nativeSrc":"5899:107:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"5927:4:26","nodeType":"YulTypedName","src":"5927:4:26","type":""},{"name":"value","nativeSrc":"5933:5:26","nodeType":"YulTypedName","src":"5933:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5943:8:26","nodeType":"YulTypedName","src":"5943:8:26","type":""}],"src":"5899:107:26"},{"body":{"nativeSrc":"6088:317:26","nodeType":"YulBlock","src":"6088:317:26","statements":[{"nativeSrc":"6098:35:26","nodeType":"YulVariableDeclaration","src":"6098:35:26","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"6119:10:26","nodeType":"YulIdentifier","src":"6119:10:26"},{"kind":"number","nativeSrc":"6131:1:26","nodeType":"YulLiteral","src":"6131:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"6115:3:26","nodeType":"YulIdentifier","src":"6115:3:26"},"nativeSrc":"6115:18:26","nodeType":"YulFunctionCall","src":"6115:18:26"},"variables":[{"name":"shiftBits","nativeSrc":"6102:9:26","nodeType":"YulTypedName","src":"6102:9:26","type":""}]},{"nativeSrc":"6142:109:26","nodeType":"YulVariableDeclaration","src":"6142:109:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6173:9:26","nodeType":"YulIdentifier","src":"6173:9:26"},{"kind":"number","nativeSrc":"6184:66:26","nodeType":"YulLiteral","src":"6184:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6154:18:26","nodeType":"YulIdentifier","src":"6154:18:26"},"nativeSrc":"6154:97:26","nodeType":"YulFunctionCall","src":"6154:97:26"},"variables":[{"name":"mask","nativeSrc":"6146:4:26","nodeType":"YulTypedName","src":"6146:4:26","type":""}]},{"nativeSrc":"6260:51:26","nodeType":"YulAssignment","src":"6260:51:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6291:9:26","nodeType":"YulIdentifier","src":"6291:9:26"},{"name":"toInsert","nativeSrc":"6302:8:26","nodeType":"YulIdentifier","src":"6302:8:26"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6272:18:26","nodeType":"YulIdentifier","src":"6272:18:26"},"nativeSrc":"6272:39:26","nodeType":"YulFunctionCall","src":"6272:39:26"},"variableNames":[{"name":"toInsert","nativeSrc":"6260:8:26","nodeType":"YulIdentifier","src":"6260:8:26"}]},{"nativeSrc":"6320:30:26","nodeType":"YulAssignment","src":"6320:30:26","value":{"arguments":[{"name":"value","nativeSrc":"6333:5:26","nodeType":"YulIdentifier","src":"6333:5:26"},{"arguments":[{"name":"mask","nativeSrc":"6344:4:26","nodeType":"YulIdentifier","src":"6344:4:26"}],"functionName":{"name":"not","nativeSrc":"6340:3:26","nodeType":"YulIdentifier","src":"6340:3:26"},"nativeSrc":"6340:9:26","nodeType":"YulFunctionCall","src":"6340:9:26"}],"functionName":{"name":"and","nativeSrc":"6329:3:26","nodeType":"YulIdentifier","src":"6329:3:26"},"nativeSrc":"6329:21:26","nodeType":"YulFunctionCall","src":"6329:21:26"},"variableNames":[{"name":"value","nativeSrc":"6320:5:26","nodeType":"YulIdentifier","src":"6320:5:26"}]},{"nativeSrc":"6359:40:26","nodeType":"YulAssignment","src":"6359:40:26","value":{"arguments":[{"name":"value","nativeSrc":"6372:5:26","nodeType":"YulIdentifier","src":"6372:5:26"},{"arguments":[{"name":"toInsert","nativeSrc":"6383:8:26","nodeType":"YulIdentifier","src":"6383:8:26"},{"name":"mask","nativeSrc":"6393:4:26","nodeType":"YulIdentifier","src":"6393:4:26"}],"functionName":{"name":"and","nativeSrc":"6379:3:26","nodeType":"YulIdentifier","src":"6379:3:26"},"nativeSrc":"6379:19:26","nodeType":"YulFunctionCall","src":"6379:19:26"}],"functionName":{"name":"or","nativeSrc":"6369:2:26","nodeType":"YulIdentifier","src":"6369:2:26"},"nativeSrc":"6369:30:26","nodeType":"YulFunctionCall","src":"6369:30:26"},"variableNames":[{"name":"result","nativeSrc":"6359:6:26","nodeType":"YulIdentifier","src":"6359:6:26"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"6012:393:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6049:5:26","nodeType":"YulTypedName","src":"6049:5:26","type":""},{"name":"shiftBytes","nativeSrc":"6056:10:26","nodeType":"YulTypedName","src":"6056:10:26","type":""},{"name":"toInsert","nativeSrc":"6068:8:26","nodeType":"YulTypedName","src":"6068:8:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6081:6:26","nodeType":"YulTypedName","src":"6081:6:26","type":""}],"src":"6012:393:26"},{"body":{"nativeSrc":"6443:28:26","nodeType":"YulBlock","src":"6443:28:26","statements":[{"nativeSrc":"6453:12:26","nodeType":"YulAssignment","src":"6453:12:26","value":{"name":"value","nativeSrc":"6460:5:26","nodeType":"YulIdentifier","src":"6460:5:26"},"variableNames":[{"name":"ret","nativeSrc":"6453:3:26","nodeType":"YulIdentifier","src":"6453:3:26"}]}]},"name":"identity","nativeSrc":"6411:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6429:5:26","nodeType":"YulTypedName","src":"6429:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6439:3:26","nodeType":"YulTypedName","src":"6439:3:26","type":""}],"src":"6411:60:26"},{"body":{"nativeSrc":"6537:82:26","nodeType":"YulBlock","src":"6537:82:26","statements":[{"nativeSrc":"6547:66:26","nodeType":"YulAssignment","src":"6547:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6605:5:26","nodeType":"YulIdentifier","src":"6605:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6587:17:26","nodeType":"YulIdentifier","src":"6587:17:26"},"nativeSrc":"6587:24:26","nodeType":"YulFunctionCall","src":"6587:24:26"}],"functionName":{"name":"identity","nativeSrc":"6578:8:26","nodeType":"YulIdentifier","src":"6578:8:26"},"nativeSrc":"6578:34:26","nodeType":"YulFunctionCall","src":"6578:34:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6560:17:26","nodeType":"YulIdentifier","src":"6560:17:26"},"nativeSrc":"6560:53:26","nodeType":"YulFunctionCall","src":"6560:53:26"},"variableNames":[{"name":"converted","nativeSrc":"6547:9:26","nodeType":"YulIdentifier","src":"6547:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6477:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6517:5:26","nodeType":"YulTypedName","src":"6517:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6527:9:26","nodeType":"YulTypedName","src":"6527:9:26","type":""}],"src":"6477:142:26"},{"body":{"nativeSrc":"6672:28:26","nodeType":"YulBlock","src":"6672:28:26","statements":[{"nativeSrc":"6682:12:26","nodeType":"YulAssignment","src":"6682:12:26","value":{"name":"value","nativeSrc":"6689:5:26","nodeType":"YulIdentifier","src":"6689:5:26"},"variableNames":[{"name":"ret","nativeSrc":"6682:3:26","nodeType":"YulIdentifier","src":"6682:3:26"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"6625:75:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6658:5:26","nodeType":"YulTypedName","src":"6658:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6668:3:26","nodeType":"YulTypedName","src":"6668:3:26","type":""}],"src":"6625:75:26"},{"body":{"nativeSrc":"6782:193:26","nodeType":"YulBlock","src":"6782:193:26","statements":[{"nativeSrc":"6792:63:26","nodeType":"YulVariableDeclaration","src":"6792:63:26","value":{"arguments":[{"name":"value_0","nativeSrc":"6847:7:26","nodeType":"YulIdentifier","src":"6847:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6816:30:26","nodeType":"YulIdentifier","src":"6816:30:26"},"nativeSrc":"6816:39:26","nodeType":"YulFunctionCall","src":"6816:39:26"},"variables":[{"name":"convertedValue_0","nativeSrc":"6796:16:26","nodeType":"YulTypedName","src":"6796:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6871:4:26","nodeType":"YulIdentifier","src":"6871:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6911:4:26","nodeType":"YulIdentifier","src":"6911:4:26"}],"functionName":{"name":"sload","nativeSrc":"6905:5:26","nodeType":"YulIdentifier","src":"6905:5:26"},"nativeSrc":"6905:11:26","nodeType":"YulFunctionCall","src":"6905:11:26"},{"name":"offset","nativeSrc":"6918:6:26","nodeType":"YulIdentifier","src":"6918:6:26"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"6950:16:26","nodeType":"YulIdentifier","src":"6950:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"6926:23:26","nodeType":"YulIdentifier","src":"6926:23:26"},"nativeSrc":"6926:41:26","nodeType":"YulFunctionCall","src":"6926:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"6877:27:26","nodeType":"YulIdentifier","src":"6877:27:26"},"nativeSrc":"6877:91:26","nodeType":"YulFunctionCall","src":"6877:91:26"}],"functionName":{"name":"sstore","nativeSrc":"6864:6:26","nodeType":"YulIdentifier","src":"6864:6:26"},"nativeSrc":"6864:105:26","nodeType":"YulFunctionCall","src":"6864:105:26"},"nativeSrc":"6864:105:26","nodeType":"YulExpressionStatement","src":"6864:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6706:269:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6759:4:26","nodeType":"YulTypedName","src":"6759:4:26","type":""},{"name":"offset","nativeSrc":"6765:6:26","nodeType":"YulTypedName","src":"6765:6:26","type":""},{"name":"value_0","nativeSrc":"6773:7:26","nodeType":"YulTypedName","src":"6773:7:26","type":""}],"src":"6706:269:26"},{"body":{"nativeSrc":"7030:24:26","nodeType":"YulBlock","src":"7030:24:26","statements":[{"nativeSrc":"7040:8:26","nodeType":"YulAssignment","src":"7040:8:26","value":{"kind":"number","nativeSrc":"7047:1:26","nodeType":"YulLiteral","src":"7047:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"7040:3:26","nodeType":"YulIdentifier","src":"7040:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"6981:73:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"7026:3:26","nodeType":"YulTypedName","src":"7026:3:26","type":""}],"src":"6981:73:26"},{"body":{"nativeSrc":"7113:136:26","nodeType":"YulBlock","src":"7113:136:26","statements":[{"nativeSrc":"7123:46:26","nodeType":"YulVariableDeclaration","src":"7123:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"7137:30:26","nodeType":"YulIdentifier","src":"7137:30:26"},"nativeSrc":"7137:32:26","nodeType":"YulFunctionCall","src":"7137:32:26"},"variables":[{"name":"zero_0","nativeSrc":"7127:6:26","nodeType":"YulTypedName","src":"7127:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7222:4:26","nodeType":"YulIdentifier","src":"7222:4:26"},{"name":"offset","nativeSrc":"7228:6:26","nodeType":"YulIdentifier","src":"7228:6:26"},{"name":"zero_0","nativeSrc":"7236:6:26","nodeType":"YulIdentifier","src":"7236:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"7178:43:26","nodeType":"YulIdentifier","src":"7178:43:26"},"nativeSrc":"7178:65:26","nodeType":"YulFunctionCall","src":"7178:65:26"},"nativeSrc":"7178:65:26","nodeType":"YulExpressionStatement","src":"7178:65:26"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"7060:189:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7099:4:26","nodeType":"YulTypedName","src":"7099:4:26","type":""},{"name":"offset","nativeSrc":"7105:6:26","nodeType":"YulTypedName","src":"7105:6:26","type":""}],"src":"7060:189:26"},{"body":{"nativeSrc":"7305:136:26","nodeType":"YulBlock","src":"7305:136:26","statements":[{"body":{"nativeSrc":"7372:63:26","nodeType":"YulBlock","src":"7372:63:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7416:5:26","nodeType":"YulIdentifier","src":"7416:5:26"},{"kind":"number","nativeSrc":"7423:1:26","nodeType":"YulLiteral","src":"7423:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"7386:29:26","nodeType":"YulIdentifier","src":"7386:29:26"},"nativeSrc":"7386:39:26","nodeType":"YulFunctionCall","src":"7386:39:26"},"nativeSrc":"7386:39:26","nodeType":"YulExpressionStatement","src":"7386:39:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7325:5:26","nodeType":"YulIdentifier","src":"7325:5:26"},{"name":"end","nativeSrc":"7332:3:26","nodeType":"YulIdentifier","src":"7332:3:26"}],"functionName":{"name":"lt","nativeSrc":"7322:2:26","nodeType":"YulIdentifier","src":"7322:2:26"},"nativeSrc":"7322:14:26","nodeType":"YulFunctionCall","src":"7322:14:26"},"nativeSrc":"7315:120:26","nodeType":"YulForLoop","post":{"nativeSrc":"7337:26:26","nodeType":"YulBlock","src":"7337:26:26","statements":[{"nativeSrc":"7339:22:26","nodeType":"YulAssignment","src":"7339:22:26","value":{"arguments":[{"name":"start","nativeSrc":"7352:5:26","nodeType":"YulIdentifier","src":"7352:5:26"},{"kind":"number","nativeSrc":"7359:1:26","nodeType":"YulLiteral","src":"7359:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7348:3:26","nodeType":"YulIdentifier","src":"7348:3:26"},"nativeSrc":"7348:13:26","nodeType":"YulFunctionCall","src":"7348:13:26"},"variableNames":[{"name":"start","nativeSrc":"7339:5:26","nodeType":"YulIdentifier","src":"7339:5:26"}]}]},"pre":{"nativeSrc":"7319:2:26","nodeType":"YulBlock","src":"7319:2:26","statements":[]},"src":"7315:120:26"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"7255:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"7293:5:26","nodeType":"YulTypedName","src":"7293:5:26","type":""},{"name":"end","nativeSrc":"7300:3:26","nodeType":"YulTypedName","src":"7300:3:26","type":""}],"src":"7255:186:26"},{"body":{"nativeSrc":"7526:464:26","nodeType":"YulBlock","src":"7526:464:26","statements":[{"body":{"nativeSrc":"7552:431:26","nodeType":"YulBlock","src":"7552:431:26","statements":[{"nativeSrc":"7566:54:26","nodeType":"YulVariableDeclaration","src":"7566:54:26","value":{"arguments":[{"name":"array","nativeSrc":"7614:5:26","nodeType":"YulIdentifier","src":"7614:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7582:31:26","nodeType":"YulIdentifier","src":"7582:31:26"},"nativeSrc":"7582:38:26","nodeType":"YulFunctionCall","src":"7582:38:26"},"variables":[{"name":"dataArea","nativeSrc":"7570:8:26","nodeType":"YulTypedName","src":"7570:8:26","type":""}]},{"nativeSrc":"7633:63:26","nodeType":"YulVariableDeclaration","src":"7633:63:26","value":{"arguments":[{"name":"dataArea","nativeSrc":"7656:8:26","nodeType":"YulIdentifier","src":"7656:8:26"},{"arguments":[{"name":"startIndex","nativeSrc":"7684:10:26","nodeType":"YulIdentifier","src":"7684:10:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7666:17:26","nodeType":"YulIdentifier","src":"7666:17:26"},"nativeSrc":"7666:29:26","nodeType":"YulFunctionCall","src":"7666:29:26"}],"functionName":{"name":"add","nativeSrc":"7652:3:26","nodeType":"YulIdentifier","src":"7652:3:26"},"nativeSrc":"7652:44:26","nodeType":"YulFunctionCall","src":"7652:44:26"},"variables":[{"name":"deleteStart","nativeSrc":"7637:11:26","nodeType":"YulTypedName","src":"7637:11:26","type":""}]},{"body":{"nativeSrc":"7853:27:26","nodeType":"YulBlock","src":"7853:27:26","statements":[{"nativeSrc":"7855:23:26","nodeType":"YulAssignment","src":"7855:23:26","value":{"name":"dataArea","nativeSrc":"7870:8:26","nodeType":"YulIdentifier","src":"7870:8:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"7855:11:26","nodeType":"YulIdentifier","src":"7855:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7837:10:26","nodeType":"YulIdentifier","src":"7837:10:26"},{"kind":"number","nativeSrc":"7849:2:26","nodeType":"YulLiteral","src":"7849:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7834:2:26","nodeType":"YulIdentifier","src":"7834:2:26"},"nativeSrc":"7834:18:26","nodeType":"YulFunctionCall","src":"7834:18:26"},"nativeSrc":"7831:49:26","nodeType":"YulIf","src":"7831:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"7922:11:26","nodeType":"YulIdentifier","src":"7922:11:26"},{"arguments":[{"name":"dataArea","nativeSrc":"7939:8:26","nodeType":"YulIdentifier","src":"7939:8:26"},{"arguments":[{"name":"len","nativeSrc":"7967:3:26","nodeType":"YulIdentifier","src":"7967:3:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7949:17:26","nodeType":"YulIdentifier","src":"7949:17:26"},"nativeSrc":"7949:22:26","nodeType":"YulFunctionCall","src":"7949:22:26"}],"functionName":{"name":"add","nativeSrc":"7935:3:26","nodeType":"YulIdentifier","src":"7935:3:26"},"nativeSrc":"7935:37:26","nodeType":"YulFunctionCall","src":"7935:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"7893:28:26","nodeType":"YulIdentifier","src":"7893:28:26"},"nativeSrc":"7893:80:26","nodeType":"YulFunctionCall","src":"7893:80:26"},"nativeSrc":"7893:80:26","nodeType":"YulExpressionStatement","src":"7893:80:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7543:3:26","nodeType":"YulIdentifier","src":"7543:3:26"},{"kind":"number","nativeSrc":"7548:2:26","nodeType":"YulLiteral","src":"7548:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7540:2:26","nodeType":"YulIdentifier","src":"7540:2:26"},"nativeSrc":"7540:11:26","nodeType":"YulFunctionCall","src":"7540:11:26"},"nativeSrc":"7537:446:26","nodeType":"YulIf","src":"7537:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7447:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7502:5:26","nodeType":"YulTypedName","src":"7502:5:26","type":""},{"name":"len","nativeSrc":"7509:3:26","nodeType":"YulTypedName","src":"7509:3:26","type":""},{"name":"startIndex","nativeSrc":"7514:10:26","nodeType":"YulTypedName","src":"7514:10:26","type":""}],"src":"7447:543:26"},{"body":{"nativeSrc":"8059:54:26","nodeType":"YulBlock","src":"8059:54:26","statements":[{"nativeSrc":"8069:37:26","nodeType":"YulAssignment","src":"8069:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"8094:4:26","nodeType":"YulIdentifier","src":"8094:4:26"},{"name":"value","nativeSrc":"8100:5:26","nodeType":"YulIdentifier","src":"8100:5:26"}],"functionName":{"name":"shr","nativeSrc":"8090:3:26","nodeType":"YulIdentifier","src":"8090:3:26"},"nativeSrc":"8090:16:26","nodeType":"YulFunctionCall","src":"8090:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"8069:8:26","nodeType":"YulIdentifier","src":"8069:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7996:117:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"8034:4:26","nodeType":"YulTypedName","src":"8034:4:26","type":""},{"name":"value","nativeSrc":"8040:5:26","nodeType":"YulTypedName","src":"8040:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8050:8:26","nodeType":"YulTypedName","src":"8050:8:26","type":""}],"src":"7996:117:26"},{"body":{"nativeSrc":"8170:118:26","nodeType":"YulBlock","src":"8170:118:26","statements":[{"nativeSrc":"8180:68:26","nodeType":"YulVariableDeclaration","src":"8180:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8229:1:26","nodeType":"YulLiteral","src":"8229:1:26","type":"","value":"8"},{"name":"bytes","nativeSrc":"8232:5:26","nodeType":"YulIdentifier","src":"8232:5:26"}],"functionName":{"name":"mul","nativeSrc":"8225:3:26","nodeType":"YulIdentifier","src":"8225:3:26"},"nativeSrc":"8225:13:26","nodeType":"YulFunctionCall","src":"8225:13:26"},{"arguments":[{"kind":"number","nativeSrc":"8244:1:26","nodeType":"YulLiteral","src":"8244:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8240:3:26","nodeType":"YulIdentifier","src":"8240:3:26"},"nativeSrc":"8240:6:26","nodeType":"YulFunctionCall","src":"8240:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"8196:28:26","nodeType":"YulIdentifier","src":"8196:28:26"},"nativeSrc":"8196:51:26","nodeType":"YulFunctionCall","src":"8196:51:26"}],"functionName":{"name":"not","nativeSrc":"8192:3:26","nodeType":"YulIdentifier","src":"8192:3:26"},"nativeSrc":"8192:56:26","nodeType":"YulFunctionCall","src":"8192:56:26"},"variables":[{"name":"mask","nativeSrc":"8184:4:26","nodeType":"YulTypedName","src":"8184:4:26","type":""}]},{"nativeSrc":"8257:25:26","nodeType":"YulAssignment","src":"8257:25:26","value":{"arguments":[{"name":"data","nativeSrc":"8271:4:26","nodeType":"YulIdentifier","src":"8271:4:26"},{"name":"mask","nativeSrc":"8277:4:26","nodeType":"YulIdentifier","src":"8277:4:26"}],"functionName":{"name":"and","nativeSrc":"8267:3:26","nodeType":"YulIdentifier","src":"8267:3:26"},"nativeSrc":"8267:15:26","nodeType":"YulFunctionCall","src":"8267:15:26"},"variableNames":[{"name":"result","nativeSrc":"8257:6:26","nodeType":"YulIdentifier","src":"8257:6:26"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"8119:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8147:4:26","nodeType":"YulTypedName","src":"8147:4:26","type":""},{"name":"bytes","nativeSrc":"8153:5:26","nodeType":"YulTypedName","src":"8153:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8163:6:26","nodeType":"YulTypedName","src":"8163:6:26","type":""}],"src":"8119:169:26"},{"body":{"nativeSrc":"8374:214:26","nodeType":"YulBlock","src":"8374:214:26","statements":[{"nativeSrc":"8507:37:26","nodeType":"YulAssignment","src":"8507:37:26","value":{"arguments":[{"name":"data","nativeSrc":"8534:4:26","nodeType":"YulIdentifier","src":"8534:4:26"},{"name":"len","nativeSrc":"8540:3:26","nodeType":"YulIdentifier","src":"8540:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8515:18:26","nodeType":"YulIdentifier","src":"8515:18:26"},"nativeSrc":"8515:29:26","nodeType":"YulFunctionCall","src":"8515:29:26"},"variableNames":[{"name":"data","nativeSrc":"8507:4:26","nodeType":"YulIdentifier","src":"8507:4:26"}]},{"nativeSrc":"8553:29:26","nodeType":"YulAssignment","src":"8553:29:26","value":{"arguments":[{"name":"data","nativeSrc":"8564:4:26","nodeType":"YulIdentifier","src":"8564:4:26"},{"arguments":[{"kind":"number","nativeSrc":"8574:1:26","nodeType":"YulLiteral","src":"8574:1:26","type":"","value":"2"},{"name":"len","nativeSrc":"8577:3:26","nodeType":"YulIdentifier","src":"8577:3:26"}],"functionName":{"name":"mul","nativeSrc":"8570:3:26","nodeType":"YulIdentifier","src":"8570:3:26"},"nativeSrc":"8570:11:26","nodeType":"YulFunctionCall","src":"8570:11:26"}],"functionName":{"name":"or","nativeSrc":"8561:2:26","nodeType":"YulIdentifier","src":"8561:2:26"},"nativeSrc":"8561:21:26","nodeType":"YulFunctionCall","src":"8561:21:26"},"variableNames":[{"name":"used","nativeSrc":"8553:4:26","nodeType":"YulIdentifier","src":"8553:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8293:295:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8355:4:26","nodeType":"YulTypedName","src":"8355:4:26","type":""},{"name":"len","nativeSrc":"8361:3:26","nodeType":"YulTypedName","src":"8361:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8369:4:26","nodeType":"YulTypedName","src":"8369:4:26","type":""}],"src":"8293:295:26"},{"body":{"nativeSrc":"8685:1303:26","nodeType":"YulBlock","src":"8685:1303:26","statements":[{"nativeSrc":"8696:51:26","nodeType":"YulVariableDeclaration","src":"8696:51:26","value":{"arguments":[{"name":"src","nativeSrc":"8743:3:26","nodeType":"YulIdentifier","src":"8743:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"8710:32:26","nodeType":"YulIdentifier","src":"8710:32:26"},"nativeSrc":"8710:37:26","nodeType":"YulFunctionCall","src":"8710:37:26"},"variables":[{"name":"newLen","nativeSrc":"8700:6:26","nodeType":"YulTypedName","src":"8700:6:26","type":""}]},{"body":{"nativeSrc":"8832:22:26","nodeType":"YulBlock","src":"8832:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8834:16:26","nodeType":"YulIdentifier","src":"8834:16:26"},"nativeSrc":"8834:18:26","nodeType":"YulFunctionCall","src":"8834:18:26"},"nativeSrc":"8834:18:26","nodeType":"YulExpressionStatement","src":"8834:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8804:6:26","nodeType":"YulIdentifier","src":"8804:6:26"},{"kind":"number","nativeSrc":"8812:18:26","nodeType":"YulLiteral","src":"8812:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8801:2:26","nodeType":"YulIdentifier","src":"8801:2:26"},"nativeSrc":"8801:30:26","nodeType":"YulFunctionCall","src":"8801:30:26"},"nativeSrc":"8798:56:26","nodeType":"YulIf","src":"8798:56:26"},{"nativeSrc":"8864:52:26","nodeType":"YulVariableDeclaration","src":"8864:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8910:4:26","nodeType":"YulIdentifier","src":"8910:4:26"}],"functionName":{"name":"sload","nativeSrc":"8904:5:26","nodeType":"YulIdentifier","src":"8904:5:26"},"nativeSrc":"8904:11:26","nodeType":"YulFunctionCall","src":"8904:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8878:25:26","nodeType":"YulIdentifier","src":"8878:25:26"},"nativeSrc":"8878:38:26","nodeType":"YulFunctionCall","src":"8878:38:26"},"variables":[{"name":"oldLen","nativeSrc":"8868:6:26","nodeType":"YulTypedName","src":"8868:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9009:4:26","nodeType":"YulIdentifier","src":"9009:4:26"},{"name":"oldLen","nativeSrc":"9015:6:26","nodeType":"YulIdentifier","src":"9015:6:26"},{"name":"newLen","nativeSrc":"9023:6:26","nodeType":"YulIdentifier","src":"9023:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"8963:45:26","nodeType":"YulIdentifier","src":"8963:45:26"},"nativeSrc":"8963:67:26","nodeType":"YulFunctionCall","src":"8963:67:26"},"nativeSrc":"8963:67:26","nodeType":"YulExpressionStatement","src":"8963:67:26"},{"nativeSrc":"9040:18:26","nodeType":"YulVariableDeclaration","src":"9040:18:26","value":{"kind":"number","nativeSrc":"9057:1:26","nodeType":"YulLiteral","src":"9057:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"9044:9:26","nodeType":"YulTypedName","src":"9044:9:26","type":""}]},{"nativeSrc":"9068:17:26","nodeType":"YulAssignment","src":"9068:17:26","value":{"kind":"number","nativeSrc":"9081:4:26","nodeType":"YulLiteral","src":"9081:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"9068:9:26","nodeType":"YulIdentifier","src":"9068:9:26"}]},{"cases":[{"body":{"nativeSrc":"9132:611:26","nodeType":"YulBlock","src":"9132:611:26","statements":[{"nativeSrc":"9146:37:26","nodeType":"YulVariableDeclaration","src":"9146:37:26","value":{"arguments":[{"name":"newLen","nativeSrc":"9165:6:26","nodeType":"YulIdentifier","src":"9165:6:26"},{"arguments":[{"kind":"number","nativeSrc":"9177:4:26","nodeType":"YulLiteral","src":"9177:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"9173:3:26","nodeType":"YulIdentifier","src":"9173:3:26"},"nativeSrc":"9173:9:26","nodeType":"YulFunctionCall","src":"9173:9:26"}],"functionName":{"name":"and","nativeSrc":"9161:3:26","nodeType":"YulIdentifier","src":"9161:3:26"},"nativeSrc":"9161:22:26","nodeType":"YulFunctionCall","src":"9161:22:26"},"variables":[{"name":"loopEnd","nativeSrc":"9150:7:26","nodeType":"YulTypedName","src":"9150:7:26","type":""}]},{"nativeSrc":"9197:51:26","nodeType":"YulVariableDeclaration","src":"9197:51:26","value":{"arguments":[{"name":"slot","nativeSrc":"9243:4:26","nodeType":"YulIdentifier","src":"9243:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9211:31:26","nodeType":"YulIdentifier","src":"9211:31:26"},"nativeSrc":"9211:37:26","nodeType":"YulFunctionCall","src":"9211:37:26"},"variables":[{"name":"dstPtr","nativeSrc":"9201:6:26","nodeType":"YulTypedName","src":"9201:6:26","type":""}]},{"nativeSrc":"9261:10:26","nodeType":"YulVariableDeclaration","src":"9261:10:26","value":{"kind":"number","nativeSrc":"9270:1:26","nodeType":"YulLiteral","src":"9270:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9265:1:26","nodeType":"YulTypedName","src":"9265:1:26","type":""}]},{"body":{"nativeSrc":"9329:163:26","nodeType":"YulBlock","src":"9329:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9354:6:26","nodeType":"YulIdentifier","src":"9354:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9372:3:26","nodeType":"YulIdentifier","src":"9372:3:26"},{"name":"srcOffset","nativeSrc":"9377:9:26","nodeType":"YulIdentifier","src":"9377:9:26"}],"functionName":{"name":"add","nativeSrc":"9368:3:26","nodeType":"YulIdentifier","src":"9368:3:26"},"nativeSrc":"9368:19:26","nodeType":"YulFunctionCall","src":"9368:19:26"}],"functionName":{"name":"mload","nativeSrc":"9362:5:26","nodeType":"YulIdentifier","src":"9362:5:26"},"nativeSrc":"9362:26:26","nodeType":"YulFunctionCall","src":"9362:26:26"}],"functionName":{"name":"sstore","nativeSrc":"9347:6:26","nodeType":"YulIdentifier","src":"9347:6:26"},"nativeSrc":"9347:42:26","nodeType":"YulFunctionCall","src":"9347:42:26"},"nativeSrc":"9347:42:26","nodeType":"YulExpressionStatement","src":"9347:42:26"},{"nativeSrc":"9406:24:26","nodeType":"YulAssignment","src":"9406:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"9420:6:26","nodeType":"YulIdentifier","src":"9420:6:26"},{"kind":"number","nativeSrc":"9428:1:26","nodeType":"YulLiteral","src":"9428:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9416:3:26","nodeType":"YulIdentifier","src":"9416:3:26"},"nativeSrc":"9416:14:26","nodeType":"YulFunctionCall","src":"9416:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"9406:6:26","nodeType":"YulIdentifier","src":"9406:6:26"}]},{"nativeSrc":"9447:31:26","nodeType":"YulAssignment","src":"9447:31:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"9464:9:26","nodeType":"YulIdentifier","src":"9464:9:26"},{"kind":"number","nativeSrc":"9475:2:26","nodeType":"YulLiteral","src":"9475:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9460:3:26","nodeType":"YulIdentifier","src":"9460:3:26"},"nativeSrc":"9460:18:26","nodeType":"YulFunctionCall","src":"9460:18:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"9447:9:26","nodeType":"YulIdentifier","src":"9447:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9295:1:26","nodeType":"YulIdentifier","src":"9295:1:26"},{"name":"loopEnd","nativeSrc":"9298:7:26","nodeType":"YulIdentifier","src":"9298:7:26"}],"functionName":{"name":"lt","nativeSrc":"9292:2:26","nodeType":"YulIdentifier","src":"9292:2:26"},"nativeSrc":"9292:14:26","nodeType":"YulFunctionCall","src":"9292:14:26"},"nativeSrc":"9284:208:26","nodeType":"YulForLoop","post":{"nativeSrc":"9307:21:26","nodeType":"YulBlock","src":"9307:21:26","statements":[{"nativeSrc":"9309:17:26","nodeType":"YulAssignment","src":"9309:17:26","value":{"arguments":[{"name":"i","nativeSrc":"9318:1:26","nodeType":"YulIdentifier","src":"9318:1:26"},{"kind":"number","nativeSrc":"9321:4:26","nodeType":"YulLiteral","src":"9321:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9314:3:26","nodeType":"YulIdentifier","src":"9314:3:26"},"nativeSrc":"9314:12:26","nodeType":"YulFunctionCall","src":"9314:12:26"},"variableNames":[{"name":"i","nativeSrc":"9309:1:26","nodeType":"YulIdentifier","src":"9309:1:26"}]}]},"pre":{"nativeSrc":"9288:3:26","nodeType":"YulBlock","src":"9288:3:26","statements":[]},"src":"9284:208:26"},{"body":{"nativeSrc":"9528:156:26","nodeType":"YulBlock","src":"9528:156:26","statements":[{"nativeSrc":"9546:43:26","nodeType":"YulVariableDeclaration","src":"9546:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9573:3:26","nodeType":"YulIdentifier","src":"9573:3:26"},{"name":"srcOffset","nativeSrc":"9578:9:26","nodeType":"YulIdentifier","src":"9578:9:26"}],"functionName":{"name":"add","nativeSrc":"9569:3:26","nodeType":"YulIdentifier","src":"9569:3:26"},"nativeSrc":"9569:19:26","nodeType":"YulFunctionCall","src":"9569:19:26"}],"functionName":{"name":"mload","nativeSrc":"9563:5:26","nodeType":"YulIdentifier","src":"9563:5:26"},"nativeSrc":"9563:26:26","nodeType":"YulFunctionCall","src":"9563:26:26"},"variables":[{"name":"lastValue","nativeSrc":"9550:9:26","nodeType":"YulTypedName","src":"9550:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9613:6:26","nodeType":"YulIdentifier","src":"9613:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"9640:9:26","nodeType":"YulIdentifier","src":"9640:9:26"},{"arguments":[{"name":"newLen","nativeSrc":"9655:6:26","nodeType":"YulIdentifier","src":"9655:6:26"},{"kind":"number","nativeSrc":"9663:4:26","nodeType":"YulLiteral","src":"9663:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"9651:3:26","nodeType":"YulIdentifier","src":"9651:3:26"},"nativeSrc":"9651:17:26","nodeType":"YulFunctionCall","src":"9651:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"9621:18:26","nodeType":"YulIdentifier","src":"9621:18:26"},"nativeSrc":"9621:48:26","nodeType":"YulFunctionCall","src":"9621:48:26"}],"functionName":{"name":"sstore","nativeSrc":"9606:6:26","nodeType":"YulIdentifier","src":"9606:6:26"},"nativeSrc":"9606:64:26","nodeType":"YulFunctionCall","src":"9606:64:26"},"nativeSrc":"9606:64:26","nodeType":"YulExpressionStatement","src":"9606:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"9511:7:26","nodeType":"YulIdentifier","src":"9511:7:26"},{"name":"newLen","nativeSrc":"9520:6:26","nodeType":"YulIdentifier","src":"9520:6:26"}],"functionName":{"name":"lt","nativeSrc":"9508:2:26","nodeType":"YulIdentifier","src":"9508:2:26"},"nativeSrc":"9508:19:26","nodeType":"YulFunctionCall","src":"9508:19:26"},"nativeSrc":"9505:179:26","nodeType":"YulIf","src":"9505:179:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9704:4:26","nodeType":"YulIdentifier","src":"9704:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"9718:6:26","nodeType":"YulIdentifier","src":"9718:6:26"},{"kind":"number","nativeSrc":"9726:1:26","nodeType":"YulLiteral","src":"9726:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"9714:3:26","nodeType":"YulIdentifier","src":"9714:3:26"},"nativeSrc":"9714:14:26","nodeType":"YulFunctionCall","src":"9714:14:26"},{"kind":"number","nativeSrc":"9730:1:26","nodeType":"YulLiteral","src":"9730:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9710:3:26","nodeType":"YulIdentifier","src":"9710:3:26"},"nativeSrc":"9710:22:26","nodeType":"YulFunctionCall","src":"9710:22:26"}],"functionName":{"name":"sstore","nativeSrc":"9697:6:26","nodeType":"YulIdentifier","src":"9697:6:26"},"nativeSrc":"9697:36:26","nodeType":"YulFunctionCall","src":"9697:36:26"},"nativeSrc":"9697:36:26","nodeType":"YulExpressionStatement","src":"9697:36:26"}]},"nativeSrc":"9125:618:26","nodeType":"YulCase","src":"9125:618:26","value":{"kind":"number","nativeSrc":"9130:1:26","nodeType":"YulLiteral","src":"9130:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"9760:222:26","nodeType":"YulBlock","src":"9760:222:26","statements":[{"nativeSrc":"9774:14:26","nodeType":"YulVariableDeclaration","src":"9774:14:26","value":{"kind":"number","nativeSrc":"9787:1:26","nodeType":"YulLiteral","src":"9787:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9778:5:26","nodeType":"YulTypedName","src":"9778:5:26","type":""}]},{"body":{"nativeSrc":"9811:67:26","nodeType":"YulBlock","src":"9811:67:26","statements":[{"nativeSrc":"9829:35:26","nodeType":"YulAssignment","src":"9829:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9848:3:26","nodeType":"YulIdentifier","src":"9848:3:26"},{"name":"srcOffset","nativeSrc":"9853:9:26","nodeType":"YulIdentifier","src":"9853:9:26"}],"functionName":{"name":"add","nativeSrc":"9844:3:26","nodeType":"YulIdentifier","src":"9844:3:26"},"nativeSrc":"9844:19:26","nodeType":"YulFunctionCall","src":"9844:19:26"}],"functionName":{"name":"mload","nativeSrc":"9838:5:26","nodeType":"YulIdentifier","src":"9838:5:26"},"nativeSrc":"9838:26:26","nodeType":"YulFunctionCall","src":"9838:26:26"},"variableNames":[{"name":"value","nativeSrc":"9829:5:26","nodeType":"YulIdentifier","src":"9829:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"9804:6:26","nodeType":"YulIdentifier","src":"9804:6:26"},"nativeSrc":"9801:77:26","nodeType":"YulIf","src":"9801:77:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9898:4:26","nodeType":"YulIdentifier","src":"9898:4:26"},{"arguments":[{"name":"value","nativeSrc":"9957:5:26","nodeType":"YulIdentifier","src":"9957:5:26"},{"name":"newLen","nativeSrc":"9964:6:26","nodeType":"YulIdentifier","src":"9964:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9904:52:26","nodeType":"YulIdentifier","src":"9904:52:26"},"nativeSrc":"9904:67:26","nodeType":"YulFunctionCall","src":"9904:67:26"}],"functionName":{"name":"sstore","nativeSrc":"9891:6:26","nodeType":"YulIdentifier","src":"9891:6:26"},"nativeSrc":"9891:81:26","nodeType":"YulFunctionCall","src":"9891:81:26"},"nativeSrc":"9891:81:26","nodeType":"YulExpressionStatement","src":"9891:81:26"}]},"nativeSrc":"9752:230:26","nodeType":"YulCase","src":"9752:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"9105:6:26","nodeType":"YulIdentifier","src":"9105:6:26"},{"kind":"number","nativeSrc":"9113:2:26","nodeType":"YulLiteral","src":"9113:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9102:2:26","nodeType":"YulIdentifier","src":"9102:2:26"},"nativeSrc":"9102:14:26","nodeType":"YulFunctionCall","src":"9102:14:26"},"nativeSrc":"9095:887:26","nodeType":"YulSwitch","src":"9095:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8593:1395:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8674:4:26","nodeType":"YulTypedName","src":"8674:4:26","type":""},{"name":"src","nativeSrc":"8680:3:26","nodeType":"YulTypedName","src":"8680:3:26","type":""}],"src":"8593:1395:26"},{"body":{"nativeSrc":"10039:32:26","nodeType":"YulBlock","src":"10039:32:26","statements":[{"nativeSrc":"10049:16:26","nodeType":"YulAssignment","src":"10049:16:26","value":{"name":"value","nativeSrc":"10060:5:26","nodeType":"YulIdentifier","src":"10060:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"10049:7:26","nodeType":"YulIdentifier","src":"10049:7:26"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"9994:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10021:5:26","nodeType":"YulTypedName","src":"10021:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10031:7:26","nodeType":"YulTypedName","src":"10031:7:26","type":""}],"src":"9994:77:26"},{"body":{"nativeSrc":"10142:53:26","nodeType":"YulBlock","src":"10142:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10159:3:26","nodeType":"YulIdentifier","src":"10159:3:26"},{"arguments":[{"name":"value","nativeSrc":"10182:5:26","nodeType":"YulIdentifier","src":"10182:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10164:17:26","nodeType":"YulIdentifier","src":"10164:17:26"},"nativeSrc":"10164:24:26","nodeType":"YulFunctionCall","src":"10164:24:26"}],"functionName":{"name":"mstore","nativeSrc":"10152:6:26","nodeType":"YulIdentifier","src":"10152:6:26"},"nativeSrc":"10152:37:26","nodeType":"YulFunctionCall","src":"10152:37:26"},"nativeSrc":"10152:37:26","nodeType":"YulExpressionStatement","src":"10152:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10077:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10130:5:26","nodeType":"YulTypedName","src":"10130:5:26","type":""},{"name":"pos","nativeSrc":"10137:3:26","nodeType":"YulTypedName","src":"10137:3:26","type":""}],"src":"10077:118:26"},{"body":{"nativeSrc":"10266:53:26","nodeType":"YulBlock","src":"10266:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10283:3:26","nodeType":"YulIdentifier","src":"10283:3:26"},{"arguments":[{"name":"value","nativeSrc":"10306:5:26","nodeType":"YulIdentifier","src":"10306:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10288:17:26","nodeType":"YulIdentifier","src":"10288:17:26"},"nativeSrc":"10288:24:26","nodeType":"YulFunctionCall","src":"10288:24:26"}],"functionName":{"name":"mstore","nativeSrc":"10276:6:26","nodeType":"YulIdentifier","src":"10276:6:26"},"nativeSrc":"10276:37:26","nodeType":"YulFunctionCall","src":"10276:37:26"},"nativeSrc":"10276:37:26","nodeType":"YulExpressionStatement","src":"10276:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10201:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10254:5:26","nodeType":"YulTypedName","src":"10254:5:26","type":""},{"name":"pos","nativeSrc":"10261:3:26","nodeType":"YulTypedName","src":"10261:3:26","type":""}],"src":"10201:118:26"},{"body":{"nativeSrc":"10390:53:26","nodeType":"YulBlock","src":"10390:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10407:3:26","nodeType":"YulIdentifier","src":"10407:3:26"},{"arguments":[{"name":"value","nativeSrc":"10430:5:26","nodeType":"YulIdentifier","src":"10430:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10412:17:26","nodeType":"YulIdentifier","src":"10412:17:26"},"nativeSrc":"10412:24:26","nodeType":"YulFunctionCall","src":"10412:24:26"}],"functionName":{"name":"mstore","nativeSrc":"10400:6:26","nodeType":"YulIdentifier","src":"10400:6:26"},"nativeSrc":"10400:37:26","nodeType":"YulFunctionCall","src":"10400:37:26"},"nativeSrc":"10400:37:26","nodeType":"YulExpressionStatement","src":"10400:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10325:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10378:5:26","nodeType":"YulTypedName","src":"10378:5:26","type":""},{"name":"pos","nativeSrc":"10385:3:26","nodeType":"YulTypedName","src":"10385:3:26","type":""}],"src":"10325:118:26"},{"body":{"nativeSrc":"10659:454:26","nodeType":"YulBlock","src":"10659:454:26","statements":[{"nativeSrc":"10669:27:26","nodeType":"YulAssignment","src":"10669:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10681:9:26","nodeType":"YulIdentifier","src":"10681:9:26"},{"kind":"number","nativeSrc":"10692:3:26","nodeType":"YulLiteral","src":"10692:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10677:3:26","nodeType":"YulIdentifier","src":"10677:3:26"},"nativeSrc":"10677:19:26","nodeType":"YulFunctionCall","src":"10677:19:26"},"variableNames":[{"name":"tail","nativeSrc":"10669:4:26","nodeType":"YulIdentifier","src":"10669:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10750:6:26","nodeType":"YulIdentifier","src":"10750:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10763:9:26","nodeType":"YulIdentifier","src":"10763:9:26"},{"kind":"number","nativeSrc":"10774:1:26","nodeType":"YulLiteral","src":"10774:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10759:3:26","nodeType":"YulIdentifier","src":"10759:3:26"},"nativeSrc":"10759:17:26","nodeType":"YulFunctionCall","src":"10759:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10706:43:26","nodeType":"YulIdentifier","src":"10706:43:26"},"nativeSrc":"10706:71:26","nodeType":"YulFunctionCall","src":"10706:71:26"},"nativeSrc":"10706:71:26","nodeType":"YulExpressionStatement","src":"10706:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10831:6:26","nodeType":"YulIdentifier","src":"10831:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10844:9:26","nodeType":"YulIdentifier","src":"10844:9:26"},{"kind":"number","nativeSrc":"10855:2:26","nodeType":"YulLiteral","src":"10855:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10840:3:26","nodeType":"YulIdentifier","src":"10840:3:26"},"nativeSrc":"10840:18:26","nodeType":"YulFunctionCall","src":"10840:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10787:43:26","nodeType":"YulIdentifier","src":"10787:43:26"},"nativeSrc":"10787:72:26","nodeType":"YulFunctionCall","src":"10787:72:26"},"nativeSrc":"10787:72:26","nodeType":"YulExpressionStatement","src":"10787:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10913:6:26","nodeType":"YulIdentifier","src":"10913:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10926:9:26","nodeType":"YulIdentifier","src":"10926:9:26"},{"kind":"number","nativeSrc":"10937:2:26","nodeType":"YulLiteral","src":"10937:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10922:3:26","nodeType":"YulIdentifier","src":"10922:3:26"},"nativeSrc":"10922:18:26","nodeType":"YulFunctionCall","src":"10922:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10869:43:26","nodeType":"YulIdentifier","src":"10869:43:26"},"nativeSrc":"10869:72:26","nodeType":"YulFunctionCall","src":"10869:72:26"},"nativeSrc":"10869:72:26","nodeType":"YulExpressionStatement","src":"10869:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10995:6:26","nodeType":"YulIdentifier","src":"10995:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"11008:9:26","nodeType":"YulIdentifier","src":"11008:9:26"},{"kind":"number","nativeSrc":"11019:2:26","nodeType":"YulLiteral","src":"11019:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11004:3:26","nodeType":"YulIdentifier","src":"11004:3:26"},"nativeSrc":"11004:18:26","nodeType":"YulFunctionCall","src":"11004:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10951:43:26","nodeType":"YulIdentifier","src":"10951:43:26"},"nativeSrc":"10951:72:26","nodeType":"YulFunctionCall","src":"10951:72:26"},"nativeSrc":"10951:72:26","nodeType":"YulExpressionStatement","src":"10951:72:26"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11077:6:26","nodeType":"YulIdentifier","src":"11077:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"11090:9:26","nodeType":"YulIdentifier","src":"11090:9:26"},{"kind":"number","nativeSrc":"11101:3:26","nodeType":"YulLiteral","src":"11101:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11086:3:26","nodeType":"YulIdentifier","src":"11086:3:26"},"nativeSrc":"11086:19:26","nodeType":"YulFunctionCall","src":"11086:19:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11033:43:26","nodeType":"YulIdentifier","src":"11033:43:26"},"nativeSrc":"11033:73:26","nodeType":"YulFunctionCall","src":"11033:73:26"},"nativeSrc":"11033:73:26","nodeType":"YulExpressionStatement","src":"11033:73:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10449:664:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10599:9:26","nodeType":"YulTypedName","src":"10599:9:26","type":""},{"name":"value4","nativeSrc":"10611:6:26","nodeType":"YulTypedName","src":"10611:6:26","type":""},{"name":"value3","nativeSrc":"10619:6:26","nodeType":"YulTypedName","src":"10619:6:26","type":""},{"name":"value2","nativeSrc":"10627:6:26","nodeType":"YulTypedName","src":"10627:6:26","type":""},{"name":"value1","nativeSrc":"10635:6:26","nodeType":"YulTypedName","src":"10635:6:26","type":""},{"name":"value0","nativeSrc":"10643:6:26","nodeType":"YulTypedName","src":"10643:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10654:4:26","nodeType":"YulTypedName","src":"10654:4:26","type":""}],"src":"10449:664:26"},{"body":{"nativeSrc":"11215:73:26","nodeType":"YulBlock","src":"11215:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11232:3:26","nodeType":"YulIdentifier","src":"11232:3:26"},{"name":"length","nativeSrc":"11237:6:26","nodeType":"YulIdentifier","src":"11237:6:26"}],"functionName":{"name":"mstore","nativeSrc":"11225:6:26","nodeType":"YulIdentifier","src":"11225:6:26"},"nativeSrc":"11225:19:26","nodeType":"YulFunctionCall","src":"11225:19:26"},"nativeSrc":"11225:19:26","nodeType":"YulExpressionStatement","src":"11225:19:26"},{"nativeSrc":"11253:29:26","nodeType":"YulAssignment","src":"11253:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"11272:3:26","nodeType":"YulIdentifier","src":"11272:3:26"},{"kind":"number","nativeSrc":"11277:4:26","nodeType":"YulLiteral","src":"11277:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11268:3:26","nodeType":"YulIdentifier","src":"11268:3:26"},"nativeSrc":"11268:14:26","nodeType":"YulFunctionCall","src":"11268:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"11253:11:26","nodeType":"YulIdentifier","src":"11253:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11119:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11187:3:26","nodeType":"YulTypedName","src":"11187:3:26","type":""},{"name":"length","nativeSrc":"11192:6:26","nodeType":"YulTypedName","src":"11192:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11203:11:26","nodeType":"YulTypedName","src":"11203:11:26","type":""}],"src":"11119:169:26"},{"body":{"nativeSrc":"11386:285:26","nodeType":"YulBlock","src":"11386:285:26","statements":[{"nativeSrc":"11396:53:26","nodeType":"YulVariableDeclaration","src":"11396:53:26","value":{"arguments":[{"name":"value","nativeSrc":"11443:5:26","nodeType":"YulIdentifier","src":"11443:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"11410:32:26","nodeType":"YulIdentifier","src":"11410:32:26"},"nativeSrc":"11410:39:26","nodeType":"YulFunctionCall","src":"11410:39:26"},"variables":[{"name":"length","nativeSrc":"11400:6:26","nodeType":"YulTypedName","src":"11400:6:26","type":""}]},{"nativeSrc":"11458:78:26","nodeType":"YulAssignment","src":"11458:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"11524:3:26","nodeType":"YulIdentifier","src":"11524:3:26"},{"name":"length","nativeSrc":"11529:6:26","nodeType":"YulIdentifier","src":"11529:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11465:58:26","nodeType":"YulIdentifier","src":"11465:58:26"},"nativeSrc":"11465:71:26","nodeType":"YulFunctionCall","src":"11465:71:26"},"variableNames":[{"name":"pos","nativeSrc":"11458:3:26","nodeType":"YulIdentifier","src":"11458:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11584:5:26","nodeType":"YulIdentifier","src":"11584:5:26"},{"kind":"number","nativeSrc":"11591:4:26","nodeType":"YulLiteral","src":"11591:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11580:3:26","nodeType":"YulIdentifier","src":"11580:3:26"},"nativeSrc":"11580:16:26","nodeType":"YulFunctionCall","src":"11580:16:26"},{"name":"pos","nativeSrc":"11598:3:26","nodeType":"YulIdentifier","src":"11598:3:26"},{"name":"length","nativeSrc":"11603:6:26","nodeType":"YulIdentifier","src":"11603:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11545:34:26","nodeType":"YulIdentifier","src":"11545:34:26"},"nativeSrc":"11545:65:26","nodeType":"YulFunctionCall","src":"11545:65:26"},"nativeSrc":"11545:65:26","nodeType":"YulExpressionStatement","src":"11545:65:26"},{"nativeSrc":"11619:46:26","nodeType":"YulAssignment","src":"11619:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"11630:3:26","nodeType":"YulIdentifier","src":"11630:3:26"},{"arguments":[{"name":"length","nativeSrc":"11657:6:26","nodeType":"YulIdentifier","src":"11657:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11635:21:26","nodeType":"YulIdentifier","src":"11635:21:26"},"nativeSrc":"11635:29:26","nodeType":"YulFunctionCall","src":"11635:29:26"}],"functionName":{"name":"add","nativeSrc":"11626:3:26","nodeType":"YulIdentifier","src":"11626:3:26"},"nativeSrc":"11626:39:26","nodeType":"YulFunctionCall","src":"11626:39:26"},"variableNames":[{"name":"end","nativeSrc":"11619:3:26","nodeType":"YulIdentifier","src":"11619:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11294:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11367:5:26","nodeType":"YulTypedName","src":"11367:5:26","type":""},{"name":"pos","nativeSrc":"11374:3:26","nodeType":"YulTypedName","src":"11374:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11382:3:26","nodeType":"YulTypedName","src":"11382:3:26","type":""}],"src":"11294:377:26"},{"body":{"nativeSrc":"11795:195:26","nodeType":"YulBlock","src":"11795:195:26","statements":[{"nativeSrc":"11805:26:26","nodeType":"YulAssignment","src":"11805:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"11817:9:26","nodeType":"YulIdentifier","src":"11817:9:26"},{"kind":"number","nativeSrc":"11828:2:26","nodeType":"YulLiteral","src":"11828:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11813:3:26","nodeType":"YulIdentifier","src":"11813:3:26"},"nativeSrc":"11813:18:26","nodeType":"YulFunctionCall","src":"11813:18:26"},"variableNames":[{"name":"tail","nativeSrc":"11805:4:26","nodeType":"YulIdentifier","src":"11805:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11852:9:26","nodeType":"YulIdentifier","src":"11852:9:26"},{"kind":"number","nativeSrc":"11863:1:26","nodeType":"YulLiteral","src":"11863:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11848:3:26","nodeType":"YulIdentifier","src":"11848:3:26"},"nativeSrc":"11848:17:26","nodeType":"YulFunctionCall","src":"11848:17:26"},{"arguments":[{"name":"tail","nativeSrc":"11871:4:26","nodeType":"YulIdentifier","src":"11871:4:26"},{"name":"headStart","nativeSrc":"11877:9:26","nodeType":"YulIdentifier","src":"11877:9:26"}],"functionName":{"name":"sub","nativeSrc":"11867:3:26","nodeType":"YulIdentifier","src":"11867:3:26"},"nativeSrc":"11867:20:26","nodeType":"YulFunctionCall","src":"11867:20:26"}],"functionName":{"name":"mstore","nativeSrc":"11841:6:26","nodeType":"YulIdentifier","src":"11841:6:26"},"nativeSrc":"11841:47:26","nodeType":"YulFunctionCall","src":"11841:47:26"},"nativeSrc":"11841:47:26","nodeType":"YulExpressionStatement","src":"11841:47:26"},{"nativeSrc":"11897:86:26","nodeType":"YulAssignment","src":"11897:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"11969:6:26","nodeType":"YulIdentifier","src":"11969:6:26"},{"name":"tail","nativeSrc":"11978:4:26","nodeType":"YulIdentifier","src":"11978:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11905:63:26","nodeType":"YulIdentifier","src":"11905:63:26"},"nativeSrc":"11905:78:26","nodeType":"YulFunctionCall","src":"11905:78:26"},"variableNames":[{"name":"tail","nativeSrc":"11897:4:26","nodeType":"YulIdentifier","src":"11897:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11677:313:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11767:9:26","nodeType":"YulTypedName","src":"11767:9:26","type":""},{"name":"value0","nativeSrc":"11779:6:26","nodeType":"YulTypedName","src":"11779:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11790:4:26","nodeType":"YulTypedName","src":"11790:4:26","type":""}],"src":"11677:313:26"},{"body":{"nativeSrc":"12054:40:26","nodeType":"YulBlock","src":"12054:40:26","statements":[{"nativeSrc":"12065:22:26","nodeType":"YulAssignment","src":"12065:22:26","value":{"arguments":[{"name":"value","nativeSrc":"12081:5:26","nodeType":"YulIdentifier","src":"12081:5:26"}],"functionName":{"name":"mload","nativeSrc":"12075:5:26","nodeType":"YulIdentifier","src":"12075:5:26"},"nativeSrc":"12075:12:26","nodeType":"YulFunctionCall","src":"12075:12:26"},"variableNames":[{"name":"length","nativeSrc":"12065:6:26","nodeType":"YulIdentifier","src":"12065:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11996:98:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12037:5:26","nodeType":"YulTypedName","src":"12037:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12047:6:26","nodeType":"YulTypedName","src":"12047:6:26","type":""}],"src":"11996:98:26"},{"body":{"nativeSrc":"12156:60:26","nodeType":"YulBlock","src":"12156:60:26","statements":[{"nativeSrc":"12166:11:26","nodeType":"YulAssignment","src":"12166:11:26","value":{"name":"ptr","nativeSrc":"12174:3:26","nodeType":"YulIdentifier","src":"12174:3:26"},"variableNames":[{"name":"data","nativeSrc":"12166:4:26","nodeType":"YulIdentifier","src":"12166:4:26"}]},{"nativeSrc":"12187:22:26","nodeType":"YulAssignment","src":"12187:22:26","value":{"arguments":[{"name":"ptr","nativeSrc":"12199:3:26","nodeType":"YulIdentifier","src":"12199:3:26"},{"kind":"number","nativeSrc":"12204:4:26","nodeType":"YulLiteral","src":"12204:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12195:3:26","nodeType":"YulIdentifier","src":"12195:3:26"},"nativeSrc":"12195:14:26","nodeType":"YulFunctionCall","src":"12195:14:26"},"variableNames":[{"name":"data","nativeSrc":"12187:4:26","nodeType":"YulIdentifier","src":"12187:4:26"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12100:116:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12143:3:26","nodeType":"YulTypedName","src":"12143:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12151:4:26","nodeType":"YulTypedName","src":"12151:4:26","type":""}],"src":"12100:116:26"},{"body":{"nativeSrc":"12277:99:26","nodeType":"YulBlock","src":"12277:99:26","statements":[{"nativeSrc":"12288:42:26","nodeType":"YulVariableDeclaration","src":"12288:42:26","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"12325:3:26","nodeType":"YulIdentifier","src":"12325:3:26"}],"functionName":{"name":"mload","nativeSrc":"12319:5:26","nodeType":"YulIdentifier","src":"12319:5:26"},"nativeSrc":"12319:10:26","nodeType":"YulFunctionCall","src":"12319:10:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12301:17:26","nodeType":"YulIdentifier","src":"12301:17:26"},"nativeSrc":"12301:29:26","nodeType":"YulFunctionCall","src":"12301:29:26"},"variables":[{"name":"value","nativeSrc":"12292:5:26","nodeType":"YulTypedName","src":"12292:5:26","type":""}]},{"nativeSrc":"12340:29:26","nodeType":"YulAssignment","src":"12340:29:26","value":{"name":"value","nativeSrc":"12364:5:26","nodeType":"YulIdentifier","src":"12364:5:26"},"variableNames":[{"name":"returnValue","nativeSrc":"12340:11:26","nodeType":"YulIdentifier","src":"12340:11:26"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"12222:154:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12257:3:26","nodeType":"YulTypedName","src":"12257:3:26","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"12265:11:26","nodeType":"YulTypedName","src":"12265:11:26","type":""}],"src":"12222:154:26"},{"body":{"nativeSrc":"12472:504:26","nodeType":"YulBlock","src":"12472:504:26","statements":[{"nativeSrc":"12483:52:26","nodeType":"YulVariableDeclaration","src":"12483:52:26","value":{"arguments":[{"name":"array","nativeSrc":"12529:5:26","nodeType":"YulIdentifier","src":"12529:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12497:31:26","nodeType":"YulIdentifier","src":"12497:31:26"},"nativeSrc":"12497:38:26","nodeType":"YulFunctionCall","src":"12497:38:26"},"variables":[{"name":"length","nativeSrc":"12487:6:26","nodeType":"YulTypedName","src":"12487:6:26","type":""}]},{"nativeSrc":"12544:21:26","nodeType":"YulVariableDeclaration","src":"12544:21:26","value":{"name":"array","nativeSrc":"12560:5:26","nodeType":"YulIdentifier","src":"12560:5:26"},"variables":[{"name":"dataArea","nativeSrc":"12548:8:26","nodeType":"YulTypedName","src":"12548:8:26","type":""}]},{"nativeSrc":"12575:52:26","nodeType":"YulAssignment","src":"12575:52:26","value":{"arguments":[{"name":"array","nativeSrc":"12621:5:26","nodeType":"YulIdentifier","src":"12621:5:26"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12587:33:26","nodeType":"YulIdentifier","src":"12587:33:26"},"nativeSrc":"12587:40:26","nodeType":"YulFunctionCall","src":"12587:40:26"},"variableNames":[{"name":"dataArea","nativeSrc":"12575:8:26","nodeType":"YulIdentifier","src":"12575:8:26"}]},{"nativeSrc":"12637:44:26","nodeType":"YulAssignment","src":"12637:44:26","value":{"arguments":[{"name":"dataArea","nativeSrc":"12672:8:26","nodeType":"YulIdentifier","src":"12672:8:26"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12646:25:26","nodeType":"YulIdentifier","src":"12646:25:26"},"nativeSrc":"12646:35:26","nodeType":"YulFunctionCall","src":"12646:35:26"},"variableNames":[{"name":"value","nativeSrc":"12637:5:26","nodeType":"YulIdentifier","src":"12637:5:26"}]},{"body":{"nativeSrc":"12709:260:26","nodeType":"YulBlock","src":"12709:260:26","statements":[{"nativeSrc":"12723:236:26","nodeType":"YulAssignment","src":"12723:236:26","value":{"arguments":[{"name":"value","nativeSrc":"12753:5:26","nodeType":"YulIdentifier","src":"12753:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12820:1:26","nodeType":"YulLiteral","src":"12820:1:26","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"12827:2:26","nodeType":"YulLiteral","src":"12827:2:26","type":"","value":"32"},{"name":"length","nativeSrc":"12831:6:26","nodeType":"YulIdentifier","src":"12831:6:26"}],"functionName":{"name":"sub","nativeSrc":"12823:3:26","nodeType":"YulIdentifier","src":"12823:3:26"},"nativeSrc":"12823:15:26","nodeType":"YulFunctionCall","src":"12823:15:26"}],"functionName":{"name":"mul","nativeSrc":"12816:3:26","nodeType":"YulIdentifier","src":"12816:3:26"},"nativeSrc":"12816:23:26","nodeType":"YulFunctionCall","src":"12816:23:26"},{"kind":"number","nativeSrc":"12861:66:26","nodeType":"YulLiteral","src":"12861:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12776:18:26","nodeType":"YulIdentifier","src":"12776:18:26"},"nativeSrc":"12776:169:26","nodeType":"YulFunctionCall","src":"12776:169:26"}],"functionName":{"name":"and","nativeSrc":"12732:3:26","nodeType":"YulIdentifier","src":"12732:3:26"},"nativeSrc":"12732:227:26","nodeType":"YulFunctionCall","src":"12732:227:26"},"variableNames":[{"name":"value","nativeSrc":"12723:5:26","nodeType":"YulIdentifier","src":"12723:5:26"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12697:6:26","nodeType":"YulIdentifier","src":"12697:6:26"},{"kind":"number","nativeSrc":"12705:2:26","nodeType":"YulLiteral","src":"12705:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12694:2:26","nodeType":"YulIdentifier","src":"12694:2:26"},"nativeSrc":"12694:14:26","nodeType":"YulFunctionCall","src":"12694:14:26"},"nativeSrc":"12691:278:26","nodeType":"YulIf","src":"12691:278:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"12382:594:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12456:5:26","nodeType":"YulTypedName","src":"12456:5:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12466:5:26","nodeType":"YulTypedName","src":"12466:5:26","type":""}],"src":"12382:594:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101806040526001600c60006101000a81548160ff02191690831515021790555073355e559bca86346b82d58be0460d661db481e05e73ffffffffffffffffffffffffffffffffffffffff166101609073ffffffffffffffffffffffffffffffffffffffff1681525034801561007457600080fd5b50604051613cff380380613cff833981810160405281019061009691906106c0565b81806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250848481600390816100df919061099c565b5080600490816100ef919061099c565b50505061010660058361022960201b90919060201c565b610120818152505061012260068261022960201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505061015f61027960201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506101b06000801b876102d460201b60201c565b506101e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876102d460201b60201c565b508460098190555083600a8190555082600b8190555081600e9081610206919061099c565b5080600f9081610216919061099c565b5042600d81905550505050505050610bfb565b600060208351101561024b57610244836103d260201b60201c565b9050610273565b8261025b8361043a60201b60201c565b600001908161026a919061099c565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016102b9959493929190610aa5565b60405160208183030381529060405280519060200120905090565b60006102e6838361044460201b60201c565b6103c75760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103646104af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506103cc565b600090505b92915050565b600080829050601f8151111561041f57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016104169190610b42565b60405180910390fd5b80518161042b90610b94565b60001c1760001b915050919050565b6000819050919050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f6826104cb565b9050919050565b610506816104eb565b811461051157600080fd5b50565b600081519050610523816104fd565b92915050565b6000819050919050565b61053c81610529565b811461054757600080fd5b50565b60008151905061055981610533565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105b282610569565b810181811067ffffffffffffffff821117156105d1576105d061057a565b5b80604052505050565b60006105e46104b7565b90506105f082826105a9565b919050565b600067ffffffffffffffff8211156106105761060f61057a565b5b61061982610569565b9050602081019050919050565b60005b83811015610644578082015181840152602081019050610629565b60008484015250505050565b600061066361065e846105f5565b6105da565b90508281526020810184848401111561067f5761067e610564565b5b61068a848285610626565b509392505050565b600082601f8301126106a7576106a661055f565b5b81516106b7848260208601610650565b91505092915050565b60008060008060008060c087890312156106dd576106dc6104c1565b5b60006106eb89828a01610514565b96505060206106fc89828a0161054a565b955050604061070d89828a0161054a565b945050606061071e89828a0161054a565b935050608087015167ffffffffffffffff81111561073f5761073e6104c6565b5b61074b89828a01610692565b92505060a087015167ffffffffffffffff81111561076c5761076b6104c6565b5b61077889828a01610692565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107d757607f821691505b6020821081036107ea576107e9610790565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610815565b61085c8683610815565b95508019841693508086168417925050509392505050565b6000819050919050565b600061089961089461088f84610529565b610874565b610529565b9050919050565b6000819050919050565b6108b38361087e565b6108c76108bf826108a0565b848454610822565b825550505050565b600090565b6108dc6108cf565b6108e78184846108aa565b505050565b5b8181101561090b576109006000826108d4565b6001810190506108ed565b5050565b601f82111561095057610921816107f0565b61092a84610805565b81016020851015610939578190505b61094d61094585610805565b8301826108ec565b50505b505050565b600082821c905092915050565b600061097360001984600802610955565b1980831691505092915050565b600061098c8383610962565b9150826002028217905092915050565b6109a582610785565b67ffffffffffffffff8111156109be576109bd61057a565b5b6109c882546107bf565b6109d382828561090f565b600060209050601f831160018114610a0657600084156109f4578287015190505b6109fe8582610980565b865550610a66565b601f198416610a14866107f0565b60005b82811015610a3c57848901518255600182019150602085019450602081019050610a17565b86831015610a595784890151610a55601f891682610962565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b610a8181610a6e565b82525050565b610a9081610529565b82525050565b610a9f816104eb565b82525050565b600060a082019050610aba6000830188610a78565b610ac76020830187610a78565b610ad46040830186610a78565b610ae16060830185610a87565b610aee6080830184610a96565b9695505050505050565b600082825260208201905092915050565b6000610b1482610785565b610b1e8185610af8565b9350610b2e818560208601610626565b610b3781610569565b840191505092915050565b60006020820190508181036000830152610b5c8184610b09565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000610b8b8251610a6e565b80915050919050565b6000610b9f82610b64565b82610ba984610b6f565b9050610bb481610b7f565b92506020821015610bf457610bef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802610815565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161016051613098610c6760003960008181610a640152610dbf0152600061182b015260006117f001526000611c4b01526000611c2a01526000611576015260006115cc015260006115f501526130986000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c8063735328021161013057806395d89b41116100b8578063d547741f1161007c578063d547741f14610687578063d5abeb01146106a3578063dd62ed3e146106c1578063e488ede8146106f1578063e6ad10e11461070d57610232565b806395d89b41146105e1578063a217fddf146105ff578063a9059cbb1461061d578063d505accf1461064d578063d53913931461066957610232565b806381fb8b06116100ff57806381fb8b061461054757806383de3e6a1461056557806384b0196e1461056f5780638e80ff5d1461059357806391d14854146105b157610232565b806373532802146104bf57806375b238fc146104db5780637b61c320146104f95780637ecebe001461051757610232565b80633644e515116101be57806355233b481161018257806355233b481461041957806369e2f0fb146104375780636c02a931146104535780636c8597fc1461047157806370a082311461048f57610232565b80633644e5151461038957806336568abe146103a75780633dd1eb61146103c357806340c10f19146103df57806348709a93146103fb57610232565b806318160ddd1161020557806318160ddd146102d157806323b872dd146102ef578063248a9ca31461031f5780632f2ff15d1461034f578063313ce5671461036b57610232565b806301ffc9a71461023757806306fdde03146102675780630914d4da14610285578063095ea7b3146102a1575b600080fd5b610251600480360381019061024c919061232a565b61072b565b60405161025e9190612372565b60405180910390f35b61026f6107a5565b60405161027c919061241d565b60405180910390f35b61029f600480360381019061029a9190612475565b610837565b005b6102bb60048036038101906102b69190612500565b610893565b6040516102c89190612372565b60405180910390f35b6102d96108b6565b6040516102e6919061254f565b60405180910390f35b6103096004803603810190610304919061256a565b6108c0565b6040516103169190612372565b60405180910390f35b610339600480360381019061033491906125f3565b6108ef565b604051610346919061262f565b60405180910390f35b6103696004803603810190610364919061264a565b61090f565b005b610373610931565b60405161038091906126a6565b60405180910390f35b61039161093a565b60405161039e919061262f565b60405180910390f35b6103c160048036038101906103bc919061264a565b610949565b005b6103dd60048036038101906103d891906126c1565b6109c4565b005b6103f960048036038101906103f49190612500565b6109ff565b005b610403610b8a565b6040516104109190612372565b60405180910390f35b610421610b9d565b60405161042e919061254f565b60405180910390f35b610451600480360381019061044c91906126c1565b610ba3565b005b61045b610bde565b604051610468919061241d565b60405180910390f35b610479610c6c565b604051610486919061254f565b60405180910390f35b6104a960048036038101906104a491906126c1565b610c72565b6040516104b6919061254f565b60405180910390f35b6104d960048036038101906104d49190612475565b610cba565b005b6104e3610d16565b6040516104f0919061262f565b60405180910390f35b610501610d1d565b60405161050e919061241d565b60405180910390f35b610531600480360381019061052c91906126c1565b610dab565b60405161053e919061254f565b60405180910390f35b61054f610dbd565b60405161055c91906126fd565b60405180910390f35b61056d610de1565b005b610577610e0c565b60405161058a9796959493929190612811565b60405180910390f35b61059b610eb6565b6040516105a8919061254f565b60405180910390f35b6105cb60048036038101906105c6919061264a565b610ebc565b6040516105d89190612372565b60405180910390f35b6105e9610f27565b6040516105f6919061241d565b60405180910390f35b610607610fb9565b604051610614919061262f565b60405180910390f35b61063760048036038101906106329190612500565b610fc0565b6040516106449190612372565b60405180910390f35b610667600480360381019061066291906128c1565b610fe3565b005b61067161112b565b60405161067e919061262f565b60405180910390f35b6106a1600480360381019061069c919061264a565b61114f565b005b6106ab611171565b6040516106b8919061254f565b60405180910390f35b6106db60048036038101906106d69190612963565b611177565b6040516106e8919061254f565b60405180910390f35b61070b60048036038101906107069190612475565b6111fe565b005b61071561125a565b604051610722919061254f565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079e575061079d82611260565b5b9050919050565b6060600380546107b4906129d2565b80601f01602080910402602001604051908101604052809291908181526020018280546107e0906129d2565b801561082d5780601f106108025761010080835404028352916020019161082d565b820191906000526020600020905b81548152906001019060200180831161081057829003601f168201915b5050505050905090565b6000801b610844816112ca565b600a548210610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90612a75565b60405180910390fd5b81600a819055505050565b60008061089e6112de565b90506108ab8185856112e6565b600191505092915050565b6000600254905090565b6000806108cb6112de565b90506108d88582856112f8565b6108e385858561138c565b60019150509392505050565b600060086000838152602001908152602001600020600101549050919050565b610918826108ef565b610921816112ca565b61092b8383611480565b50505050565b60006012905090565b6000610944611572565b905090565b6109516112de565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b5576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bf8282611629565b505050565b6000801b6109d1816112ca565b6109fb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361090f565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a29816112ca565b6000610a336108b6565b90506000620186a06101f485610a499190612ac4565b610a539190612b35565b9050610a5f858561171c565b610a897f00000000000000000000000000000000000000000000000000000000000000008261171c565b42600d81905550600954818584610aa09190612b66565b610aaa9190612b66565b1115610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290612be6565b60405180910390fd5b600a548210610b83576000600d5442610b049190612c06565b9050600063bbf81e0082600b5486610b1c9190612ac4565b610b269190612ac4565b610b309190612b35565b9050808387610b3f9190612b66565b1115610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790612c86565b60405180910390fd5b50505b5050505050565b600c60009054906101000a900460ff1681565b600b5481565b6000801b610bb0816112ca565b610bda7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361114f565b5050565b600e8054610beb906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c17906129d2565b8015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b505050505081565b6101f481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b610cc7816112ca565b6009548210610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0290612d18565b60405180910390fd5b816009819055505050565b6000801b81565b600f8054610d2a906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d56906129d2565b8015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505050505081565b6000610db68261179e565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000801b610dee816112ca565b6000600c60006101000a81548160ff02191690831515021790555050565b600060608060008060006060610e206117e7565b610e28611822565b46306000801b600067ffffffffffffffff811115610e4957610e48612d38565b5b604051908082528060200260200182016040528015610e775781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600d5481565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610f36906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f62906129d2565b8015610faf5780601f10610f8457610100808354040283529160200191610faf565b820191906000526020600020905b815481529060010190602001808311610f9257829003601f168201915b5050505050905090565b6000801b81565b600080610fcb6112de565b9050610fd881858561138c565b600191505092915050565b8342111561102857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161101f919061254f565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886110578c61185d565b8960405160200161106d96959493929190612d67565b6040516020818303038152906040528051906020012090506000611090826118b4565b905060006110a0828787876118ce565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461111457808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161110b929190612dc8565b60405180910390fd5b61111f8a8a8a6112e6565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611158826108ef565b611161816112ca565b61116b8383611629565b50505050565b60095481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000801b61120b816112ca565b600b54821061124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124690612e89565b60405180910390fd5b81600b819055505050565b600a5481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6112db816112d66112de565b6118fe565b50565b600033905090565b6112f3838383600161194f565b505050565b60006113048484611177565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113865781811015611376578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161136d93929190612ea9565b60405180910390fd5b6113858484848403600061194f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fe5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113f591906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114705760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161146791906126fd565b60405180910390fd5b61147b838383611b26565b505050565b600061148c8383610ebc565b6115675760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115046112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061156c565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156115ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561161b577f00000000000000000000000000000000000000000000000000000000000000009050611626565b611623611c05565b90505b90565b60006116358383610ebc565b156117115760006008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116ae6112de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611716565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361178e5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161178591906126fd565b60405180910390fd5b61179a60008383611b26565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061181d60057f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b606061185860067f0000000000000000000000000000000000000000000000000000000000000000611c9b90919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006118c76118c1611572565b83611d4b565b9050919050565b6000806000806118e088888888611d8c565b9250925092506118f08282611e80565b829350505050949350505050565b6119088282610ebc565b61194b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611942929190612ee0565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119c15760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119b891906126fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a335760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a2a91906126fd565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611b20578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b17919061254f565b60405180910390a35b50505050565b600c60009054906101000a900460ff1615611bf557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611ba25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611bb557506000611bb383610c72565b115b611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb90612f7b565b60405180910390fd5b5b611c00838383611fe4565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611c80959493929190612f9b565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611cb857611cb183612209565b9050611d45565b818054611cc4906129d2565b80601f0160208091040260200160405190810160405280929190818152602001828054611cf0906129d2565b8015611d3d5780601f10611d1257610100808354040283529160200191611d3d565b820191906000526020600020905b815481529060010190602001808311611d2057829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611dcc576000600385925092509250611e76565b600060018888888860405160008152602001604052604051611df19493929190612fee565b6020604051602081039080840390855afa158015611e13573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e6757600060016000801b93509350935050611e76565b8060008060001b935093509350505b9450945094915050565b60006003811115611e9457611e93613033565b5b826003811115611ea757611ea6613033565b5b0315611fe05760016003811115611ec157611ec0613033565b5b826003811115611ed457611ed3613033565b5b03611f0b576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611f1f57611f1e613033565b5b826003811115611f3257611f31613033565b5b03611f77578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611f6e919061254f565b60405180910390fd5b600380811115611f8a57611f89613033565b5b826003811115611f9d57611f9c613033565b5b03611fdf57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611fd6919061262f565b60405180910390fd5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361203657806002600082825461202a9190612b66565b92505081905550612109565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156120c2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016120b993929190612ea9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612152578060026000828254039250508190555061219f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121fc919061254f565b60405180910390a3505050565b606060006122168361227d565b90506000602067ffffffffffffffff81111561223557612234612d38565b5b6040519080825280601f01601f1916602001820160405280156122675781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156122c4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612307816122d2565b811461231257600080fd5b50565b600081359050612324816122fe565b92915050565b6000602082840312156123405761233f6122cd565b5b600061234e84828501612315565b91505092915050565b60008115159050919050565b61236c81612357565b82525050565b60006020820190506123876000830184612363565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123c75780820151818401526020810190506123ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006123ef8261238d565b6123f98185612398565b93506124098185602086016123a9565b612412816123d3565b840191505092915050565b6000602082019050818103600083015261243781846123e4565b905092915050565b6000819050919050565b6124528161243f565b811461245d57600080fd5b50565b60008135905061246f81612449565b92915050565b60006020828403121561248b5761248a6122cd565b5b600061249984828501612460565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124cd826124a2565b9050919050565b6124dd816124c2565b81146124e857600080fd5b50565b6000813590506124fa816124d4565b92915050565b60008060408385031215612517576125166122cd565b5b6000612525858286016124eb565b925050602061253685828601612460565b9150509250929050565b6125498161243f565b82525050565b60006020820190506125646000830184612540565b92915050565b600080600060608486031215612583576125826122cd565b5b6000612591868287016124eb565b93505060206125a2868287016124eb565b92505060406125b386828701612460565b9150509250925092565b6000819050919050565b6125d0816125bd565b81146125db57600080fd5b50565b6000813590506125ed816125c7565b92915050565b600060208284031215612609576126086122cd565b5b6000612617848285016125de565b91505092915050565b612629816125bd565b82525050565b60006020820190506126446000830184612620565b92915050565b60008060408385031215612661576126606122cd565b5b600061266f858286016125de565b9250506020612680858286016124eb565b9150509250929050565b600060ff82169050919050565b6126a08161268a565b82525050565b60006020820190506126bb6000830184612697565b92915050565b6000602082840312156126d7576126d66122cd565b5b60006126e5848285016124eb565b91505092915050565b6126f7816124c2565b82525050565b600060208201905061271260008301846126ee565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61274d81612718565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127888161243f565b82525050565b600061279a838361277f565b60208301905092915050565b6000602082019050919050565b60006127be82612753565b6127c8818561275e565b93506127d38361276f565b8060005b838110156128045781516127eb888261278e565b97506127f6836127a6565b9250506001810190506127d7565b5085935050505092915050565b600060e082019050612826600083018a612744565b818103602083015261283881896123e4565b9050818103604083015261284c81886123e4565b905061285b6060830187612540565b61286860808301866126ee565b61287560a0830185612620565b81810360c083015261288781846127b3565b905098975050505050505050565b61289e8161268a565b81146128a957600080fd5b50565b6000813590506128bb81612895565b92915050565b600080600080600080600060e0888a0312156128e0576128df6122cd565b5b60006128ee8a828b016124eb565b97505060206128ff8a828b016124eb565b96505060406129108a828b01612460565b95505060606129218a828b01612460565b94505060806129328a828b016128ac565b93505060a06129438a828b016125de565b92505060c06129548a828b016125de565b91505092959891949750929550565b6000806040838503121561297a576129796122cd565b5b6000612988858286016124eb565b9250506020612999858286016124eb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129ea57607f821691505b6020821081036129fd576129fc6129a3565b5b50919050565b7f4e6577207468726573686f6c6420737570706c79206d757374206265206c657360008201527f73207468616e2063757272656e74207468726573686f6c6420737570706c7900602082015250565b6000612a5f603f83612398565b9150612a6a82612a03565b604082019050919050565b60006020820190508181036000830152612a8e81612a52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612acf8261243f565b9150612ada8361243f565b9250828202612ae88161243f565b91508282048414831517612aff57612afe612a95565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b408261243f565b9150612b4b8361243f565b925082612b5b57612b5a612b06565b5b828204905092915050565b6000612b718261243f565b9150612b7c8361243f565b9250828201905080821115612b9457612b93612a95565b5b92915050565b7f45786365656473206d6178696d756d20737570706c7900000000000000000000600082015250565b6000612bd0601683612398565b9150612bdb82612b9a565b602082019050919050565b60006020820190508181036000830152612bff81612bc3565b9050919050565b6000612c118261243f565b9150612c1c8361243f565b9250828203905081811115612c3457612c33612a95565b5b92915050565b7f45786365656473206d6178696d756d20657870616e73696f6e20726174650000600082015250565b6000612c70601e83612398565b9150612c7b82612c3a565b602082019050919050565b60006020820190508181036000830152612c9f81612c63565b9050919050565b7f4e6577206d617820737570706c79206d757374206265206c657373207468616e60008201527f2063757272656e74206d617820737570706c7900000000000000000000000000602082015250565b6000612d02603383612398565b9150612d0d82612ca6565b604082019050919050565b60006020820190508181036000830152612d3181612cf5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050612d7c6000830189612620565b612d8960208301886126ee565b612d9660408301876126ee565b612da36060830186612540565b612db06080830185612540565b612dbd60a0830184612540565b979650505050505050565b6000604082019050612ddd60008301856126ee565b612dea60208301846126ee565b9392505050565b7f4e6577206d617820657870616e73696f6e2072617465206d757374206265206c60008201527f657373207468616e2063757272656e74206d617820657870616e73696f6e207260208201527f6174650000000000000000000000000000000000000000000000000000000000604082015250565b6000612e73604383612398565b9150612e7e82612df1565b606082019050919050565b60006020820190508181036000830152612ea281612e66565b9050919050565b6000606082019050612ebe60008301866126ee565b612ecb6020830185612540565b612ed86040830184612540565b949350505050565b6000604082019050612ef560008301856126ee565b612f026020830184612620565b9392505050565b7f5472616e73666572207265737472696374656420746f206578697374696e672060008201527f746f6b656e20686f6c6465727300000000000000000000000000000000000000602082015250565b6000612f65602d83612398565b9150612f7082612f09565b604082019050919050565b60006020820190508181036000830152612f9481612f58565b9050919050565b600060a082019050612fb06000830188612620565b612fbd6020830187612620565b612fca6040830186612620565b612fd76060830185612540565b612fe460808301846126ee565b9695505050505050565b60006080820190506130036000830187612620565b6130106020830186612697565b61301d6040830185612620565b61302a6060830184612620565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220f00b10514571d19e56da615bf2b400bf4610a5e73035179358a9b37985f6615164736f6c634300081c0033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH20 0x355E559BCA86346B82D58BE0460D661DB481E05E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CFF CODESIZE SUB DUP1 PUSH2 0x3CFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP POP POP PUSH2 0x106 PUSH1 0x5 DUP4 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x122 PUSH1 0x6 DUP3 PUSH2 0x229 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x15F PUSH2 0x279 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x1B0 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1E1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP8 PUSH2 0x2D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE SWAP1 DUP2 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP DUP1 PUSH1 0xF SWAP1 DUP2 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x24B JUMPI PUSH2 0x244 DUP4 PUSH2 0x3D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x273 JUMP JUMPDEST DUP3 PUSH2 0x25B DUP4 PUSH2 0x43A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP4 DUP4 PUSH2 0x444 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C7 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x364 PUSH2 0x4AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x41F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x42B SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x4CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C DUP2 PUSH2 0x529 JUMP JUMPDEST DUP2 EQ PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x559 DUP2 PUSH2 0x533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5B2 DUP3 PUSH2 0x569 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x57A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x4B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F0 DUP3 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x619 DUP3 PUSH2 0x569 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x644 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 PUSH2 0x65E DUP5 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x67F JUMPI PUSH2 0x67E PUSH2 0x564 JUMP JUMPDEST JUMPDEST PUSH2 0x68A DUP5 DUP3 DUP6 PUSH2 0x626 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x6B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x4C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP10 DUP3 DUP11 ADD PUSH2 0x514 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6FC DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x70D DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x71E DUP10 DUP3 DUP11 ADD PUSH2 0x54A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73F JUMPI PUSH2 0x73E PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x74B DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76C JUMPI PUSH2 0x76B PUSH2 0x4C6 JUMP JUMPDEST JUMPDEST PUSH2 0x778 DUP10 DUP3 DUP11 ADD PUSH2 0x692 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x852 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x85C DUP7 DUP4 PUSH2 0x815 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x899 PUSH2 0x894 PUSH2 0x88F DUP5 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8BF DUP3 PUSH2 0x8A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x822 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x8E7 DUP2 DUP5 DUP5 PUSH2 0x8AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90B JUMPI PUSH2 0x900 PUSH1 0x0 DUP3 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x950 JUMPI PUSH2 0x921 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x92A DUP5 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x939 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x94D PUSH2 0x945 DUP6 PUSH2 0x805 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x973 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x955 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP4 DUP4 PUSH2 0x962 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x57A JUMP JUMPDEST JUMPDEST PUSH2 0x9C8 DUP3 SLOAD PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x9D3 DUP3 DUP3 DUP6 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA06 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x9F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9FE DUP6 DUP3 PUSH2 0x980 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA14 DUP7 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA3C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA17 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA59 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA55 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x962 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0xA6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0x529 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xABA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAC7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAD4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xAE1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH2 0xB1E DUP2 DUP6 PUSH2 0xAF8 JUMP JUMPDEST SWAP4 POP PUSH2 0xB2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0xB37 DUP2 PUSH2 0x569 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5C DUP2 DUP5 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP3 MLOAD PUSH2 0xA6E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9F DUP3 PUSH2 0xB64 JUMP JUMPDEST DUP3 PUSH2 0xBA9 DUP5 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBEF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x815 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3098 PUSH2 0xC67 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA64 ADD MSTORE PUSH2 0xDBF ADD MSTORE PUSH1 0x0 PUSH2 0x182B ADD MSTORE PUSH1 0x0 PUSH2 0x17F0 ADD MSTORE PUSH1 0x0 PUSH2 0x1C4B ADD MSTORE PUSH1 0x0 PUSH2 0x1C2A ADD MSTORE PUSH1 0x0 PUSH2 0x1576 ADD MSTORE PUSH1 0x0 PUSH2 0x15CC ADD MSTORE PUSH1 0x0 PUSH2 0x15F5 ADD MSTORE PUSH2 0x3098 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73532802 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE488EDE8 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE6AD10E1 EQ PUSH2 0x70D JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x669 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81FB8B06 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x81FB8B06 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x83DE3E6A EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x8E80FF5D EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x73532802 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x517 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55233B48 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x55233B48 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x69E2F0FB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x6C8597FC EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x3FB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x914D4DA EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x403 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x671 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AB PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x715 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH2 0x79D DUP3 PUSH2 0x1260 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7B4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x802 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x810 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x89E PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8AB DUP2 DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D8 DUP6 DUP3 DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8E3 DUP6 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x92B DUP4 DUP4 PUSH2 0x1480 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x944 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BF DUP3 DUP3 PUSH2 0x1629 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9D1 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xA29 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1F4 DUP6 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5F DUP6 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x0 DUP3 PUSH2 0x171C JUMP JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD DUP2 DUP6 DUP5 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xB83 JUMPI PUSH1 0x0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xB SLOAD DUP7 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBB0 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xBDA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x114F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xBEB SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC17 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCC7 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xD2A SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xDEE DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xE20 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x1822 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF62 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0xFD8 DUP2 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1057 DUP13 PUSH2 0x185D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x106D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1090 DUP3 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1114 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP3 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F DUP11 DUP11 DUP11 PUSH2 0x12E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1158 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x120B DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12D6 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x194F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1386 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x194F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1504 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15EE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x161B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1623 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16AE PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x179A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x181D PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1858 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x1572 JUMP JUMPDEST DUP4 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x18E0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F0 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1908 DUP3 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x194B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B8 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B20 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1BB5 JUMPI POP PUSH1 0x0 PUSH2 0x1BB3 DUP4 PUSH2 0xC72 JUMP JUMPDEST GT JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1C00 DUP4 DUP4 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB8 JUMPI PUSH2 0x1CB1 DUP4 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D45 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E67 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1E76 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F77 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FDF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2036 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2152 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2216 DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2324 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP5 DUP3 DUP6 ADD PUSH2 0x2315 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2387 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EF DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x23F9 DUP2 DUP6 PUSH2 0x2398 JUMP JUMPDEST SWAP4 POP PUSH2 0x2409 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A9 JUMP JUMPDEST PUSH2 0x2412 DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP2 EQ PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246F DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248B JUMPI PUSH2 0x248A PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP5 DUP3 DUP6 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CD DUP3 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DD DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FA DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2536 DUP6 DUP3 DUP7 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2591 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A2 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B3 DUP7 DUP3 DUP8 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25ED DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2629 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2660 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP6 DUP3 DUP7 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A0 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP5 DUP3 DUP6 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26F7 DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2712 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274D DUP2 PUSH2 0x2718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2788 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP4 DUP4 PUSH2 0x277F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH2 0x27C8 DUP2 DUP6 PUSH2 0x275E JUMP JUMPDEST SWAP4 POP PUSH2 0x27D3 DUP4 PUSH2 0x276F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2804 JUMPI DUP2 MLOAD PUSH2 0x27EB DUP9 DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP8 POP PUSH2 0x27F6 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2826 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2744 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2838 DUP2 DUP10 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x284C DUP2 DUP9 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x285B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2868 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2875 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2887 DUP2 DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x28A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BB DUP2 PUSH2 0x2895 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH2 0x28DF PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28FF DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2910 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2921 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2932 DUP11 DUP3 DUP12 ADD PUSH2 0x28AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2943 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2954 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297A JUMPI PUSH2 0x2979 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2988 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2999 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29FD JUMPI PUSH2 0x29FC PUSH2 0x29A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577207468726573686F6C6420737570706C79206D757374206265206C6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73207468616E2063757272656E74207468726573686F6C6420737570706C7900 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5F PUSH1 0x3F DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6A DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8E DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ACF DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADA DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AE8 DUP2 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B40 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4B DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B94 JUMPI PUSH2 0x2B93 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20737570706C7900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 PUSH1 0x16 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20657870616E73696F6E20726174650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1E DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206D757374206265206C657373207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74206D617820737570706C7900000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D02 PUSH1 0x33 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D31 DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2D89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2D96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DA3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DB0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6577206D617820657870616E73696F6E2072617465206D757374206265206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657373207468616E2063757272656E74206D617820657870616E73696F6E2072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6174650000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E73 PUSH1 0x43 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA2 DUP2 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2ECB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2ED8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2F02 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572207265737472696374656420746F206578697374696E6720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E20686F6C6465727300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F65 PUSH1 0x2D DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F70 DUP3 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F94 DUP2 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FBD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FCA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FD7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2FE4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3003 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x3010 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x301D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x302A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LT MLOAD GASLIMIT PUSH18 0xD19E56DA615BF2B400BF4610A5E730351793 PC 0xA9 0xB3 PUSH26 0x85F6615164736F6C634300081C00330000000000000000000000 ","sourceMap":"247:3746:25:-:0;;;597:4;564:37;;;;;;;;;;;;;;;;;;;;708:42;665:85;;;;;;;;;1018:588;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1257:5;1616:4:7;3328:431:17;;;;;;;;;;;;;;;;;1229:5:25;1236:7;1675:5:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;3401:45:17;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1577:52:7;1274:44:25::2;2232:4:0;1285:18:25::0;::::2;1305:12;1274:10;;;:44;;:::i;:::-;;1328:37;365:24;1352:12;1328:10;;;:37;;:::i;:::-;;1396:10;1384:9;:22;;;;1434:16;1416:15;:34;;;;1479:17;1460:16;:36;;;;1518:5;1506:9;:17;;;;;;:::i;:::-;;1547:7;1533:11;:21;;;;;;:::i;:::-;;1584:15;1564:17;:35;;;;1018:588:::0;;;;;;247:3746;;2887:340:13;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:17:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:13:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:14:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:117::-;1314:1;1311;1304:12;1328:117;1437:1;1434;1427:12;1451:102;1492:6;1543:2;1539:7;1534:2;1527:5;1523:14;1519:28;1509:38;;1451:102;;;:::o;1559:180::-;1607:77;1604:1;1597:88;1704:4;1701:1;1694:15;1728:4;1725:1;1718:15;1745:281;1828:27;1850:4;1828:27;:::i;:::-;1820:6;1816:40;1958:6;1946:10;1943:22;1922:18;1910:10;1907:34;1904:62;1901:88;;;1969:18;;:::i;:::-;1901:88;2009:10;2005:2;1998:22;1788:238;1745:281;;:::o;2032:129::-;2066:6;2093:20;;:::i;:::-;2083:30;;2122:33;2150:4;2142:6;2122:33;:::i;:::-;2032:129;;;:::o;2167:308::-;2229:4;2319:18;2311:6;2308:30;2305:56;;;2341:18;;:::i;:::-;2305:56;2379:29;2401:6;2379:29;:::i;:::-;2371:37;;2463:4;2457;2453:15;2445:23;;2167:308;;;:::o;2481:248::-;2563:1;2573:113;2587:6;2584:1;2581:13;2573:113;;;2672:1;2667:3;2663:11;2657:18;2653:1;2648:3;2644:11;2637:39;2609:2;2606:1;2602:10;2597:15;;2573:113;;;2720:1;2711:6;2706:3;2702:16;2695:27;2543:186;2481:248;;;:::o;2735:434::-;2824:5;2849:66;2865:49;2907:6;2865:49;:::i;:::-;2849:66;:::i;:::-;2840:75;;2938:6;2931:5;2924:21;2976:4;2969:5;2965:16;3014:3;3005:6;3000:3;2996:16;2993:25;2990:112;;;3021:79;;:::i;:::-;2990:112;3111:52;3156:6;3151:3;3146;3111:52;:::i;:::-;2830:339;2735:434;;;;;:::o;3189:355::-;3256:5;3305:3;3298:4;3290:6;3286:17;3282:27;3272:122;;3313:79;;:::i;:::-;3272:122;3423:6;3417:13;3448:90;3534:3;3526:6;3519:4;3511:6;3507:17;3448:90;:::i;:::-;3439:99;;3262:282;3189:355;;;;:::o;3550:1480::-;3685:6;3693;3701;3709;3717;3725;3774:3;3762:9;3753:7;3749:23;3745:33;3742:120;;;3781:79;;:::i;:::-;3742:120;3901:1;3926:64;3982:7;3973:6;3962:9;3958:22;3926:64;:::i;:::-;3916:74;;3872:128;4039:2;4065:64;4121:7;4112:6;4101:9;4097:22;4065:64;:::i;:::-;4055:74;;4010:129;4178:2;4204:64;4260:7;4251:6;4240:9;4236:22;4204:64;:::i;:::-;4194:74;;4149:129;4317:2;4343:64;4399:7;4390:6;4379:9;4375:22;4343:64;:::i;:::-;4333:74;;4288:129;4477:3;4466:9;4462:19;4456:26;4509:18;4501:6;4498:30;4495:117;;;4531:79;;:::i;:::-;4495:117;4636:74;4702:7;4693:6;4682:9;4678:22;4636:74;:::i;:::-;4626:84;;4427:293;4780:3;4769:9;4765:19;4759:26;4812:18;4804:6;4801:30;4798:117;;;4834:79;;:::i;:::-;4798:117;4939:74;5005:7;4996:6;4985:9;4981:22;4939:74;:::i;:::-;4929:84;;4730:293;3550:1480;;;;;;;;:::o;5036:99::-;5088:6;5122:5;5116:12;5106:22;;5036:99;;;:::o;5141:180::-;5189:77;5186:1;5179:88;5286:4;5283:1;5276:15;5310:4;5307:1;5300:15;5327:320;5371:6;5408:1;5402:4;5398:12;5388:22;;5455:1;5449:4;5445:12;5476:18;5466:81;;5532:4;5524:6;5520:17;5510:27;;5466:81;5594:2;5586:6;5583:14;5563:18;5560:38;5557:84;;5613:18;;:::i;:::-;5557:84;5378:269;5327:320;;;:::o;5653:141::-;5702:4;5725:3;5717:11;;5748:3;5745:1;5738:14;5782:4;5779:1;5769:18;5761:26;;5653:141;;;:::o;5800:93::-;5837:6;5884:2;5879;5872:5;5868:14;5864:23;5854:33;;5800:93;;;:::o;5899:107::-;5943:8;5993:5;5987:4;5983:16;5962:37;;5899:107;;;;:::o;6012:393::-;6081:6;6131:1;6119:10;6115:18;6154:97;6184:66;6173:9;6154:97;:::i;:::-;6272:39;6302:8;6291:9;6272:39;:::i;:::-;6260:51;;6344:4;6340:9;6333:5;6329:21;6320:30;;6393:4;6383:8;6379:19;6372:5;6369:30;6359:40;;6088:317;;6012:393;;;;;:::o;6411:60::-;6439:3;6460:5;6453:12;;6411:60;;;:::o;6477:142::-;6527:9;6560:53;6578:34;6587:24;6605:5;6587:24;:::i;:::-;6578:34;:::i;:::-;6560:53;:::i;:::-;6547:66;;6477:142;;;:::o;6625:75::-;6668:3;6689:5;6682:12;;6625:75;;;:::o;6706:269::-;6816:39;6847:7;6816:39;:::i;:::-;6877:91;6926:41;6950:16;6926:41;:::i;:::-;6918:6;6911:4;6905:11;6877:91;:::i;:::-;6871:4;6864:105;6782:193;6706:269;;;:::o;6981:73::-;7026:3;6981:73;:::o;7060:189::-;7137:32;;:::i;:::-;7178:65;7236:6;7228;7222:4;7178:65;:::i;:::-;7113:136;7060:189;;:::o;7255:186::-;7315:120;7332:3;7325:5;7322:14;7315:120;;;7386:39;7423:1;7416:5;7386:39;:::i;:::-;7359:1;7352:5;7348:13;7339:22;;7315:120;;;7255:186;;:::o;7447:543::-;7548:2;7543:3;7540:11;7537:446;;;7582:38;7614:5;7582:38;:::i;:::-;7666:29;7684:10;7666:29;:::i;:::-;7656:8;7652:44;7849:2;7837:10;7834:18;7831:49;;;7870:8;7855:23;;7831:49;7893:80;7949:22;7967:3;7949:22;:::i;:::-;7939:8;7935:37;7922:11;7893:80;:::i;:::-;7552:431;;7537:446;7447:543;;;:::o;7996:117::-;8050:8;8100:5;8094:4;8090:16;8069:37;;7996:117;;;;:::o;8119:169::-;8163:6;8196:51;8244:1;8240:6;8232:5;8229:1;8225:13;8196:51;:::i;:::-;8192:56;8277:4;8271;8267:15;8257:25;;8170:118;8119:169;;;;:::o;8293:295::-;8369:4;8515:29;8540:3;8534:4;8515:29;:::i;:::-;8507:37;;8577:3;8574:1;8570:11;8564:4;8561:21;8553:29;;8293:295;;;;:::o;8593:1395::-;8710:37;8743:3;8710:37;:::i;:::-;8812:18;8804:6;8801:30;8798:56;;;8834:18;;:::i;:::-;8798:56;8878:38;8910:4;8904:11;8878:38;:::i;:::-;8963:67;9023:6;9015;9009:4;8963:67;:::i;:::-;9057:1;9081:4;9068:17;;9113:2;9105:6;9102:14;9130:1;9125:618;;;;9787:1;9804:6;9801:77;;;9853:9;9848:3;9844:19;9838:26;9829:35;;9801:77;9904:67;9964:6;9957:5;9904:67;:::i;:::-;9898:4;9891:81;9760:222;9095:887;;9125:618;9177:4;9173:9;9165:6;9161:22;9211:37;9243:4;9211:37;:::i;:::-;9270:1;9284:208;9298:7;9295:1;9292:14;9284:208;;;9377:9;9372:3;9368:19;9362:26;9354:6;9347:42;9428:1;9420:6;9416:14;9406:24;;9475:2;9464:9;9460:18;9447:31;;9321:4;9318:1;9314:12;9309:17;;9284:208;;;9520:6;9511:7;9508:19;9505:179;;;9578:9;9573:3;9569:19;9563:26;9621:48;9663:4;9655:6;9651:17;9640:9;9621:48;:::i;:::-;9613:6;9606:64;9528:156;9505:179;9730:1;9726;9718:6;9714:14;9710:22;9704:4;9697:36;9132:611;;;9095:887;;8685:1303;;;8593:1395;;:::o;9994:77::-;10031:7;10060:5;10049:16;;9994:77;;;:::o;10077:118::-;10164:24;10182:5;10164:24;:::i;:::-;10159:3;10152:37;10077:118;;:::o;10201:::-;10288:24;10306:5;10288:24;:::i;:::-;10283:3;10276:37;10201:118;;:::o;10325:::-;10412:24;10430:5;10412:24;:::i;:::-;10407:3;10400:37;10325:118;;:::o;10449:664::-;10654:4;10692:3;10681:9;10677:19;10669:27;;10706:71;10774:1;10763:9;10759:17;10750:6;10706:71;:::i;:::-;10787:72;10855:2;10844:9;10840:18;10831:6;10787:72;:::i;:::-;10869;10937:2;10926:9;10922:18;10913:6;10869:72;:::i;:::-;10951;11019:2;11008:9;11004:18;10995:6;10951:72;:::i;:::-;11033:73;11101:3;11090:9;11086:19;11077:6;11033:73;:::i;:::-;10449:664;;;;;;;;:::o;11119:169::-;11203:11;11237:6;11232:3;11225:19;11277:4;11272:3;11268:14;11253:29;;11119:169;;;;:::o;11294:377::-;11382:3;11410:39;11443:5;11410:39;:::i;:::-;11465:71;11529:6;11524:3;11465:71;:::i;:::-;11458:78;;11545:65;11603:6;11598:3;11591:4;11584:5;11580:16;11545:65;:::i;:::-;11635:29;11657:6;11635:29;:::i;:::-;11630:3;11626:39;11619:46;;11386:285;11294:377;;;;:::o;11677:313::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:78;11978:4;11969:6;11905:78;:::i;:::-;11897:86;;11677:313;;;;:::o;11996:98::-;12047:6;12081:5;12075:12;12065:22;;11996:98;;;:::o;12100:116::-;12151:4;12174:3;12166:11;;12204:4;12199:3;12195:14;12187:22;;12100:116;;;:::o;12222:154::-;12265:11;12301:29;12325:3;12319:10;12301:29;:::i;:::-;12364:5;12340:29;;12277:99;12222:154;;;:::o;12382:594::-;12466:5;12497:38;12529:5;12497:38;:::i;:::-;12560:5;12587:40;12621:5;12587:40;:::i;:::-;12575:52;;12646:35;12672:8;12646:35;:::i;:::-;12637:44;;12705:2;12697:6;12694:14;12691:278;;;12776:169;12861:66;12831:6;12827:2;12823:15;12820:1;12816:23;12776:169;:::i;:::-;12753:5;12732:227;12723:236;;12691:278;12472:504;;12382:594;;;:::o;247:3746:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_6661":{"entryPoint":3350,"id":6661,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":4025,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1434":{"entryPoint":2362,"id":1434,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_6658":{"entryPoint":4395,"id":6658,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_2870":{"entryPoint":6119,"id":2870,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2882":{"entryPoint":6178,"id":2882,"parameterSlots":0,"returnSlots":1},"@_approve_1094":{"entryPoint":4838,"id":1094,"parameterSlots":3,"returnSlots":0},"@_approve_1154":{"entryPoint":6479,"id":1154,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2800":{"entryPoint":7173,"id":2800,"parameterSlots":0,"returnSlots":1},"@_checkRole_114":{"entryPoint":6398,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":4810,"id":93,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_2779":{"entryPoint":5490,"id":2779,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":5248,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_2816":{"entryPoint":6324,"id":2816,"parameterSlots":1,"returnSlots":1},"@_mint_1043":{"entryPoint":5916,"id":1043,"parameterSlots":2,"returnSlots":0},"@_msgSender_1509":{"entryPoint":4830,"id":1509,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":5673,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1202":{"entryPoint":4856,"id":1202,"parameterSlots":3,"returnSlots":0},"@_throwError_2655":{"entryPoint":7808,"id":2655,"parameterSlots":2,"returnSlots":0},"@_transfer_933":{"entryPoint":5004,"id":933,"parameterSlots":3,"returnSlots":0},"@_update_1010":{"entryPoint":8164,"id":1010,"parameterSlots":3,"returnSlots":0},"@_update_6945":{"entryPoint":6950,"id":6945,"parameterSlots":3,"returnSlots":0},"@_useNonce_1569":{"entryPoint":6237,"id":1569,"parameterSlots":1,"returnSlots":1},"@allowance_830":{"entryPoint":4471,"id":830,"parameterSlots":2,"returnSlots":1},"@approve_854":{"entryPoint":2195,"id":854,"parameterSlots":2,"returnSlots":1},"@balanceOf_789":{"entryPoint":3186,"id":789,"parameterSlots":1,"returnSlots":1},"@byteLength_1765":{"entryPoint":8829,"id":1765,"parameterSlots":1,"returnSlots":1},"@clowderFee_6673":{"entryPoint":3180,"id":6673,"parameterSlots":0,"returnSlots":0},"@clowderTreasury_6676":{"entryPoint":3517,"id":6676,"parameterSlots":0,"returnSlots":0},"@decimals_767":{"entryPoint":2353,"id":767,"parameterSlots":0,"returnSlots":1},"@disableTransferRestriction_6900":{"entryPoint":3553,"id":6900,"parameterSlots":0,"returnSlots":0},"@eip712Domain_2858":{"entryPoint":3596,"id":2858,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_128":{"entryPoint":2287,"id":128,"parameterSlots":1,"returnSlots":1},"@grantMinterRole_6959":{"entryPoint":2500,"id":6959,"parameterSlots":1,"returnSlots":0},"@grantRole_147":{"entryPoint":2319,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":3772,"id":80,"parameterSlots":2,"returnSlots":1},"@lastMintTimestamp_6678":{"entryPoint":3766,"id":6678,"parameterSlots":0,"returnSlots":0},"@maxExpansionRate_6667":{"entryPoint":2973,"id":6667,"parameterSlots":0,"returnSlots":0},"@maxSupply_6663":{"entryPoint":4465,"id":6663,"parameterSlots":0,"returnSlots":0},"@mint_6829":{"entryPoint":2559,"id":6829,"parameterSlots":2,"returnSlots":0},"@name_749":{"entryPoint":1957,"id":749,"parameterSlots":0,"returnSlots":1},"@nonces_1424":{"entryPoint":3499,"id":1424,"parameterSlots":1,"returnSlots":1},"@nonces_1554":{"entryPoint":6046,"id":1554,"parameterSlots":1,"returnSlots":1},"@permit_1407":{"entryPoint":4067,"id":1407,"parameterSlots":7,"returnSlots":0},"@recover_2606":{"entryPoint":6350,"id":2606,"parameterSlots":4,"returnSlots":1},"@reduceMaxExpansionRate_6889":{"entryPoint":4606,"id":6889,"parameterSlots":1,"returnSlots":0},"@reduceMaxSupply_6849":{"entryPoint":3258,"id":6849,"parameterSlots":1,"returnSlots":0},"@reduceThresholdSupply_6869":{"entryPoint":2103,"id":6869,"parameterSlots":1,"returnSlots":0},"@renounceRole_189":{"entryPoint":2377,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeMinterRole_6973":{"entryPoint":2979,"id":6973,"parameterSlots":1,"returnSlots":0},"@revokeRole_166":{"entryPoint":4431,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2980":{"entryPoint":4704,"id":2980,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1835,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_758":{"entryPoint":3879,"id":758,"parameterSlots":0,"returnSlots":1},"@thresholdSupply_6665":{"entryPoint":4698,"id":6665,"parameterSlots":0,"returnSlots":0},"@toStringWithFallback_1832":{"entryPoint":7323,"id":1832,"parameterSlots":2,"returnSlots":1},"@toString_1733":{"entryPoint":8713,"id":1733,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2956":{"entryPoint":7499,"id":2956,"parameterSlots":2,"returnSlots":1},"@tokenName_6680":{"entryPoint":3038,"id":6680,"parameterSlots":0,"returnSlots":0},"@tokenSymbol_6682":{"entryPoint":3357,"id":6682,"parameterSlots":0,"returnSlots":0},"@totalSupply_776":{"entryPoint":2230,"id":776,"parameterSlots":0,"returnSlots":1},"@transferFrom_886":{"entryPoint":2240,"id":886,"parameterSlots":3,"returnSlots":1},"@transferRestricted_6670":{"entryPoint":2954,"id":6670,"parameterSlots":0,"returnSlots":0},"@transfer_813":{"entryPoint":4032,"id":813,"parameterSlots":2,"returnSlots":1},"@tryRecover_2570":{"entryPoint":7564,"id":2570,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":9451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":9694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":8981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":10412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10595,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9578,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10433,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9472,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":9715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9802,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9966,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9059,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":10052,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9760,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8_to_t_string_memory_ptr_fromStack":{"entryPoint":11509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e_to_t_string_memory_ptr_fromStack":{"entryPoint":10834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad_to_t_string_memory_ptr_fromStack":{"entryPoint":11878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415_to_t_string_memory_ptr_fromStack":{"entryPoint":12120,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6_to_t_string_memory_ptr_fromStack":{"entryPoint":11203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc_to_t_string_memory_ptr_fromStack":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10111,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9536,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9879,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11720,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":12000,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11945,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10257,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11623,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":12187,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":12270,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11544,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12155,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9894,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10095,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10067,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9101,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10150,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10078,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9112,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11110,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11061,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10948,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11270,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9410,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9047,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":10008,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9661,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8914,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9378,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9279,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9866,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":9129,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10706,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10901,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11014,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12339,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10659,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11576,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8909,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9171,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8":{"entryPoint":11430,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e":{"entryPoint":10755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad":{"entryPoint":11761,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415":{"entryPoint":12041,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6":{"entryPoint":11162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc":{"entryPoint":11322,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9428,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":9671,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8958,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9289,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":10389,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:24802:26","nodeType":"YulBlock","src":"0:24802:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"378:105:26","nodeType":"YulBlock","src":"378:105:26","statements":[{"nativeSrc":"388:89:26","nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nativeSrc":"403:5:26","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nativeSrc":"410:66:26","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:26","nodeType":"YulIdentifier","src":"399:3:26"},"nativeSrc":"399:78:26","nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:26","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:26","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:26","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nativeSrc":"531:78:26","nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nativeSrc":"587:16:26","nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:26","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:26","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:26","nodeType":"YulIdentifier","src":"589:6:26"},"nativeSrc":"589:12:26","nodeType":"YulFunctionCall","src":"589:12:26"},"nativeSrc":"589:12:26","nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:26","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nativeSrc":"578:5:26","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:26","nodeType":"YulIdentifier","src":"561:16:26"},"nativeSrc":"561:23:26","nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nativeSrc":"551:2:26","nodeType":"YulIdentifier","src":"551:2:26"},"nativeSrc":"551:34:26","nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nativeSrc":"544:6:26","nodeType":"YulIdentifier","src":"544:6:26"},"nativeSrc":"544:42:26","nodeType":"YulFunctionCall","src":"544:42:26"},"nativeSrc":"541:62:26","nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:26","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nativeSrc":"666:86:26","nodeType":"YulBlock","src":"666:86:26","statements":[{"nativeSrc":"676:29:26","nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:26","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:26","nodeType":"YulIdentifier","src":"685:12:26"},"nativeSrc":"685:20:26","nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nativeSrc":"676:5:26","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:26","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:26","nodeType":"YulIdentifier","src":"714:25:26"},"nativeSrc":"714:32:26","nodeType":"YulFunctionCall","src":"714:32:26"},"nativeSrc":"714:32:26","nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:26","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nativeSrc":"652:3:26","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:26","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nativeSrc":"823:262:26","nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nativeSrc":"869:83:26","nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:26","nodeType":"YulIdentifier","src":"871:77:26"},"nativeSrc":"871:79:26","nodeType":"YulFunctionCall","src":"871:79:26"},"nativeSrc":"871:79:26","nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:26","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nativeSrc":"853:9:26","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nativeSrc":"840:3:26","nodeType":"YulIdentifier","src":"840:3:26"},"nativeSrc":"840:23:26","nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nativeSrc":"865:2:26","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:26","nodeType":"YulIdentifier","src":"836:3:26"},"nativeSrc":"836:32:26","nodeType":"YulFunctionCall","src":"836:32:26"},"nativeSrc":"833:119:26","nodeType":"YulIf","src":"833:119:26"},{"nativeSrc":"962:116:26","nodeType":"YulBlock","src":"962:116:26","statements":[{"nativeSrc":"977:15:26","nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nativeSrc":"991:1:26","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:26","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nativeSrc":"1006:62:26","nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:26","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nativeSrc":"1051:6:26","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nativeSrc":"1036:3:26","nodeType":"YulIdentifier","src":"1036:3:26"},"nativeSrc":"1036:22:26","nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nativeSrc":"1060:7:26","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:26","nodeType":"YulIdentifier","src":"1016:19:26"},"nativeSrc":"1016:52:26","nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:26","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:26","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nativeSrc":"804:7:26","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:26","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nativeSrc":"1133:48:26","nodeType":"YulBlock","src":"1133:48:26","statements":[{"nativeSrc":"1143:32:26","nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:26","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:26","nodeType":"YulIdentifier","src":"1161:6:26"},"nativeSrc":"1161:13:26","nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:26","nodeType":"YulIdentifier","src":"1154:6:26"},"nativeSrc":"1154:21:26","nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:26","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:26","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:26","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nativeSrc":"1246:50:26","nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:26","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nativeSrc":"1283:5:26","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:26","nodeType":"YulIdentifier","src":"1268:14:26"},"nativeSrc":"1268:21:26","nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:26","nodeType":"YulIdentifier","src":"1256:6:26"},"nativeSrc":"1256:34:26","nodeType":"YulFunctionCall","src":"1256:34:26"},"nativeSrc":"1256:34:26","nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:26","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nativeSrc":"1241:3:26","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nativeSrc":"1394:118:26","nodeType":"YulBlock","src":"1394:118:26","statements":[{"nativeSrc":"1404:26:26","nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:26","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nativeSrc":"1427:2:26","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:26","nodeType":"YulIdentifier","src":"1412:3:26"},"nativeSrc":"1412:18:26","nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:26","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:26","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:26","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nativeSrc":"1502:1:26","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:26","nodeType":"YulIdentifier","src":"1487:3:26"},"nativeSrc":"1487:17:26","nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:26","nodeType":"YulIdentifier","src":"1440:37:26"},"nativeSrc":"1440:65:26","nodeType":"YulFunctionCall","src":"1440:65:26"},"nativeSrc":"1440:65:26","nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:26","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nativeSrc":"1378:6:26","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:26","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nativeSrc":"1577:40:26","nodeType":"YulBlock","src":"1577:40:26","statements":[{"nativeSrc":"1588:22:26","nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:26","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nativeSrc":"1598:5:26","nodeType":"YulIdentifier","src":"1598:5:26"},"nativeSrc":"1598:12:26","nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nativeSrc":"1588:6:26","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:26","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:26","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nativeSrc":"1719:73:26","nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:26","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nativeSrc":"1741:6:26","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:26","nodeType":"YulIdentifier","src":"1729:6:26"},"nativeSrc":"1729:19:26","nodeType":"YulFunctionCall","src":"1729:19:26"},"nativeSrc":"1729:19:26","nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nativeSrc":"1757:29:26","nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:26","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nativeSrc":"1781:4:26","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:26","nodeType":"YulIdentifier","src":"1772:3:26"},"nativeSrc":"1772:14:26","nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:26","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:26","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nativeSrc":"1696:6:26","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:26","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nativeSrc":"1860:186:26","nodeType":"YulBlock","src":"1860:186:26","statements":[{"nativeSrc":"1871:10:26","nodeType":"YulVariableDeclaration","src":"1871:10:26","value":{"kind":"number","nativeSrc":"1880:1:26","nodeType":"YulLiteral","src":"1880:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:26","nodeType":"YulTypedName","src":"1875:1:26","type":""}]},{"body":{"nativeSrc":"1940:63:26","nodeType":"YulBlock","src":"1940:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:26","nodeType":"YulIdentifier","src":"1965:3:26"},{"name":"i","nativeSrc":"1970:1:26","nodeType":"YulIdentifier","src":"1970:1:26"}],"functionName":{"name":"add","nativeSrc":"1961:3:26","nodeType":"YulIdentifier","src":"1961:3:26"},"nativeSrc":"1961:11:26","nodeType":"YulFunctionCall","src":"1961:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:26","nodeType":"YulIdentifier","src":"1984:3:26"},{"name":"i","nativeSrc":"1989:1:26","nodeType":"YulIdentifier","src":"1989:1:26"}],"functionName":{"name":"add","nativeSrc":"1980:3:26","nodeType":"YulIdentifier","src":"1980:3:26"},"nativeSrc":"1980:11:26","nodeType":"YulFunctionCall","src":"1980:11:26"}],"functionName":{"name":"mload","nativeSrc":"1974:5:26","nodeType":"YulIdentifier","src":"1974:5:26"},"nativeSrc":"1974:18:26","nodeType":"YulFunctionCall","src":"1974:18:26"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:26","nodeType":"YulIdentifier","src":"1954:6:26"},"nativeSrc":"1954:39:26","nodeType":"YulFunctionCall","src":"1954:39:26"},"nativeSrc":"1954:39:26","nodeType":"YulExpressionStatement","src":"1954:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:26","nodeType":"YulIdentifier","src":"1901:1:26"},{"name":"length","nativeSrc":"1904:6:26","nodeType":"YulIdentifier","src":"1904:6:26"}],"functionName":{"name":"lt","nativeSrc":"1898:2:26","nodeType":"YulIdentifier","src":"1898:2:26"},"nativeSrc":"1898:13:26","nodeType":"YulFunctionCall","src":"1898:13:26"},"nativeSrc":"1890:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:26","nodeType":"YulBlock","src":"1912:19:26","statements":[{"nativeSrc":"1914:15:26","nodeType":"YulAssignment","src":"1914:15:26","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:26","nodeType":"YulIdentifier","src":"1923:1:26"},{"kind":"number","nativeSrc":"1926:2:26","nodeType":"YulLiteral","src":"1926:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:26","nodeType":"YulIdentifier","src":"1919:3:26"},"nativeSrc":"1919:10:26","nodeType":"YulFunctionCall","src":"1919:10:26"},"variableNames":[{"name":"i","nativeSrc":"1914:1:26","nodeType":"YulIdentifier","src":"1914:1:26"}]}]},"pre":{"nativeSrc":"1894:3:26","nodeType":"YulBlock","src":"1894:3:26","statements":[]},"src":"1890:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:26","nodeType":"YulIdentifier","src":"2023:3:26"},{"name":"length","nativeSrc":"2028:6:26","nodeType":"YulIdentifier","src":"2028:6:26"}],"functionName":{"name":"add","nativeSrc":"2019:3:26","nodeType":"YulIdentifier","src":"2019:3:26"},"nativeSrc":"2019:16:26","nodeType":"YulFunctionCall","src":"2019:16:26"},{"kind":"number","nativeSrc":"2037:1:26","nodeType":"YulLiteral","src":"2037:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:26","nodeType":"YulIdentifier","src":"2012:6:26"},"nativeSrc":"2012:27:26","nodeType":"YulFunctionCall","src":"2012:27:26"},"nativeSrc":"2012:27:26","nodeType":"YulExpressionStatement","src":"2012:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:26","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nativeSrc":"1847:3:26","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nativeSrc":"1852:6:26","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:248:26"},{"body":{"nativeSrc":"2100:54:26","nodeType":"YulBlock","src":"2100:54:26","statements":[{"nativeSrc":"2110:38:26","nodeType":"YulAssignment","src":"2110:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:26","nodeType":"YulIdentifier","src":"2128:5:26"},{"kind":"number","nativeSrc":"2135:2:26","nodeType":"YulLiteral","src":"2135:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:26","nodeType":"YulIdentifier","src":"2124:3:26"},"nativeSrc":"2124:14:26","nodeType":"YulFunctionCall","src":"2124:14:26"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:26","nodeType":"YulLiteral","src":"2144:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:26","nodeType":"YulIdentifier","src":"2140:3:26"},"nativeSrc":"2140:7:26","nodeType":"YulFunctionCall","src":"2140:7:26"}],"functionName":{"name":"and","nativeSrc":"2120:3:26","nodeType":"YulIdentifier","src":"2120:3:26"},"nativeSrc":"2120:28:26","nodeType":"YulFunctionCall","src":"2120:28:26"},"variableNames":[{"name":"result","nativeSrc":"2110:6:26","nodeType":"YulIdentifier","src":"2110:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:26","nodeType":"YulTypedName","src":"2083:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:26","nodeType":"YulTypedName","src":"2093:6:26","type":""}],"src":"2052:102:26"},{"body":{"nativeSrc":"2252:285:26","nodeType":"YulBlock","src":"2252:285:26","statements":[{"nativeSrc":"2262:53:26","nodeType":"YulVariableDeclaration","src":"2262:53:26","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:26","nodeType":"YulIdentifier","src":"2309:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:26","nodeType":"YulIdentifier","src":"2276:32:26"},"nativeSrc":"2276:39:26","nodeType":"YulFunctionCall","src":"2276:39:26"},"variables":[{"name":"length","nativeSrc":"2266:6:26","nodeType":"YulTypedName","src":"2266:6:26","type":""}]},{"nativeSrc":"2324:78:26","nodeType":"YulAssignment","src":"2324:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:26","nodeType":"YulIdentifier","src":"2390:3:26"},{"name":"length","nativeSrc":"2395:6:26","nodeType":"YulIdentifier","src":"2395:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:26","nodeType":"YulIdentifier","src":"2331:58:26"},"nativeSrc":"2331:71:26","nodeType":"YulFunctionCall","src":"2331:71:26"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:26","nodeType":"YulIdentifier","src":"2324:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:26","nodeType":"YulIdentifier","src":"2450:5:26"},{"kind":"number","nativeSrc":"2457:4:26","nodeType":"YulLiteral","src":"2457:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:26","nodeType":"YulIdentifier","src":"2446:3:26"},"nativeSrc":"2446:16:26","nodeType":"YulFunctionCall","src":"2446:16:26"},{"name":"pos","nativeSrc":"2464:3:26","nodeType":"YulIdentifier","src":"2464:3:26"},{"name":"length","nativeSrc":"2469:6:26","nodeType":"YulIdentifier","src":"2469:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:26","nodeType":"YulIdentifier","src":"2411:34:26"},"nativeSrc":"2411:65:26","nodeType":"YulFunctionCall","src":"2411:65:26"},"nativeSrc":"2411:65:26","nodeType":"YulExpressionStatement","src":"2411:65:26"},{"nativeSrc":"2485:46:26","nodeType":"YulAssignment","src":"2485:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:26","nodeType":"YulIdentifier","src":"2496:3:26"},{"arguments":[{"name":"length","nativeSrc":"2523:6:26","nodeType":"YulIdentifier","src":"2523:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:26","nodeType":"YulIdentifier","src":"2501:21:26"},"nativeSrc":"2501:29:26","nodeType":"YulFunctionCall","src":"2501:29:26"}],"functionName":{"name":"add","nativeSrc":"2492:3:26","nodeType":"YulIdentifier","src":"2492:3:26"},"nativeSrc":"2492:39:26","nodeType":"YulFunctionCall","src":"2492:39:26"},"variableNames":[{"name":"end","nativeSrc":"2485:3:26","nodeType":"YulIdentifier","src":"2485:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:26","nodeType":"YulTypedName","src":"2233:5:26","type":""},{"name":"pos","nativeSrc":"2240:3:26","nodeType":"YulTypedName","src":"2240:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:26","nodeType":"YulTypedName","src":"2248:3:26","type":""}],"src":"2160:377:26"},{"body":{"nativeSrc":"2661:195:26","nodeType":"YulBlock","src":"2661:195:26","statements":[{"nativeSrc":"2671:26:26","nodeType":"YulAssignment","src":"2671:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:26","nodeType":"YulIdentifier","src":"2683:9:26"},{"kind":"number","nativeSrc":"2694:2:26","nodeType":"YulLiteral","src":"2694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:26","nodeType":"YulIdentifier","src":"2679:3:26"},"nativeSrc":"2679:18:26","nodeType":"YulFunctionCall","src":"2679:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:26","nodeType":"YulIdentifier","src":"2671:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:26","nodeType":"YulIdentifier","src":"2718:9:26"},{"kind":"number","nativeSrc":"2729:1:26","nodeType":"YulLiteral","src":"2729:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:26","nodeType":"YulIdentifier","src":"2714:3:26"},"nativeSrc":"2714:17:26","nodeType":"YulFunctionCall","src":"2714:17:26"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:26","nodeType":"YulIdentifier","src":"2737:4:26"},{"name":"headStart","nativeSrc":"2743:9:26","nodeType":"YulIdentifier","src":"2743:9:26"}],"functionName":{"name":"sub","nativeSrc":"2733:3:26","nodeType":"YulIdentifier","src":"2733:3:26"},"nativeSrc":"2733:20:26","nodeType":"YulFunctionCall","src":"2733:20:26"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:26","nodeType":"YulIdentifier","src":"2707:6:26"},"nativeSrc":"2707:47:26","nodeType":"YulFunctionCall","src":"2707:47:26"},"nativeSrc":"2707:47:26","nodeType":"YulExpressionStatement","src":"2707:47:26"},{"nativeSrc":"2763:86:26","nodeType":"YulAssignment","src":"2763:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:26","nodeType":"YulIdentifier","src":"2835:6:26"},{"name":"tail","nativeSrc":"2844:4:26","nodeType":"YulIdentifier","src":"2844:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:26","nodeType":"YulIdentifier","src":"2771:63:26"},"nativeSrc":"2771:78:26","nodeType":"YulFunctionCall","src":"2771:78:26"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:26","nodeType":"YulIdentifier","src":"2763:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:26","nodeType":"YulTypedName","src":"2633:9:26","type":""},{"name":"value0","nativeSrc":"2645:6:26","nodeType":"YulTypedName","src":"2645:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:26","nodeType":"YulTypedName","src":"2656:4:26","type":""}],"src":"2543:313:26"},{"body":{"nativeSrc":"2907:32:26","nodeType":"YulBlock","src":"2907:32:26","statements":[{"nativeSrc":"2917:16:26","nodeType":"YulAssignment","src":"2917:16:26","value":{"name":"value","nativeSrc":"2928:5:26","nodeType":"YulIdentifier","src":"2928:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:26","nodeType":"YulIdentifier","src":"2917:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:26","nodeType":"YulTypedName","src":"2889:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:26","nodeType":"YulTypedName","src":"2899:7:26","type":""}],"src":"2862:77:26"},{"body":{"nativeSrc":"2988:79:26","nodeType":"YulBlock","src":"2988:79:26","statements":[{"body":{"nativeSrc":"3045:16:26","nodeType":"YulBlock","src":"3045:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:26","nodeType":"YulLiteral","src":"3054:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:26","nodeType":"YulLiteral","src":"3057:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:26","nodeType":"YulIdentifier","src":"3047:6:26"},"nativeSrc":"3047:12:26","nodeType":"YulFunctionCall","src":"3047:12:26"},"nativeSrc":"3047:12:26","nodeType":"YulExpressionStatement","src":"3047:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:26","nodeType":"YulIdentifier","src":"3011:5:26"},{"arguments":[{"name":"value","nativeSrc":"3036:5:26","nodeType":"YulIdentifier","src":"3036:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:26","nodeType":"YulIdentifier","src":"3018:17:26"},"nativeSrc":"3018:24:26","nodeType":"YulFunctionCall","src":"3018:24:26"}],"functionName":{"name":"eq","nativeSrc":"3008:2:26","nodeType":"YulIdentifier","src":"3008:2:26"},"nativeSrc":"3008:35:26","nodeType":"YulFunctionCall","src":"3008:35:26"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:26","nodeType":"YulIdentifier","src":"3001:6:26"},"nativeSrc":"3001:43:26","nodeType":"YulFunctionCall","src":"3001:43:26"},"nativeSrc":"2998:63:26","nodeType":"YulIf","src":"2998:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:26","nodeType":"YulTypedName","src":"2981:5:26","type":""}],"src":"2945:122:26"},{"body":{"nativeSrc":"3125:87:26","nodeType":"YulBlock","src":"3125:87:26","statements":[{"nativeSrc":"3135:29:26","nodeType":"YulAssignment","src":"3135:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:26","nodeType":"YulIdentifier","src":"3157:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:26","nodeType":"YulIdentifier","src":"3144:12:26"},"nativeSrc":"3144:20:26","nodeType":"YulFunctionCall","src":"3144:20:26"},"variableNames":[{"name":"value","nativeSrc":"3135:5:26","nodeType":"YulIdentifier","src":"3135:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:26","nodeType":"YulIdentifier","src":"3200:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:26","nodeType":"YulIdentifier","src":"3173:26:26"},"nativeSrc":"3173:33:26","nodeType":"YulFunctionCall","src":"3173:33:26"},"nativeSrc":"3173:33:26","nodeType":"YulExpressionStatement","src":"3173:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:26","nodeType":"YulTypedName","src":"3103:6:26","type":""},{"name":"end","nativeSrc":"3111:3:26","nodeType":"YulTypedName","src":"3111:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:26","nodeType":"YulTypedName","src":"3119:5:26","type":""}],"src":"3073:139:26"},{"body":{"nativeSrc":"3284:263:26","nodeType":"YulBlock","src":"3284:263:26","statements":[{"body":{"nativeSrc":"3330:83:26","nodeType":"YulBlock","src":"3330:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:26","nodeType":"YulIdentifier","src":"3332:77:26"},"nativeSrc":"3332:79:26","nodeType":"YulFunctionCall","src":"3332:79:26"},"nativeSrc":"3332:79:26","nodeType":"YulExpressionStatement","src":"3332:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:26","nodeType":"YulIdentifier","src":"3305:7:26"},{"name":"headStart","nativeSrc":"3314:9:26","nodeType":"YulIdentifier","src":"3314:9:26"}],"functionName":{"name":"sub","nativeSrc":"3301:3:26","nodeType":"YulIdentifier","src":"3301:3:26"},"nativeSrc":"3301:23:26","nodeType":"YulFunctionCall","src":"3301:23:26"},{"kind":"number","nativeSrc":"3326:2:26","nodeType":"YulLiteral","src":"3326:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:26","nodeType":"YulIdentifier","src":"3297:3:26"},"nativeSrc":"3297:32:26","nodeType":"YulFunctionCall","src":"3297:32:26"},"nativeSrc":"3294:119:26","nodeType":"YulIf","src":"3294:119:26"},{"nativeSrc":"3423:117:26","nodeType":"YulBlock","src":"3423:117:26","statements":[{"nativeSrc":"3438:15:26","nodeType":"YulVariableDeclaration","src":"3438:15:26","value":{"kind":"number","nativeSrc":"3452:1:26","nodeType":"YulLiteral","src":"3452:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:26","nodeType":"YulTypedName","src":"3442:6:26","type":""}]},{"nativeSrc":"3467:63:26","nodeType":"YulAssignment","src":"3467:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:26","nodeType":"YulIdentifier","src":"3502:9:26"},{"name":"offset","nativeSrc":"3513:6:26","nodeType":"YulIdentifier","src":"3513:6:26"}],"functionName":{"name":"add","nativeSrc":"3498:3:26","nodeType":"YulIdentifier","src":"3498:3:26"},"nativeSrc":"3498:22:26","nodeType":"YulFunctionCall","src":"3498:22:26"},{"name":"dataEnd","nativeSrc":"3522:7:26","nodeType":"YulIdentifier","src":"3522:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:26","nodeType":"YulIdentifier","src":"3477:20:26"},"nativeSrc":"3477:53:26","nodeType":"YulFunctionCall","src":"3477:53:26"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:26","nodeType":"YulIdentifier","src":"3467:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:26","nodeType":"YulTypedName","src":"3254:9:26","type":""},{"name":"dataEnd","nativeSrc":"3265:7:26","nodeType":"YulTypedName","src":"3265:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:26","nodeType":"YulTypedName","src":"3277:6:26","type":""}],"src":"3218:329:26"},{"body":{"nativeSrc":"3598:81:26","nodeType":"YulBlock","src":"3598:81:26","statements":[{"nativeSrc":"3608:65:26","nodeType":"YulAssignment","src":"3608:65:26","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:26","nodeType":"YulIdentifier","src":"3623:5:26"},{"kind":"number","nativeSrc":"3630:42:26","nodeType":"YulLiteral","src":"3630:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:26","nodeType":"YulIdentifier","src":"3619:3:26"},"nativeSrc":"3619:54:26","nodeType":"YulFunctionCall","src":"3619:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:26","nodeType":"YulIdentifier","src":"3608:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:26","nodeType":"YulTypedName","src":"3580:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:26","nodeType":"YulTypedName","src":"3590:7:26","type":""}],"src":"3553:126:26"},{"body":{"nativeSrc":"3730:51:26","nodeType":"YulBlock","src":"3730:51:26","statements":[{"nativeSrc":"3740:35:26","nodeType":"YulAssignment","src":"3740:35:26","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:26","nodeType":"YulIdentifier","src":"3769:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:26","nodeType":"YulIdentifier","src":"3751:17:26"},"nativeSrc":"3751:24:26","nodeType":"YulFunctionCall","src":"3751:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:26","nodeType":"YulIdentifier","src":"3740:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:26","nodeType":"YulTypedName","src":"3712:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:26","nodeType":"YulTypedName","src":"3722:7:26","type":""}],"src":"3685:96:26"},{"body":{"nativeSrc":"3830:79:26","nodeType":"YulBlock","src":"3830:79:26","statements":[{"body":{"nativeSrc":"3887:16:26","nodeType":"YulBlock","src":"3887:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:1:26","nodeType":"YulLiteral","src":"3896:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3899:1:26","nodeType":"YulLiteral","src":"3899:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3889:6:26","nodeType":"YulIdentifier","src":"3889:6:26"},"nativeSrc":"3889:12:26","nodeType":"YulFunctionCall","src":"3889:12:26"},"nativeSrc":"3889:12:26","nodeType":"YulExpressionStatement","src":"3889:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3853:5:26","nodeType":"YulIdentifier","src":"3853:5:26"},{"arguments":[{"name":"value","nativeSrc":"3878:5:26","nodeType":"YulIdentifier","src":"3878:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3860:17:26","nodeType":"YulIdentifier","src":"3860:17:26"},"nativeSrc":"3860:24:26","nodeType":"YulFunctionCall","src":"3860:24:26"}],"functionName":{"name":"eq","nativeSrc":"3850:2:26","nodeType":"YulIdentifier","src":"3850:2:26"},"nativeSrc":"3850:35:26","nodeType":"YulFunctionCall","src":"3850:35:26"}],"functionName":{"name":"iszero","nativeSrc":"3843:6:26","nodeType":"YulIdentifier","src":"3843:6:26"},"nativeSrc":"3843:43:26","nodeType":"YulFunctionCall","src":"3843:43:26"},"nativeSrc":"3840:63:26","nodeType":"YulIf","src":"3840:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"3787:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3823:5:26","nodeType":"YulTypedName","src":"3823:5:26","type":""}],"src":"3787:122:26"},{"body":{"nativeSrc":"3967:87:26","nodeType":"YulBlock","src":"3967:87:26","statements":[{"nativeSrc":"3977:29:26","nodeType":"YulAssignment","src":"3977:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"3999:6:26","nodeType":"YulIdentifier","src":"3999:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3986:12:26","nodeType":"YulIdentifier","src":"3986:12:26"},"nativeSrc":"3986:20:26","nodeType":"YulFunctionCall","src":"3986:20:26"},"variableNames":[{"name":"value","nativeSrc":"3977:5:26","nodeType":"YulIdentifier","src":"3977:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4042:5:26","nodeType":"YulIdentifier","src":"4042:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4015:26:26","nodeType":"YulIdentifier","src":"4015:26:26"},"nativeSrc":"4015:33:26","nodeType":"YulFunctionCall","src":"4015:33:26"},"nativeSrc":"4015:33:26","nodeType":"YulExpressionStatement","src":"4015:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"3915:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3945:6:26","nodeType":"YulTypedName","src":"3945:6:26","type":""},{"name":"end","nativeSrc":"3953:3:26","nodeType":"YulTypedName","src":"3953:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3961:5:26","nodeType":"YulTypedName","src":"3961:5:26","type":""}],"src":"3915:139:26"},{"body":{"nativeSrc":"4143:391:26","nodeType":"YulBlock","src":"4143:391:26","statements":[{"body":{"nativeSrc":"4189:83:26","nodeType":"YulBlock","src":"4189:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4191:77:26","nodeType":"YulIdentifier","src":"4191:77:26"},"nativeSrc":"4191:79:26","nodeType":"YulFunctionCall","src":"4191:79:26"},"nativeSrc":"4191:79:26","nodeType":"YulExpressionStatement","src":"4191:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4164:7:26","nodeType":"YulIdentifier","src":"4164:7:26"},{"name":"headStart","nativeSrc":"4173:9:26","nodeType":"YulIdentifier","src":"4173:9:26"}],"functionName":{"name":"sub","nativeSrc":"4160:3:26","nodeType":"YulIdentifier","src":"4160:3:26"},"nativeSrc":"4160:23:26","nodeType":"YulFunctionCall","src":"4160:23:26"},{"kind":"number","nativeSrc":"4185:2:26","nodeType":"YulLiteral","src":"4185:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4156:3:26","nodeType":"YulIdentifier","src":"4156:3:26"},"nativeSrc":"4156:32:26","nodeType":"YulFunctionCall","src":"4156:32:26"},"nativeSrc":"4153:119:26","nodeType":"YulIf","src":"4153:119:26"},{"nativeSrc":"4282:117:26","nodeType":"YulBlock","src":"4282:117:26","statements":[{"nativeSrc":"4297:15:26","nodeType":"YulVariableDeclaration","src":"4297:15:26","value":{"kind":"number","nativeSrc":"4311:1:26","nodeType":"YulLiteral","src":"4311:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4301:6:26","nodeType":"YulTypedName","src":"4301:6:26","type":""}]},{"nativeSrc":"4326:63:26","nodeType":"YulAssignment","src":"4326:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4361:9:26","nodeType":"YulIdentifier","src":"4361:9:26"},{"name":"offset","nativeSrc":"4372:6:26","nodeType":"YulIdentifier","src":"4372:6:26"}],"functionName":{"name":"add","nativeSrc":"4357:3:26","nodeType":"YulIdentifier","src":"4357:3:26"},"nativeSrc":"4357:22:26","nodeType":"YulFunctionCall","src":"4357:22:26"},{"name":"dataEnd","nativeSrc":"4381:7:26","nodeType":"YulIdentifier","src":"4381:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4336:20:26","nodeType":"YulIdentifier","src":"4336:20:26"},"nativeSrc":"4336:53:26","nodeType":"YulFunctionCall","src":"4336:53:26"},"variableNames":[{"name":"value0","nativeSrc":"4326:6:26","nodeType":"YulIdentifier","src":"4326:6:26"}]}]},{"nativeSrc":"4409:118:26","nodeType":"YulBlock","src":"4409:118:26","statements":[{"nativeSrc":"4424:16:26","nodeType":"YulVariableDeclaration","src":"4424:16:26","value":{"kind":"number","nativeSrc":"4438:2:26","nodeType":"YulLiteral","src":"4438:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4428:6:26","nodeType":"YulTypedName","src":"4428:6:26","type":""}]},{"nativeSrc":"4454:63:26","nodeType":"YulAssignment","src":"4454:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4489:9:26","nodeType":"YulIdentifier","src":"4489:9:26"},{"name":"offset","nativeSrc":"4500:6:26","nodeType":"YulIdentifier","src":"4500:6:26"}],"functionName":{"name":"add","nativeSrc":"4485:3:26","nodeType":"YulIdentifier","src":"4485:3:26"},"nativeSrc":"4485:22:26","nodeType":"YulFunctionCall","src":"4485:22:26"},{"name":"dataEnd","nativeSrc":"4509:7:26","nodeType":"YulIdentifier","src":"4509:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4464:20:26","nodeType":"YulIdentifier","src":"4464:20:26"},"nativeSrc":"4464:53:26","nodeType":"YulFunctionCall","src":"4464:53:26"},"variableNames":[{"name":"value1","nativeSrc":"4454:6:26","nodeType":"YulIdentifier","src":"4454:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4060:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4105:9:26","nodeType":"YulTypedName","src":"4105:9:26","type":""},{"name":"dataEnd","nativeSrc":"4116:7:26","nodeType":"YulTypedName","src":"4116:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4128:6:26","nodeType":"YulTypedName","src":"4128:6:26","type":""},{"name":"value1","nativeSrc":"4136:6:26","nodeType":"YulTypedName","src":"4136:6:26","type":""}],"src":"4060:474:26"},{"body":{"nativeSrc":"4605:53:26","nodeType":"YulBlock","src":"4605:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4622:3:26","nodeType":"YulIdentifier","src":"4622:3:26"},{"arguments":[{"name":"value","nativeSrc":"4645:5:26","nodeType":"YulIdentifier","src":"4645:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4627:17:26","nodeType":"YulIdentifier","src":"4627:17:26"},"nativeSrc":"4627:24:26","nodeType":"YulFunctionCall","src":"4627:24:26"}],"functionName":{"name":"mstore","nativeSrc":"4615:6:26","nodeType":"YulIdentifier","src":"4615:6:26"},"nativeSrc":"4615:37:26","nodeType":"YulFunctionCall","src":"4615:37:26"},"nativeSrc":"4615:37:26","nodeType":"YulExpressionStatement","src":"4615:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4540:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4593:5:26","nodeType":"YulTypedName","src":"4593:5:26","type":""},{"name":"pos","nativeSrc":"4600:3:26","nodeType":"YulTypedName","src":"4600:3:26","type":""}],"src":"4540:118:26"},{"body":{"nativeSrc":"4762:124:26","nodeType":"YulBlock","src":"4762:124:26","statements":[{"nativeSrc":"4772:26:26","nodeType":"YulAssignment","src":"4772:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4784:9:26","nodeType":"YulIdentifier","src":"4784:9:26"},{"kind":"number","nativeSrc":"4795:2:26","nodeType":"YulLiteral","src":"4795:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4780:3:26","nodeType":"YulIdentifier","src":"4780:3:26"},"nativeSrc":"4780:18:26","nodeType":"YulFunctionCall","src":"4780:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4772:4:26","nodeType":"YulIdentifier","src":"4772:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4852:6:26","nodeType":"YulIdentifier","src":"4852:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"4865:9:26","nodeType":"YulIdentifier","src":"4865:9:26"},{"kind":"number","nativeSrc":"4876:1:26","nodeType":"YulLiteral","src":"4876:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4861:3:26","nodeType":"YulIdentifier","src":"4861:3:26"},"nativeSrc":"4861:17:26","nodeType":"YulFunctionCall","src":"4861:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4808:43:26","nodeType":"YulIdentifier","src":"4808:43:26"},"nativeSrc":"4808:71:26","nodeType":"YulFunctionCall","src":"4808:71:26"},"nativeSrc":"4808:71:26","nodeType":"YulExpressionStatement","src":"4808:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4664:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4734:9:26","nodeType":"YulTypedName","src":"4734:9:26","type":""},{"name":"value0","nativeSrc":"4746:6:26","nodeType":"YulTypedName","src":"4746:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4757:4:26","nodeType":"YulTypedName","src":"4757:4:26","type":""}],"src":"4664:222:26"},{"body":{"nativeSrc":"4992:519:26","nodeType":"YulBlock","src":"4992:519:26","statements":[{"body":{"nativeSrc":"5038:83:26","nodeType":"YulBlock","src":"5038:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:26","nodeType":"YulIdentifier","src":"5040:77:26"},"nativeSrc":"5040:79:26","nodeType":"YulFunctionCall","src":"5040:79:26"},"nativeSrc":"5040:79:26","nodeType":"YulExpressionStatement","src":"5040:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:26","nodeType":"YulIdentifier","src":"5013:7:26"},{"name":"headStart","nativeSrc":"5022:9:26","nodeType":"YulIdentifier","src":"5022:9:26"}],"functionName":{"name":"sub","nativeSrc":"5009:3:26","nodeType":"YulIdentifier","src":"5009:3:26"},"nativeSrc":"5009:23:26","nodeType":"YulFunctionCall","src":"5009:23:26"},{"kind":"number","nativeSrc":"5034:2:26","nodeType":"YulLiteral","src":"5034:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:26","nodeType":"YulIdentifier","src":"5005:3:26"},"nativeSrc":"5005:32:26","nodeType":"YulFunctionCall","src":"5005:32:26"},"nativeSrc":"5002:119:26","nodeType":"YulIf","src":"5002:119:26"},{"nativeSrc":"5131:117:26","nodeType":"YulBlock","src":"5131:117:26","statements":[{"nativeSrc":"5146:15:26","nodeType":"YulVariableDeclaration","src":"5146:15:26","value":{"kind":"number","nativeSrc":"5160:1:26","nodeType":"YulLiteral","src":"5160:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:26","nodeType":"YulTypedName","src":"5150:6:26","type":""}]},{"nativeSrc":"5175:63:26","nodeType":"YulAssignment","src":"5175:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:26","nodeType":"YulIdentifier","src":"5210:9:26"},{"name":"offset","nativeSrc":"5221:6:26","nodeType":"YulIdentifier","src":"5221:6:26"}],"functionName":{"name":"add","nativeSrc":"5206:3:26","nodeType":"YulIdentifier","src":"5206:3:26"},"nativeSrc":"5206:22:26","nodeType":"YulFunctionCall","src":"5206:22:26"},{"name":"dataEnd","nativeSrc":"5230:7:26","nodeType":"YulIdentifier","src":"5230:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:26","nodeType":"YulIdentifier","src":"5185:20:26"},"nativeSrc":"5185:53:26","nodeType":"YulFunctionCall","src":"5185:53:26"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:26","nodeType":"YulIdentifier","src":"5175:6:26"}]}]},{"nativeSrc":"5258:118:26","nodeType":"YulBlock","src":"5258:118:26","statements":[{"nativeSrc":"5273:16:26","nodeType":"YulVariableDeclaration","src":"5273:16:26","value":{"kind":"number","nativeSrc":"5287:2:26","nodeType":"YulLiteral","src":"5287:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:26","nodeType":"YulTypedName","src":"5277:6:26","type":""}]},{"nativeSrc":"5303:63:26","nodeType":"YulAssignment","src":"5303:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:26","nodeType":"YulIdentifier","src":"5338:9:26"},{"name":"offset","nativeSrc":"5349:6:26","nodeType":"YulIdentifier","src":"5349:6:26"}],"functionName":{"name":"add","nativeSrc":"5334:3:26","nodeType":"YulIdentifier","src":"5334:3:26"},"nativeSrc":"5334:22:26","nodeType":"YulFunctionCall","src":"5334:22:26"},{"name":"dataEnd","nativeSrc":"5358:7:26","nodeType":"YulIdentifier","src":"5358:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:26","nodeType":"YulIdentifier","src":"5313:20:26"},"nativeSrc":"5313:53:26","nodeType":"YulFunctionCall","src":"5313:53:26"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:26","nodeType":"YulIdentifier","src":"5303:6:26"}]}]},{"nativeSrc":"5386:118:26","nodeType":"YulBlock","src":"5386:118:26","statements":[{"nativeSrc":"5401:16:26","nodeType":"YulVariableDeclaration","src":"5401:16:26","value":{"kind":"number","nativeSrc":"5415:2:26","nodeType":"YulLiteral","src":"5415:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:26","nodeType":"YulTypedName","src":"5405:6:26","type":""}]},{"nativeSrc":"5431:63:26","nodeType":"YulAssignment","src":"5431:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:26","nodeType":"YulIdentifier","src":"5466:9:26"},{"name":"offset","nativeSrc":"5477:6:26","nodeType":"YulIdentifier","src":"5477:6:26"}],"functionName":{"name":"add","nativeSrc":"5462:3:26","nodeType":"YulIdentifier","src":"5462:3:26"},"nativeSrc":"5462:22:26","nodeType":"YulFunctionCall","src":"5462:22:26"},{"name":"dataEnd","nativeSrc":"5486:7:26","nodeType":"YulIdentifier","src":"5486:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:26","nodeType":"YulIdentifier","src":"5441:20:26"},"nativeSrc":"5441:53:26","nodeType":"YulFunctionCall","src":"5441:53:26"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:26","nodeType":"YulIdentifier","src":"5431:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:26","nodeType":"YulTypedName","src":"4946:9:26","type":""},{"name":"dataEnd","nativeSrc":"4957:7:26","nodeType":"YulTypedName","src":"4957:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:26","nodeType":"YulTypedName","src":"4969:6:26","type":""},{"name":"value1","nativeSrc":"4977:6:26","nodeType":"YulTypedName","src":"4977:6:26","type":""},{"name":"value2","nativeSrc":"4985:6:26","nodeType":"YulTypedName","src":"4985:6:26","type":""}],"src":"4892:619:26"},{"body":{"nativeSrc":"5562:32:26","nodeType":"YulBlock","src":"5562:32:26","statements":[{"nativeSrc":"5572:16:26","nodeType":"YulAssignment","src":"5572:16:26","value":{"name":"value","nativeSrc":"5583:5:26","nodeType":"YulIdentifier","src":"5583:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"5572:7:26","nodeType":"YulIdentifier","src":"5572:7:26"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5517:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5544:5:26","nodeType":"YulTypedName","src":"5544:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5554:7:26","nodeType":"YulTypedName","src":"5554:7:26","type":""}],"src":"5517:77:26"},{"body":{"nativeSrc":"5643:79:26","nodeType":"YulBlock","src":"5643:79:26","statements":[{"body":{"nativeSrc":"5700:16:26","nodeType":"YulBlock","src":"5700:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5709:1:26","nodeType":"YulLiteral","src":"5709:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5712:1:26","nodeType":"YulLiteral","src":"5712:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5702:6:26","nodeType":"YulIdentifier","src":"5702:6:26"},"nativeSrc":"5702:12:26","nodeType":"YulFunctionCall","src":"5702:12:26"},"nativeSrc":"5702:12:26","nodeType":"YulExpressionStatement","src":"5702:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5666:5:26","nodeType":"YulIdentifier","src":"5666:5:26"},{"arguments":[{"name":"value","nativeSrc":"5691:5:26","nodeType":"YulIdentifier","src":"5691:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5673:17:26","nodeType":"YulIdentifier","src":"5673:17:26"},"nativeSrc":"5673:24:26","nodeType":"YulFunctionCall","src":"5673:24:26"}],"functionName":{"name":"eq","nativeSrc":"5663:2:26","nodeType":"YulIdentifier","src":"5663:2:26"},"nativeSrc":"5663:35:26","nodeType":"YulFunctionCall","src":"5663:35:26"}],"functionName":{"name":"iszero","nativeSrc":"5656:6:26","nodeType":"YulIdentifier","src":"5656:6:26"},"nativeSrc":"5656:43:26","nodeType":"YulFunctionCall","src":"5656:43:26"},"nativeSrc":"5653:63:26","nodeType":"YulIf","src":"5653:63:26"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5600:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5636:5:26","nodeType":"YulTypedName","src":"5636:5:26","type":""}],"src":"5600:122:26"},{"body":{"nativeSrc":"5780:87:26","nodeType":"YulBlock","src":"5780:87:26","statements":[{"nativeSrc":"5790:29:26","nodeType":"YulAssignment","src":"5790:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"5812:6:26","nodeType":"YulIdentifier","src":"5812:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"5799:12:26","nodeType":"YulIdentifier","src":"5799:12:26"},"nativeSrc":"5799:20:26","nodeType":"YulFunctionCall","src":"5799:20:26"},"variableNames":[{"name":"value","nativeSrc":"5790:5:26","nodeType":"YulIdentifier","src":"5790:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5855:5:26","nodeType":"YulIdentifier","src":"5855:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5828:26:26","nodeType":"YulIdentifier","src":"5828:26:26"},"nativeSrc":"5828:33:26","nodeType":"YulFunctionCall","src":"5828:33:26"},"nativeSrc":"5828:33:26","nodeType":"YulExpressionStatement","src":"5828:33:26"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5728:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5758:6:26","nodeType":"YulTypedName","src":"5758:6:26","type":""},{"name":"end","nativeSrc":"5766:3:26","nodeType":"YulTypedName","src":"5766:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5774:5:26","nodeType":"YulTypedName","src":"5774:5:26","type":""}],"src":"5728:139:26"},{"body":{"nativeSrc":"5939:263:26","nodeType":"YulBlock","src":"5939:263:26","statements":[{"body":{"nativeSrc":"5985:83:26","nodeType":"YulBlock","src":"5985:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5987:77:26","nodeType":"YulIdentifier","src":"5987:77:26"},"nativeSrc":"5987:79:26","nodeType":"YulFunctionCall","src":"5987:79:26"},"nativeSrc":"5987:79:26","nodeType":"YulExpressionStatement","src":"5987:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5960:7:26","nodeType":"YulIdentifier","src":"5960:7:26"},{"name":"headStart","nativeSrc":"5969:9:26","nodeType":"YulIdentifier","src":"5969:9:26"}],"functionName":{"name":"sub","nativeSrc":"5956:3:26","nodeType":"YulIdentifier","src":"5956:3:26"},"nativeSrc":"5956:23:26","nodeType":"YulFunctionCall","src":"5956:23:26"},{"kind":"number","nativeSrc":"5981:2:26","nodeType":"YulLiteral","src":"5981:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5952:3:26","nodeType":"YulIdentifier","src":"5952:3:26"},"nativeSrc":"5952:32:26","nodeType":"YulFunctionCall","src":"5952:32:26"},"nativeSrc":"5949:119:26","nodeType":"YulIf","src":"5949:119:26"},{"nativeSrc":"6078:117:26","nodeType":"YulBlock","src":"6078:117:26","statements":[{"nativeSrc":"6093:15:26","nodeType":"YulVariableDeclaration","src":"6093:15:26","value":{"kind":"number","nativeSrc":"6107:1:26","nodeType":"YulLiteral","src":"6107:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6097:6:26","nodeType":"YulTypedName","src":"6097:6:26","type":""}]},{"nativeSrc":"6122:63:26","nodeType":"YulAssignment","src":"6122:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6157:9:26","nodeType":"YulIdentifier","src":"6157:9:26"},{"name":"offset","nativeSrc":"6168:6:26","nodeType":"YulIdentifier","src":"6168:6:26"}],"functionName":{"name":"add","nativeSrc":"6153:3:26","nodeType":"YulIdentifier","src":"6153:3:26"},"nativeSrc":"6153:22:26","nodeType":"YulFunctionCall","src":"6153:22:26"},{"name":"dataEnd","nativeSrc":"6177:7:26","nodeType":"YulIdentifier","src":"6177:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6132:20:26","nodeType":"YulIdentifier","src":"6132:20:26"},"nativeSrc":"6132:53:26","nodeType":"YulFunctionCall","src":"6132:53:26"},"variableNames":[{"name":"value0","nativeSrc":"6122:6:26","nodeType":"YulIdentifier","src":"6122:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5873:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5909:9:26","nodeType":"YulTypedName","src":"5909:9:26","type":""},{"name":"dataEnd","nativeSrc":"5920:7:26","nodeType":"YulTypedName","src":"5920:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5932:6:26","nodeType":"YulTypedName","src":"5932:6:26","type":""}],"src":"5873:329:26"},{"body":{"nativeSrc":"6273:53:26","nodeType":"YulBlock","src":"6273:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6290:3:26","nodeType":"YulIdentifier","src":"6290:3:26"},{"arguments":[{"name":"value","nativeSrc":"6313:5:26","nodeType":"YulIdentifier","src":"6313:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6295:17:26","nodeType":"YulIdentifier","src":"6295:17:26"},"nativeSrc":"6295:24:26","nodeType":"YulFunctionCall","src":"6295:24:26"}],"functionName":{"name":"mstore","nativeSrc":"6283:6:26","nodeType":"YulIdentifier","src":"6283:6:26"},"nativeSrc":"6283:37:26","nodeType":"YulFunctionCall","src":"6283:37:26"},"nativeSrc":"6283:37:26","nodeType":"YulExpressionStatement","src":"6283:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6208:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6261:5:26","nodeType":"YulTypedName","src":"6261:5:26","type":""},{"name":"pos","nativeSrc":"6268:3:26","nodeType":"YulTypedName","src":"6268:3:26","type":""}],"src":"6208:118:26"},{"body":{"nativeSrc":"6430:124:26","nodeType":"YulBlock","src":"6430:124:26","statements":[{"nativeSrc":"6440:26:26","nodeType":"YulAssignment","src":"6440:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6452:9:26","nodeType":"YulIdentifier","src":"6452:9:26"},{"kind":"number","nativeSrc":"6463:2:26","nodeType":"YulLiteral","src":"6463:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6448:3:26","nodeType":"YulIdentifier","src":"6448:3:26"},"nativeSrc":"6448:18:26","nodeType":"YulFunctionCall","src":"6448:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6440:4:26","nodeType":"YulIdentifier","src":"6440:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6520:6:26","nodeType":"YulIdentifier","src":"6520:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6533:9:26","nodeType":"YulIdentifier","src":"6533:9:26"},{"kind":"number","nativeSrc":"6544:1:26","nodeType":"YulLiteral","src":"6544:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6529:3:26","nodeType":"YulIdentifier","src":"6529:3:26"},"nativeSrc":"6529:17:26","nodeType":"YulFunctionCall","src":"6529:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6476:43:26","nodeType":"YulIdentifier","src":"6476:43:26"},"nativeSrc":"6476:71:26","nodeType":"YulFunctionCall","src":"6476:71:26"},"nativeSrc":"6476:71:26","nodeType":"YulExpressionStatement","src":"6476:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6332:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6402:9:26","nodeType":"YulTypedName","src":"6402:9:26","type":""},{"name":"value0","nativeSrc":"6414:6:26","nodeType":"YulTypedName","src":"6414:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6425:4:26","nodeType":"YulTypedName","src":"6425:4:26","type":""}],"src":"6332:222:26"},{"body":{"nativeSrc":"6643:391:26","nodeType":"YulBlock","src":"6643:391:26","statements":[{"body":{"nativeSrc":"6689:83:26","nodeType":"YulBlock","src":"6689:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6691:77:26","nodeType":"YulIdentifier","src":"6691:77:26"},"nativeSrc":"6691:79:26","nodeType":"YulFunctionCall","src":"6691:79:26"},"nativeSrc":"6691:79:26","nodeType":"YulExpressionStatement","src":"6691:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6664:7:26","nodeType":"YulIdentifier","src":"6664:7:26"},{"name":"headStart","nativeSrc":"6673:9:26","nodeType":"YulIdentifier","src":"6673:9:26"}],"functionName":{"name":"sub","nativeSrc":"6660:3:26","nodeType":"YulIdentifier","src":"6660:3:26"},"nativeSrc":"6660:23:26","nodeType":"YulFunctionCall","src":"6660:23:26"},{"kind":"number","nativeSrc":"6685:2:26","nodeType":"YulLiteral","src":"6685:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6656:3:26","nodeType":"YulIdentifier","src":"6656:3:26"},"nativeSrc":"6656:32:26","nodeType":"YulFunctionCall","src":"6656:32:26"},"nativeSrc":"6653:119:26","nodeType":"YulIf","src":"6653:119:26"},{"nativeSrc":"6782:117:26","nodeType":"YulBlock","src":"6782:117:26","statements":[{"nativeSrc":"6797:15:26","nodeType":"YulVariableDeclaration","src":"6797:15:26","value":{"kind":"number","nativeSrc":"6811:1:26","nodeType":"YulLiteral","src":"6811:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6801:6:26","nodeType":"YulTypedName","src":"6801:6:26","type":""}]},{"nativeSrc":"6826:63:26","nodeType":"YulAssignment","src":"6826:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6861:9:26","nodeType":"YulIdentifier","src":"6861:9:26"},{"name":"offset","nativeSrc":"6872:6:26","nodeType":"YulIdentifier","src":"6872:6:26"}],"functionName":{"name":"add","nativeSrc":"6857:3:26","nodeType":"YulIdentifier","src":"6857:3:26"},"nativeSrc":"6857:22:26","nodeType":"YulFunctionCall","src":"6857:22:26"},{"name":"dataEnd","nativeSrc":"6881:7:26","nodeType":"YulIdentifier","src":"6881:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6836:20:26","nodeType":"YulIdentifier","src":"6836:20:26"},"nativeSrc":"6836:53:26","nodeType":"YulFunctionCall","src":"6836:53:26"},"variableNames":[{"name":"value0","nativeSrc":"6826:6:26","nodeType":"YulIdentifier","src":"6826:6:26"}]}]},{"nativeSrc":"6909:118:26","nodeType":"YulBlock","src":"6909:118:26","statements":[{"nativeSrc":"6924:16:26","nodeType":"YulVariableDeclaration","src":"6924:16:26","value":{"kind":"number","nativeSrc":"6938:2:26","nodeType":"YulLiteral","src":"6938:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6928:6:26","nodeType":"YulTypedName","src":"6928:6:26","type":""}]},{"nativeSrc":"6954:63:26","nodeType":"YulAssignment","src":"6954:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6989:9:26","nodeType":"YulIdentifier","src":"6989:9:26"},{"name":"offset","nativeSrc":"7000:6:26","nodeType":"YulIdentifier","src":"7000:6:26"}],"functionName":{"name":"add","nativeSrc":"6985:3:26","nodeType":"YulIdentifier","src":"6985:3:26"},"nativeSrc":"6985:22:26","nodeType":"YulFunctionCall","src":"6985:22:26"},{"name":"dataEnd","nativeSrc":"7009:7:26","nodeType":"YulIdentifier","src":"7009:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6964:20:26","nodeType":"YulIdentifier","src":"6964:20:26"},"nativeSrc":"6964:53:26","nodeType":"YulFunctionCall","src":"6964:53:26"},"variableNames":[{"name":"value1","nativeSrc":"6954:6:26","nodeType":"YulIdentifier","src":"6954:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6560:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6605:9:26","nodeType":"YulTypedName","src":"6605:9:26","type":""},{"name":"dataEnd","nativeSrc":"6616:7:26","nodeType":"YulTypedName","src":"6616:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6628:6:26","nodeType":"YulTypedName","src":"6628:6:26","type":""},{"name":"value1","nativeSrc":"6636:6:26","nodeType":"YulTypedName","src":"6636:6:26","type":""}],"src":"6560:474:26"},{"body":{"nativeSrc":"7083:43:26","nodeType":"YulBlock","src":"7083:43:26","statements":[{"nativeSrc":"7093:27:26","nodeType":"YulAssignment","src":"7093:27:26","value":{"arguments":[{"name":"value","nativeSrc":"7108:5:26","nodeType":"YulIdentifier","src":"7108:5:26"},{"kind":"number","nativeSrc":"7115:4:26","nodeType":"YulLiteral","src":"7115:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7104:3:26","nodeType":"YulIdentifier","src":"7104:3:26"},"nativeSrc":"7104:16:26","nodeType":"YulFunctionCall","src":"7104:16:26"},"variableNames":[{"name":"cleaned","nativeSrc":"7093:7:26","nodeType":"YulIdentifier","src":"7093:7:26"}]}]},"name":"cleanup_t_uint8","nativeSrc":"7040:86:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7065:5:26","nodeType":"YulTypedName","src":"7065:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7075:7:26","nodeType":"YulTypedName","src":"7075:7:26","type":""}],"src":"7040:86:26"},{"body":{"nativeSrc":"7193:51:26","nodeType":"YulBlock","src":"7193:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7210:3:26","nodeType":"YulIdentifier","src":"7210:3:26"},{"arguments":[{"name":"value","nativeSrc":"7231:5:26","nodeType":"YulIdentifier","src":"7231:5:26"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"7215:15:26","nodeType":"YulIdentifier","src":"7215:15:26"},"nativeSrc":"7215:22:26","nodeType":"YulFunctionCall","src":"7215:22:26"}],"functionName":{"name":"mstore","nativeSrc":"7203:6:26","nodeType":"YulIdentifier","src":"7203:6:26"},"nativeSrc":"7203:35:26","nodeType":"YulFunctionCall","src":"7203:35:26"},"nativeSrc":"7203:35:26","nodeType":"YulExpressionStatement","src":"7203:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7132:112:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7181:5:26","nodeType":"YulTypedName","src":"7181:5:26","type":""},{"name":"pos","nativeSrc":"7188:3:26","nodeType":"YulTypedName","src":"7188:3:26","type":""}],"src":"7132:112:26"},{"body":{"nativeSrc":"7344:120:26","nodeType":"YulBlock","src":"7344:120:26","statements":[{"nativeSrc":"7354:26:26","nodeType":"YulAssignment","src":"7354:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7366:9:26","nodeType":"YulIdentifier","src":"7366:9:26"},{"kind":"number","nativeSrc":"7377:2:26","nodeType":"YulLiteral","src":"7377:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7362:3:26","nodeType":"YulIdentifier","src":"7362:3:26"},"nativeSrc":"7362:18:26","nodeType":"YulFunctionCall","src":"7362:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7354:4:26","nodeType":"YulIdentifier","src":"7354:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7430:6:26","nodeType":"YulIdentifier","src":"7430:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"7443:9:26","nodeType":"YulIdentifier","src":"7443:9:26"},{"kind":"number","nativeSrc":"7454:1:26","nodeType":"YulLiteral","src":"7454:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7439:3:26","nodeType":"YulIdentifier","src":"7439:3:26"},"nativeSrc":"7439:17:26","nodeType":"YulFunctionCall","src":"7439:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7390:39:26","nodeType":"YulIdentifier","src":"7390:39:26"},"nativeSrc":"7390:67:26","nodeType":"YulFunctionCall","src":"7390:67:26"},"nativeSrc":"7390:67:26","nodeType":"YulExpressionStatement","src":"7390:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"7250:214:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7316:9:26","nodeType":"YulTypedName","src":"7316:9:26","type":""},{"name":"value0","nativeSrc":"7328:6:26","nodeType":"YulTypedName","src":"7328:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7339:4:26","nodeType":"YulTypedName","src":"7339:4:26","type":""}],"src":"7250:214:26"},{"body":{"nativeSrc":"7536:263:26","nodeType":"YulBlock","src":"7536:263:26","statements":[{"body":{"nativeSrc":"7582:83:26","nodeType":"YulBlock","src":"7582:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7584:77:26","nodeType":"YulIdentifier","src":"7584:77:26"},"nativeSrc":"7584:79:26","nodeType":"YulFunctionCall","src":"7584:79:26"},"nativeSrc":"7584:79:26","nodeType":"YulExpressionStatement","src":"7584:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7557:7:26","nodeType":"YulIdentifier","src":"7557:7:26"},{"name":"headStart","nativeSrc":"7566:9:26","nodeType":"YulIdentifier","src":"7566:9:26"}],"functionName":{"name":"sub","nativeSrc":"7553:3:26","nodeType":"YulIdentifier","src":"7553:3:26"},"nativeSrc":"7553:23:26","nodeType":"YulFunctionCall","src":"7553:23:26"},{"kind":"number","nativeSrc":"7578:2:26","nodeType":"YulLiteral","src":"7578:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7549:3:26","nodeType":"YulIdentifier","src":"7549:3:26"},"nativeSrc":"7549:32:26","nodeType":"YulFunctionCall","src":"7549:32:26"},"nativeSrc":"7546:119:26","nodeType":"YulIf","src":"7546:119:26"},{"nativeSrc":"7675:117:26","nodeType":"YulBlock","src":"7675:117:26","statements":[{"nativeSrc":"7690:15:26","nodeType":"YulVariableDeclaration","src":"7690:15:26","value":{"kind":"number","nativeSrc":"7704:1:26","nodeType":"YulLiteral","src":"7704:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7694:6:26","nodeType":"YulTypedName","src":"7694:6:26","type":""}]},{"nativeSrc":"7719:63:26","nodeType":"YulAssignment","src":"7719:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7754:9:26","nodeType":"YulIdentifier","src":"7754:9:26"},{"name":"offset","nativeSrc":"7765:6:26","nodeType":"YulIdentifier","src":"7765:6:26"}],"functionName":{"name":"add","nativeSrc":"7750:3:26","nodeType":"YulIdentifier","src":"7750:3:26"},"nativeSrc":"7750:22:26","nodeType":"YulFunctionCall","src":"7750:22:26"},{"name":"dataEnd","nativeSrc":"7774:7:26","nodeType":"YulIdentifier","src":"7774:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7729:20:26","nodeType":"YulIdentifier","src":"7729:20:26"},"nativeSrc":"7729:53:26","nodeType":"YulFunctionCall","src":"7729:53:26"},"variableNames":[{"name":"value0","nativeSrc":"7719:6:26","nodeType":"YulIdentifier","src":"7719:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7470:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7506:9:26","nodeType":"YulTypedName","src":"7506:9:26","type":""},{"name":"dataEnd","nativeSrc":"7517:7:26","nodeType":"YulTypedName","src":"7517:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7529:6:26","nodeType":"YulTypedName","src":"7529:6:26","type":""}],"src":"7470:329:26"},{"body":{"nativeSrc":"7870:53:26","nodeType":"YulBlock","src":"7870:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7887:3:26","nodeType":"YulIdentifier","src":"7887:3:26"},{"arguments":[{"name":"value","nativeSrc":"7910:5:26","nodeType":"YulIdentifier","src":"7910:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7892:17:26","nodeType":"YulIdentifier","src":"7892:17:26"},"nativeSrc":"7892:24:26","nodeType":"YulFunctionCall","src":"7892:24:26"}],"functionName":{"name":"mstore","nativeSrc":"7880:6:26","nodeType":"YulIdentifier","src":"7880:6:26"},"nativeSrc":"7880:37:26","nodeType":"YulFunctionCall","src":"7880:37:26"},"nativeSrc":"7880:37:26","nodeType":"YulExpressionStatement","src":"7880:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7805:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7858:5:26","nodeType":"YulTypedName","src":"7858:5:26","type":""},{"name":"pos","nativeSrc":"7865:3:26","nodeType":"YulTypedName","src":"7865:3:26","type":""}],"src":"7805:118:26"},{"body":{"nativeSrc":"8027:124:26","nodeType":"YulBlock","src":"8027:124:26","statements":[{"nativeSrc":"8037:26:26","nodeType":"YulAssignment","src":"8037:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8049:9:26","nodeType":"YulIdentifier","src":"8049:9:26"},{"kind":"number","nativeSrc":"8060:2:26","nodeType":"YulLiteral","src":"8060:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8045:3:26","nodeType":"YulIdentifier","src":"8045:3:26"},"nativeSrc":"8045:18:26","nodeType":"YulFunctionCall","src":"8045:18:26"},"variableNames":[{"name":"tail","nativeSrc":"8037:4:26","nodeType":"YulIdentifier","src":"8037:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8117:6:26","nodeType":"YulIdentifier","src":"8117:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8130:9:26","nodeType":"YulIdentifier","src":"8130:9:26"},{"kind":"number","nativeSrc":"8141:1:26","nodeType":"YulLiteral","src":"8141:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8126:3:26","nodeType":"YulIdentifier","src":"8126:3:26"},"nativeSrc":"8126:17:26","nodeType":"YulFunctionCall","src":"8126:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8073:43:26","nodeType":"YulIdentifier","src":"8073:43:26"},"nativeSrc":"8073:71:26","nodeType":"YulFunctionCall","src":"8073:71:26"},"nativeSrc":"8073:71:26","nodeType":"YulExpressionStatement","src":"8073:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7929:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7999:9:26","nodeType":"YulTypedName","src":"7999:9:26","type":""},{"name":"value0","nativeSrc":"8011:6:26","nodeType":"YulTypedName","src":"8011:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8022:4:26","nodeType":"YulTypedName","src":"8022:4:26","type":""}],"src":"7929:222:26"},{"body":{"nativeSrc":"8201:105:26","nodeType":"YulBlock","src":"8201:105:26","statements":[{"nativeSrc":"8211:89:26","nodeType":"YulAssignment","src":"8211:89:26","value":{"arguments":[{"name":"value","nativeSrc":"8226:5:26","nodeType":"YulIdentifier","src":"8226:5:26"},{"kind":"number","nativeSrc":"8233:66:26","nodeType":"YulLiteral","src":"8233:66:26","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"8222:3:26","nodeType":"YulIdentifier","src":"8222:3:26"},"nativeSrc":"8222:78:26","nodeType":"YulFunctionCall","src":"8222:78:26"},"variableNames":[{"name":"cleaned","nativeSrc":"8211:7:26","nodeType":"YulIdentifier","src":"8211:7:26"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"8157:149:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8183:5:26","nodeType":"YulTypedName","src":"8183:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8193:7:26","nodeType":"YulTypedName","src":"8193:7:26","type":""}],"src":"8157:149:26"},{"body":{"nativeSrc":"8375:52:26","nodeType":"YulBlock","src":"8375:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8392:3:26","nodeType":"YulIdentifier","src":"8392:3:26"},{"arguments":[{"name":"value","nativeSrc":"8414:5:26","nodeType":"YulIdentifier","src":"8414:5:26"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"8397:16:26","nodeType":"YulIdentifier","src":"8397:16:26"},"nativeSrc":"8397:23:26","nodeType":"YulFunctionCall","src":"8397:23:26"}],"functionName":{"name":"mstore","nativeSrc":"8385:6:26","nodeType":"YulIdentifier","src":"8385:6:26"},"nativeSrc":"8385:36:26","nodeType":"YulFunctionCall","src":"8385:36:26"},"nativeSrc":"8385:36:26","nodeType":"YulExpressionStatement","src":"8385:36:26"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8312:115:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8363:5:26","nodeType":"YulTypedName","src":"8363:5:26","type":""},{"name":"pos","nativeSrc":"8370:3:26","nodeType":"YulTypedName","src":"8370:3:26","type":""}],"src":"8312:115:26"},{"body":{"nativeSrc":"8507:40:26","nodeType":"YulBlock","src":"8507:40:26","statements":[{"nativeSrc":"8518:22:26","nodeType":"YulAssignment","src":"8518:22:26","value":{"arguments":[{"name":"value","nativeSrc":"8534:5:26","nodeType":"YulIdentifier","src":"8534:5:26"}],"functionName":{"name":"mload","nativeSrc":"8528:5:26","nodeType":"YulIdentifier","src":"8528:5:26"},"nativeSrc":"8528:12:26","nodeType":"YulFunctionCall","src":"8528:12:26"},"variableNames":[{"name":"length","nativeSrc":"8518:6:26","nodeType":"YulIdentifier","src":"8518:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8433:114:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8490:5:26","nodeType":"YulTypedName","src":"8490:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8500:6:26","nodeType":"YulTypedName","src":"8500:6:26","type":""}],"src":"8433:114:26"},{"body":{"nativeSrc":"8664:73:26","nodeType":"YulBlock","src":"8664:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8681:3:26","nodeType":"YulIdentifier","src":"8681:3:26"},{"name":"length","nativeSrc":"8686:6:26","nodeType":"YulIdentifier","src":"8686:6:26"}],"functionName":{"name":"mstore","nativeSrc":"8674:6:26","nodeType":"YulIdentifier","src":"8674:6:26"},"nativeSrc":"8674:19:26","nodeType":"YulFunctionCall","src":"8674:19:26"},"nativeSrc":"8674:19:26","nodeType":"YulExpressionStatement","src":"8674:19:26"},{"nativeSrc":"8702:29:26","nodeType":"YulAssignment","src":"8702:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"8721:3:26","nodeType":"YulIdentifier","src":"8721:3:26"},{"kind":"number","nativeSrc":"8726:4:26","nodeType":"YulLiteral","src":"8726:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8717:3:26","nodeType":"YulIdentifier","src":"8717:3:26"},"nativeSrc":"8717:14:26","nodeType":"YulFunctionCall","src":"8717:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"8702:11:26","nodeType":"YulIdentifier","src":"8702:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8553:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8636:3:26","nodeType":"YulTypedName","src":"8636:3:26","type":""},{"name":"length","nativeSrc":"8641:6:26","nodeType":"YulTypedName","src":"8641:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8652:11:26","nodeType":"YulTypedName","src":"8652:11:26","type":""}],"src":"8553:184:26"},{"body":{"nativeSrc":"8815:60:26","nodeType":"YulBlock","src":"8815:60:26","statements":[{"nativeSrc":"8825:11:26","nodeType":"YulAssignment","src":"8825:11:26","value":{"name":"ptr","nativeSrc":"8833:3:26","nodeType":"YulIdentifier","src":"8833:3:26"},"variableNames":[{"name":"data","nativeSrc":"8825:4:26","nodeType":"YulIdentifier","src":"8825:4:26"}]},{"nativeSrc":"8846:22:26","nodeType":"YulAssignment","src":"8846:22:26","value":{"arguments":[{"name":"ptr","nativeSrc":"8858:3:26","nodeType":"YulIdentifier","src":"8858:3:26"},{"kind":"number","nativeSrc":"8863:4:26","nodeType":"YulLiteral","src":"8863:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8854:3:26","nodeType":"YulIdentifier","src":"8854:3:26"},"nativeSrc":"8854:14:26","nodeType":"YulFunctionCall","src":"8854:14:26"},"variableNames":[{"name":"data","nativeSrc":"8846:4:26","nodeType":"YulIdentifier","src":"8846:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8743:132:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8802:3:26","nodeType":"YulTypedName","src":"8802:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"8810:4:26","nodeType":"YulTypedName","src":"8810:4:26","type":""}],"src":"8743:132:26"},{"body":{"nativeSrc":"8936:53:26","nodeType":"YulBlock","src":"8936:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8953:3:26","nodeType":"YulIdentifier","src":"8953:3:26"},{"arguments":[{"name":"value","nativeSrc":"8976:5:26","nodeType":"YulIdentifier","src":"8976:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8958:17:26","nodeType":"YulIdentifier","src":"8958:17:26"},"nativeSrc":"8958:24:26","nodeType":"YulFunctionCall","src":"8958:24:26"}],"functionName":{"name":"mstore","nativeSrc":"8946:6:26","nodeType":"YulIdentifier","src":"8946:6:26"},"nativeSrc":"8946:37:26","nodeType":"YulFunctionCall","src":"8946:37:26"},"nativeSrc":"8946:37:26","nodeType":"YulExpressionStatement","src":"8946:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8881:108:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8924:5:26","nodeType":"YulTypedName","src":"8924:5:26","type":""},{"name":"pos","nativeSrc":"8931:3:26","nodeType":"YulTypedName","src":"8931:3:26","type":""}],"src":"8881:108:26"},{"body":{"nativeSrc":"9075:99:26","nodeType":"YulBlock","src":"9075:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"9119:6:26","nodeType":"YulIdentifier","src":"9119:6:26"},{"name":"pos","nativeSrc":"9127:3:26","nodeType":"YulIdentifier","src":"9127:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"9085:33:26","nodeType":"YulIdentifier","src":"9085:33:26"},"nativeSrc":"9085:46:26","nodeType":"YulFunctionCall","src":"9085:46:26"},"nativeSrc":"9085:46:26","nodeType":"YulExpressionStatement","src":"9085:46:26"},{"nativeSrc":"9140:28:26","nodeType":"YulAssignment","src":"9140:28:26","value":{"arguments":[{"name":"pos","nativeSrc":"9158:3:26","nodeType":"YulIdentifier","src":"9158:3:26"},{"kind":"number","nativeSrc":"9163:4:26","nodeType":"YulLiteral","src":"9163:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9154:3:26","nodeType":"YulIdentifier","src":"9154:3:26"},"nativeSrc":"9154:14:26","nodeType":"YulFunctionCall","src":"9154:14:26"},"variableNames":[{"name":"updatedPos","nativeSrc":"9140:10:26","nodeType":"YulIdentifier","src":"9140:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"8995:179:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"9048:6:26","nodeType":"YulTypedName","src":"9048:6:26","type":""},{"name":"pos","nativeSrc":"9056:3:26","nodeType":"YulTypedName","src":"9056:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"9064:10:26","nodeType":"YulTypedName","src":"9064:10:26","type":""}],"src":"8995:179:26"},{"body":{"nativeSrc":"9255:38:26","nodeType":"YulBlock","src":"9255:38:26","statements":[{"nativeSrc":"9265:22:26","nodeType":"YulAssignment","src":"9265:22:26","value":{"arguments":[{"name":"ptr","nativeSrc":"9277:3:26","nodeType":"YulIdentifier","src":"9277:3:26"},{"kind":"number","nativeSrc":"9282:4:26","nodeType":"YulLiteral","src":"9282:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9273:3:26","nodeType":"YulIdentifier","src":"9273:3:26"},"nativeSrc":"9273:14:26","nodeType":"YulFunctionCall","src":"9273:14:26"},"variableNames":[{"name":"next","nativeSrc":"9265:4:26","nodeType":"YulIdentifier","src":"9265:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9180:113:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"9242:3:26","nodeType":"YulTypedName","src":"9242:3:26","type":""}],"returnVariables":[{"name":"next","nativeSrc":"9250:4:26","nodeType":"YulTypedName","src":"9250:4:26","type":""}],"src":"9180:113:26"},{"body":{"nativeSrc":"9453:608:26","nodeType":"YulBlock","src":"9453:608:26","statements":[{"nativeSrc":"9463:68:26","nodeType":"YulVariableDeclaration","src":"9463:68:26","value":{"arguments":[{"name":"value","nativeSrc":"9525:5:26","nodeType":"YulIdentifier","src":"9525:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9477:47:26","nodeType":"YulIdentifier","src":"9477:47:26"},"nativeSrc":"9477:54:26","nodeType":"YulFunctionCall","src":"9477:54:26"},"variables":[{"name":"length","nativeSrc":"9467:6:26","nodeType":"YulTypedName","src":"9467:6:26","type":""}]},{"nativeSrc":"9540:93:26","nodeType":"YulAssignment","src":"9540:93:26","value":{"arguments":[{"name":"pos","nativeSrc":"9621:3:26","nodeType":"YulIdentifier","src":"9621:3:26"},{"name":"length","nativeSrc":"9626:6:26","nodeType":"YulIdentifier","src":"9626:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9547:73:26","nodeType":"YulIdentifier","src":"9547:73:26"},"nativeSrc":"9547:86:26","nodeType":"YulFunctionCall","src":"9547:86:26"},"variableNames":[{"name":"pos","nativeSrc":"9540:3:26","nodeType":"YulIdentifier","src":"9540:3:26"}]},{"nativeSrc":"9642:71:26","nodeType":"YulVariableDeclaration","src":"9642:71:26","value":{"arguments":[{"name":"value","nativeSrc":"9707:5:26","nodeType":"YulIdentifier","src":"9707:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9657:49:26","nodeType":"YulIdentifier","src":"9657:49:26"},"nativeSrc":"9657:56:26","nodeType":"YulFunctionCall","src":"9657:56:26"},"variables":[{"name":"baseRef","nativeSrc":"9646:7:26","nodeType":"YulTypedName","src":"9646:7:26","type":""}]},{"nativeSrc":"9722:21:26","nodeType":"YulVariableDeclaration","src":"9722:21:26","value":{"name":"baseRef","nativeSrc":"9736:7:26","nodeType":"YulIdentifier","src":"9736:7:26"},"variables":[{"name":"srcPtr","nativeSrc":"9726:6:26","nodeType":"YulTypedName","src":"9726:6:26","type":""}]},{"body":{"nativeSrc":"9812:224:26","nodeType":"YulBlock","src":"9812:224:26","statements":[{"nativeSrc":"9826:34:26","nodeType":"YulVariableDeclaration","src":"9826:34:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9853:6:26","nodeType":"YulIdentifier","src":"9853:6:26"}],"functionName":{"name":"mload","nativeSrc":"9847:5:26","nodeType":"YulIdentifier","src":"9847:5:26"},"nativeSrc":"9847:13:26","nodeType":"YulFunctionCall","src":"9847:13:26"},"variables":[{"name":"elementValue0","nativeSrc":"9830:13:26","nodeType":"YulTypedName","src":"9830:13:26","type":""}]},{"nativeSrc":"9873:70:26","nodeType":"YulAssignment","src":"9873:70:26","value":{"arguments":[{"name":"elementValue0","nativeSrc":"9924:13:26","nodeType":"YulIdentifier","src":"9924:13:26"},{"name":"pos","nativeSrc":"9939:3:26","nodeType":"YulIdentifier","src":"9939:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"9880:43:26","nodeType":"YulIdentifier","src":"9880:43:26"},"nativeSrc":"9880:63:26","nodeType":"YulFunctionCall","src":"9880:63:26"},"variableNames":[{"name":"pos","nativeSrc":"9873:3:26","nodeType":"YulIdentifier","src":"9873:3:26"}]},{"nativeSrc":"9956:70:26","nodeType":"YulAssignment","src":"9956:70:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"10019:6:26","nodeType":"YulIdentifier","src":"10019:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9966:52:26","nodeType":"YulIdentifier","src":"9966:52:26"},"nativeSrc":"9966:60:26","nodeType":"YulFunctionCall","src":"9966:60:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"9956:6:26","nodeType":"YulIdentifier","src":"9956:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9774:1:26","nodeType":"YulIdentifier","src":"9774:1:26"},{"name":"length","nativeSrc":"9777:6:26","nodeType":"YulIdentifier","src":"9777:6:26"}],"functionName":{"name":"lt","nativeSrc":"9771:2:26","nodeType":"YulIdentifier","src":"9771:2:26"},"nativeSrc":"9771:13:26","nodeType":"YulFunctionCall","src":"9771:13:26"},"nativeSrc":"9752:284:26","nodeType":"YulForLoop","post":{"nativeSrc":"9785:18:26","nodeType":"YulBlock","src":"9785:18:26","statements":[{"nativeSrc":"9787:14:26","nodeType":"YulAssignment","src":"9787:14:26","value":{"arguments":[{"name":"i","nativeSrc":"9796:1:26","nodeType":"YulIdentifier","src":"9796:1:26"},{"kind":"number","nativeSrc":"9799:1:26","nodeType":"YulLiteral","src":"9799:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9792:3:26","nodeType":"YulIdentifier","src":"9792:3:26"},"nativeSrc":"9792:9:26","nodeType":"YulFunctionCall","src":"9792:9:26"},"variableNames":[{"name":"i","nativeSrc":"9787:1:26","nodeType":"YulIdentifier","src":"9787:1:26"}]}]},"pre":{"nativeSrc":"9756:14:26","nodeType":"YulBlock","src":"9756:14:26","statements":[{"nativeSrc":"9758:10:26","nodeType":"YulVariableDeclaration","src":"9758:10:26","value":{"kind":"number","nativeSrc":"9767:1:26","nodeType":"YulLiteral","src":"9767:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9762:1:26","nodeType":"YulTypedName","src":"9762:1:26","type":""}]}]},"src":"9752:284:26"},{"nativeSrc":"10045:10:26","nodeType":"YulAssignment","src":"10045:10:26","value":{"name":"pos","nativeSrc":"10052:3:26","nodeType":"YulIdentifier","src":"10052:3:26"},"variableNames":[{"name":"end","nativeSrc":"10045:3:26","nodeType":"YulIdentifier","src":"10045:3:26"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9329:732:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9432:5:26","nodeType":"YulTypedName","src":"9432:5:26","type":""},{"name":"pos","nativeSrc":"9439:3:26","nodeType":"YulTypedName","src":"9439:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9448:3:26","nodeType":"YulTypedName","src":"9448:3:26","type":""}],"src":"9329:732:26"},{"body":{"nativeSrc":"10421:861:26","nodeType":"YulBlock","src":"10421:861:26","statements":[{"nativeSrc":"10431:27:26","nodeType":"YulAssignment","src":"10431:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10443:9:26","nodeType":"YulIdentifier","src":"10443:9:26"},{"kind":"number","nativeSrc":"10454:3:26","nodeType":"YulLiteral","src":"10454:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"10439:3:26","nodeType":"YulIdentifier","src":"10439:3:26"},"nativeSrc":"10439:19:26","nodeType":"YulFunctionCall","src":"10439:19:26"},"variableNames":[{"name":"tail","nativeSrc":"10431:4:26","nodeType":"YulIdentifier","src":"10431:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10510:6:26","nodeType":"YulIdentifier","src":"10510:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10523:9:26","nodeType":"YulIdentifier","src":"10523:9:26"},{"kind":"number","nativeSrc":"10534:1:26","nodeType":"YulLiteral","src":"10534:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10519:3:26","nodeType":"YulIdentifier","src":"10519:3:26"},"nativeSrc":"10519:17:26","nodeType":"YulFunctionCall","src":"10519:17:26"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"10468:41:26","nodeType":"YulIdentifier","src":"10468:41:26"},"nativeSrc":"10468:69:26","nodeType":"YulFunctionCall","src":"10468:69:26"},"nativeSrc":"10468:69:26","nodeType":"YulExpressionStatement","src":"10468:69:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10558:9:26","nodeType":"YulIdentifier","src":"10558:9:26"},{"kind":"number","nativeSrc":"10569:2:26","nodeType":"YulLiteral","src":"10569:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10554:3:26","nodeType":"YulIdentifier","src":"10554:3:26"},"nativeSrc":"10554:18:26","nodeType":"YulFunctionCall","src":"10554:18:26"},{"arguments":[{"name":"tail","nativeSrc":"10578:4:26","nodeType":"YulIdentifier","src":"10578:4:26"},{"name":"headStart","nativeSrc":"10584:9:26","nodeType":"YulIdentifier","src":"10584:9:26"}],"functionName":{"name":"sub","nativeSrc":"10574:3:26","nodeType":"YulIdentifier","src":"10574:3:26"},"nativeSrc":"10574:20:26","nodeType":"YulFunctionCall","src":"10574:20:26"}],"functionName":{"name":"mstore","nativeSrc":"10547:6:26","nodeType":"YulIdentifier","src":"10547:6:26"},"nativeSrc":"10547:48:26","nodeType":"YulFunctionCall","src":"10547:48:26"},"nativeSrc":"10547:48:26","nodeType":"YulExpressionStatement","src":"10547:48:26"},{"nativeSrc":"10604:86:26","nodeType":"YulAssignment","src":"10604:86:26","value":{"arguments":[{"name":"value1","nativeSrc":"10676:6:26","nodeType":"YulIdentifier","src":"10676:6:26"},{"name":"tail","nativeSrc":"10685:4:26","nodeType":"YulIdentifier","src":"10685:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10612:63:26","nodeType":"YulIdentifier","src":"10612:63:26"},"nativeSrc":"10612:78:26","nodeType":"YulFunctionCall","src":"10612:78:26"},"variableNames":[{"name":"tail","nativeSrc":"10604:4:26","nodeType":"YulIdentifier","src":"10604:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10711:9:26","nodeType":"YulIdentifier","src":"10711:9:26"},{"kind":"number","nativeSrc":"10722:2:26","nodeType":"YulLiteral","src":"10722:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10707:3:26","nodeType":"YulIdentifier","src":"10707:3:26"},"nativeSrc":"10707:18:26","nodeType":"YulFunctionCall","src":"10707:18:26"},{"arguments":[{"name":"tail","nativeSrc":"10731:4:26","nodeType":"YulIdentifier","src":"10731:4:26"},{"name":"headStart","nativeSrc":"10737:9:26","nodeType":"YulIdentifier","src":"10737:9:26"}],"functionName":{"name":"sub","nativeSrc":"10727:3:26","nodeType":"YulIdentifier","src":"10727:3:26"},"nativeSrc":"10727:20:26","nodeType":"YulFunctionCall","src":"10727:20:26"}],"functionName":{"name":"mstore","nativeSrc":"10700:6:26","nodeType":"YulIdentifier","src":"10700:6:26"},"nativeSrc":"10700:48:26","nodeType":"YulFunctionCall","src":"10700:48:26"},"nativeSrc":"10700:48:26","nodeType":"YulExpressionStatement","src":"10700:48:26"},{"nativeSrc":"10757:86:26","nodeType":"YulAssignment","src":"10757:86:26","value":{"arguments":[{"name":"value2","nativeSrc":"10829:6:26","nodeType":"YulIdentifier","src":"10829:6:26"},{"name":"tail","nativeSrc":"10838:4:26","nodeType":"YulIdentifier","src":"10838:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10765:63:26","nodeType":"YulIdentifier","src":"10765:63:26"},"nativeSrc":"10765:78:26","nodeType":"YulFunctionCall","src":"10765:78:26"},"variableNames":[{"name":"tail","nativeSrc":"10757:4:26","nodeType":"YulIdentifier","src":"10757:4:26"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10897:6:26","nodeType":"YulIdentifier","src":"10897:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10910:9:26","nodeType":"YulIdentifier","src":"10910:9:26"},{"kind":"number","nativeSrc":"10921:2:26","nodeType":"YulLiteral","src":"10921:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10906:3:26","nodeType":"YulIdentifier","src":"10906:3:26"},"nativeSrc":"10906:18:26","nodeType":"YulFunctionCall","src":"10906:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10853:43:26","nodeType":"YulIdentifier","src":"10853:43:26"},"nativeSrc":"10853:72:26","nodeType":"YulFunctionCall","src":"10853:72:26"},"nativeSrc":"10853:72:26","nodeType":"YulExpressionStatement","src":"10853:72:26"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10979:6:26","nodeType":"YulIdentifier","src":"10979:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10992:9:26","nodeType":"YulIdentifier","src":"10992:9:26"},{"kind":"number","nativeSrc":"11003:3:26","nodeType":"YulLiteral","src":"11003:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10988:3:26","nodeType":"YulIdentifier","src":"10988:3:26"},"nativeSrc":"10988:19:26","nodeType":"YulFunctionCall","src":"10988:19:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10935:43:26","nodeType":"YulIdentifier","src":"10935:43:26"},"nativeSrc":"10935:73:26","nodeType":"YulFunctionCall","src":"10935:73:26"},"nativeSrc":"10935:73:26","nodeType":"YulExpressionStatement","src":"10935:73:26"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"11062:6:26","nodeType":"YulIdentifier","src":"11062:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"11075:9:26","nodeType":"YulIdentifier","src":"11075:9:26"},{"kind":"number","nativeSrc":"11086:3:26","nodeType":"YulLiteral","src":"11086:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11071:3:26","nodeType":"YulIdentifier","src":"11071:3:26"},"nativeSrc":"11071:19:26","nodeType":"YulFunctionCall","src":"11071:19:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11018:43:26","nodeType":"YulIdentifier","src":"11018:43:26"},"nativeSrc":"11018:73:26","nodeType":"YulFunctionCall","src":"11018:73:26"},"nativeSrc":"11018:73:26","nodeType":"YulExpressionStatement","src":"11018:73:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11112:9:26","nodeType":"YulIdentifier","src":"11112:9:26"},{"kind":"number","nativeSrc":"11123:3:26","nodeType":"YulLiteral","src":"11123:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11108:3:26","nodeType":"YulIdentifier","src":"11108:3:26"},"nativeSrc":"11108:19:26","nodeType":"YulFunctionCall","src":"11108:19:26"},{"arguments":[{"name":"tail","nativeSrc":"11133:4:26","nodeType":"YulIdentifier","src":"11133:4:26"},{"name":"headStart","nativeSrc":"11139:9:26","nodeType":"YulIdentifier","src":"11139:9:26"}],"functionName":{"name":"sub","nativeSrc":"11129:3:26","nodeType":"YulIdentifier","src":"11129:3:26"},"nativeSrc":"11129:20:26","nodeType":"YulFunctionCall","src":"11129:20:26"}],"functionName":{"name":"mstore","nativeSrc":"11101:6:26","nodeType":"YulIdentifier","src":"11101:6:26"},"nativeSrc":"11101:49:26","nodeType":"YulFunctionCall","src":"11101:49:26"},"nativeSrc":"11101:49:26","nodeType":"YulExpressionStatement","src":"11101:49:26"},{"nativeSrc":"11159:116:26","nodeType":"YulAssignment","src":"11159:116:26","value":{"arguments":[{"name":"value6","nativeSrc":"11261:6:26","nodeType":"YulIdentifier","src":"11261:6:26"},{"name":"tail","nativeSrc":"11270:4:26","nodeType":"YulIdentifier","src":"11270:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"11167:93:26","nodeType":"YulIdentifier","src":"11167:93:26"},"nativeSrc":"11167:108:26","nodeType":"YulFunctionCall","src":"11167:108:26"},"variableNames":[{"name":"tail","nativeSrc":"11159:4:26","nodeType":"YulIdentifier","src":"11159:4:26"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"10067:1215:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10345:9:26","nodeType":"YulTypedName","src":"10345:9:26","type":""},{"name":"value6","nativeSrc":"10357:6:26","nodeType":"YulTypedName","src":"10357:6:26","type":""},{"name":"value5","nativeSrc":"10365:6:26","nodeType":"YulTypedName","src":"10365:6:26","type":""},{"name":"value4","nativeSrc":"10373:6:26","nodeType":"YulTypedName","src":"10373:6:26","type":""},{"name":"value3","nativeSrc":"10381:6:26","nodeType":"YulTypedName","src":"10381:6:26","type":""},{"name":"value2","nativeSrc":"10389:6:26","nodeType":"YulTypedName","src":"10389:6:26","type":""},{"name":"value1","nativeSrc":"10397:6:26","nodeType":"YulTypedName","src":"10397:6:26","type":""},{"name":"value0","nativeSrc":"10405:6:26","nodeType":"YulTypedName","src":"10405:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10416:4:26","nodeType":"YulTypedName","src":"10416:4:26","type":""}],"src":"10067:1215:26"},{"body":{"nativeSrc":"11329:77:26","nodeType":"YulBlock","src":"11329:77:26","statements":[{"body":{"nativeSrc":"11384:16:26","nodeType":"YulBlock","src":"11384:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11393:1:26","nodeType":"YulLiteral","src":"11393:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11396:1:26","nodeType":"YulLiteral","src":"11396:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11386:6:26","nodeType":"YulIdentifier","src":"11386:6:26"},"nativeSrc":"11386:12:26","nodeType":"YulFunctionCall","src":"11386:12:26"},"nativeSrc":"11386:12:26","nodeType":"YulExpressionStatement","src":"11386:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11352:5:26","nodeType":"YulIdentifier","src":"11352:5:26"},{"arguments":[{"name":"value","nativeSrc":"11375:5:26","nodeType":"YulIdentifier","src":"11375:5:26"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"11359:15:26","nodeType":"YulIdentifier","src":"11359:15:26"},"nativeSrc":"11359:22:26","nodeType":"YulFunctionCall","src":"11359:22:26"}],"functionName":{"name":"eq","nativeSrc":"11349:2:26","nodeType":"YulIdentifier","src":"11349:2:26"},"nativeSrc":"11349:33:26","nodeType":"YulFunctionCall","src":"11349:33:26"}],"functionName":{"name":"iszero","nativeSrc":"11342:6:26","nodeType":"YulIdentifier","src":"11342:6:26"},"nativeSrc":"11342:41:26","nodeType":"YulFunctionCall","src":"11342:41:26"},"nativeSrc":"11339:61:26","nodeType":"YulIf","src":"11339:61:26"}]},"name":"validator_revert_t_uint8","nativeSrc":"11288:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11322:5:26","nodeType":"YulTypedName","src":"11322:5:26","type":""}],"src":"11288:118:26"},{"body":{"nativeSrc":"11462:85:26","nodeType":"YulBlock","src":"11462:85:26","statements":[{"nativeSrc":"11472:29:26","nodeType":"YulAssignment","src":"11472:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"11494:6:26","nodeType":"YulIdentifier","src":"11494:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"11481:12:26","nodeType":"YulIdentifier","src":"11481:12:26"},"nativeSrc":"11481:20:26","nodeType":"YulFunctionCall","src":"11481:20:26"},"variableNames":[{"name":"value","nativeSrc":"11472:5:26","nodeType":"YulIdentifier","src":"11472:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11535:5:26","nodeType":"YulIdentifier","src":"11535:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"11510:24:26","nodeType":"YulIdentifier","src":"11510:24:26"},"nativeSrc":"11510:31:26","nodeType":"YulFunctionCall","src":"11510:31:26"},"nativeSrc":"11510:31:26","nodeType":"YulExpressionStatement","src":"11510:31:26"}]},"name":"abi_decode_t_uint8","nativeSrc":"11412:135:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11440:6:26","nodeType":"YulTypedName","src":"11440:6:26","type":""},{"name":"end","nativeSrc":"11448:3:26","nodeType":"YulTypedName","src":"11448:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11456:5:26","nodeType":"YulTypedName","src":"11456:5:26","type":""}],"src":"11412:135:26"},{"body":{"nativeSrc":"11719:1033:26","nodeType":"YulBlock","src":"11719:1033:26","statements":[{"body":{"nativeSrc":"11766:83:26","nodeType":"YulBlock","src":"11766:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11768:77:26","nodeType":"YulIdentifier","src":"11768:77:26"},"nativeSrc":"11768:79:26","nodeType":"YulFunctionCall","src":"11768:79:26"},"nativeSrc":"11768:79:26","nodeType":"YulExpressionStatement","src":"11768:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11740:7:26","nodeType":"YulIdentifier","src":"11740:7:26"},{"name":"headStart","nativeSrc":"11749:9:26","nodeType":"YulIdentifier","src":"11749:9:26"}],"functionName":{"name":"sub","nativeSrc":"11736:3:26","nodeType":"YulIdentifier","src":"11736:3:26"},"nativeSrc":"11736:23:26","nodeType":"YulFunctionCall","src":"11736:23:26"},{"kind":"number","nativeSrc":"11761:3:26","nodeType":"YulLiteral","src":"11761:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"11732:3:26","nodeType":"YulIdentifier","src":"11732:3:26"},"nativeSrc":"11732:33:26","nodeType":"YulFunctionCall","src":"11732:33:26"},"nativeSrc":"11729:120:26","nodeType":"YulIf","src":"11729:120:26"},{"nativeSrc":"11859:117:26","nodeType":"YulBlock","src":"11859:117:26","statements":[{"nativeSrc":"11874:15:26","nodeType":"YulVariableDeclaration","src":"11874:15:26","value":{"kind":"number","nativeSrc":"11888:1:26","nodeType":"YulLiteral","src":"11888:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11878:6:26","nodeType":"YulTypedName","src":"11878:6:26","type":""}]},{"nativeSrc":"11903:63:26","nodeType":"YulAssignment","src":"11903:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11938:9:26","nodeType":"YulIdentifier","src":"11938:9:26"},{"name":"offset","nativeSrc":"11949:6:26","nodeType":"YulIdentifier","src":"11949:6:26"}],"functionName":{"name":"add","nativeSrc":"11934:3:26","nodeType":"YulIdentifier","src":"11934:3:26"},"nativeSrc":"11934:22:26","nodeType":"YulFunctionCall","src":"11934:22:26"},{"name":"dataEnd","nativeSrc":"11958:7:26","nodeType":"YulIdentifier","src":"11958:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11913:20:26","nodeType":"YulIdentifier","src":"11913:20:26"},"nativeSrc":"11913:53:26","nodeType":"YulFunctionCall","src":"11913:53:26"},"variableNames":[{"name":"value0","nativeSrc":"11903:6:26","nodeType":"YulIdentifier","src":"11903:6:26"}]}]},{"nativeSrc":"11986:118:26","nodeType":"YulBlock","src":"11986:118:26","statements":[{"nativeSrc":"12001:16:26","nodeType":"YulVariableDeclaration","src":"12001:16:26","value":{"kind":"number","nativeSrc":"12015:2:26","nodeType":"YulLiteral","src":"12015:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12005:6:26","nodeType":"YulTypedName","src":"12005:6:26","type":""}]},{"nativeSrc":"12031:63:26","nodeType":"YulAssignment","src":"12031:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12066:9:26","nodeType":"YulIdentifier","src":"12066:9:26"},{"name":"offset","nativeSrc":"12077:6:26","nodeType":"YulIdentifier","src":"12077:6:26"}],"functionName":{"name":"add","nativeSrc":"12062:3:26","nodeType":"YulIdentifier","src":"12062:3:26"},"nativeSrc":"12062:22:26","nodeType":"YulFunctionCall","src":"12062:22:26"},{"name":"dataEnd","nativeSrc":"12086:7:26","nodeType":"YulIdentifier","src":"12086:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12041:20:26","nodeType":"YulIdentifier","src":"12041:20:26"},"nativeSrc":"12041:53:26","nodeType":"YulFunctionCall","src":"12041:53:26"},"variableNames":[{"name":"value1","nativeSrc":"12031:6:26","nodeType":"YulIdentifier","src":"12031:6:26"}]}]},{"nativeSrc":"12114:118:26","nodeType":"YulBlock","src":"12114:118:26","statements":[{"nativeSrc":"12129:16:26","nodeType":"YulVariableDeclaration","src":"12129:16:26","value":{"kind":"number","nativeSrc":"12143:2:26","nodeType":"YulLiteral","src":"12143:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12133:6:26","nodeType":"YulTypedName","src":"12133:6:26","type":""}]},{"nativeSrc":"12159:63:26","nodeType":"YulAssignment","src":"12159:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12194:9:26","nodeType":"YulIdentifier","src":"12194:9:26"},{"name":"offset","nativeSrc":"12205:6:26","nodeType":"YulIdentifier","src":"12205:6:26"}],"functionName":{"name":"add","nativeSrc":"12190:3:26","nodeType":"YulIdentifier","src":"12190:3:26"},"nativeSrc":"12190:22:26","nodeType":"YulFunctionCall","src":"12190:22:26"},{"name":"dataEnd","nativeSrc":"12214:7:26","nodeType":"YulIdentifier","src":"12214:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12169:20:26","nodeType":"YulIdentifier","src":"12169:20:26"},"nativeSrc":"12169:53:26","nodeType":"YulFunctionCall","src":"12169:53:26"},"variableNames":[{"name":"value2","nativeSrc":"12159:6:26","nodeType":"YulIdentifier","src":"12159:6:26"}]}]},{"nativeSrc":"12242:118:26","nodeType":"YulBlock","src":"12242:118:26","statements":[{"nativeSrc":"12257:16:26","nodeType":"YulVariableDeclaration","src":"12257:16:26","value":{"kind":"number","nativeSrc":"12271:2:26","nodeType":"YulLiteral","src":"12271:2:26","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"12261:6:26","nodeType":"YulTypedName","src":"12261:6:26","type":""}]},{"nativeSrc":"12287:63:26","nodeType":"YulAssignment","src":"12287:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12322:9:26","nodeType":"YulIdentifier","src":"12322:9:26"},{"name":"offset","nativeSrc":"12333:6:26","nodeType":"YulIdentifier","src":"12333:6:26"}],"functionName":{"name":"add","nativeSrc":"12318:3:26","nodeType":"YulIdentifier","src":"12318:3:26"},"nativeSrc":"12318:22:26","nodeType":"YulFunctionCall","src":"12318:22:26"},{"name":"dataEnd","nativeSrc":"12342:7:26","nodeType":"YulIdentifier","src":"12342:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12297:20:26","nodeType":"YulIdentifier","src":"12297:20:26"},"nativeSrc":"12297:53:26","nodeType":"YulFunctionCall","src":"12297:53:26"},"variableNames":[{"name":"value3","nativeSrc":"12287:6:26","nodeType":"YulIdentifier","src":"12287:6:26"}]}]},{"nativeSrc":"12370:117:26","nodeType":"YulBlock","src":"12370:117:26","statements":[{"nativeSrc":"12385:17:26","nodeType":"YulVariableDeclaration","src":"12385:17:26","value":{"kind":"number","nativeSrc":"12399:3:26","nodeType":"YulLiteral","src":"12399:3:26","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"12389:6:26","nodeType":"YulTypedName","src":"12389:6:26","type":""}]},{"nativeSrc":"12416:61:26","nodeType":"YulAssignment","src":"12416:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12449:9:26","nodeType":"YulIdentifier","src":"12449:9:26"},{"name":"offset","nativeSrc":"12460:6:26","nodeType":"YulIdentifier","src":"12460:6:26"}],"functionName":{"name":"add","nativeSrc":"12445:3:26","nodeType":"YulIdentifier","src":"12445:3:26"},"nativeSrc":"12445:22:26","nodeType":"YulFunctionCall","src":"12445:22:26"},{"name":"dataEnd","nativeSrc":"12469:7:26","nodeType":"YulIdentifier","src":"12469:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"12426:18:26","nodeType":"YulIdentifier","src":"12426:18:26"},"nativeSrc":"12426:51:26","nodeType":"YulFunctionCall","src":"12426:51:26"},"variableNames":[{"name":"value4","nativeSrc":"12416:6:26","nodeType":"YulIdentifier","src":"12416:6:26"}]}]},{"nativeSrc":"12497:119:26","nodeType":"YulBlock","src":"12497:119:26","statements":[{"nativeSrc":"12512:17:26","nodeType":"YulVariableDeclaration","src":"12512:17:26","value":{"kind":"number","nativeSrc":"12526:3:26","nodeType":"YulLiteral","src":"12526:3:26","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"12516:6:26","nodeType":"YulTypedName","src":"12516:6:26","type":""}]},{"nativeSrc":"12543:63:26","nodeType":"YulAssignment","src":"12543:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12578:9:26","nodeType":"YulIdentifier","src":"12578:9:26"},{"name":"offset","nativeSrc":"12589:6:26","nodeType":"YulIdentifier","src":"12589:6:26"}],"functionName":{"name":"add","nativeSrc":"12574:3:26","nodeType":"YulIdentifier","src":"12574:3:26"},"nativeSrc":"12574:22:26","nodeType":"YulFunctionCall","src":"12574:22:26"},{"name":"dataEnd","nativeSrc":"12598:7:26","nodeType":"YulIdentifier","src":"12598:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"12553:20:26","nodeType":"YulIdentifier","src":"12553:20:26"},"nativeSrc":"12553:53:26","nodeType":"YulFunctionCall","src":"12553:53:26"},"variableNames":[{"name":"value5","nativeSrc":"12543:6:26","nodeType":"YulIdentifier","src":"12543:6:26"}]}]},{"nativeSrc":"12626:119:26","nodeType":"YulBlock","src":"12626:119:26","statements":[{"nativeSrc":"12641:17:26","nodeType":"YulVariableDeclaration","src":"12641:17:26","value":{"kind":"number","nativeSrc":"12655:3:26","nodeType":"YulLiteral","src":"12655:3:26","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"12645:6:26","nodeType":"YulTypedName","src":"12645:6:26","type":""}]},{"nativeSrc":"12672:63:26","nodeType":"YulAssignment","src":"12672:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12707:9:26","nodeType":"YulIdentifier","src":"12707:9:26"},{"name":"offset","nativeSrc":"12718:6:26","nodeType":"YulIdentifier","src":"12718:6:26"}],"functionName":{"name":"add","nativeSrc":"12703:3:26","nodeType":"YulIdentifier","src":"12703:3:26"},"nativeSrc":"12703:22:26","nodeType":"YulFunctionCall","src":"12703:22:26"},{"name":"dataEnd","nativeSrc":"12727:7:26","nodeType":"YulIdentifier","src":"12727:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"12682:20:26","nodeType":"YulIdentifier","src":"12682:20:26"},"nativeSrc":"12682:53:26","nodeType":"YulFunctionCall","src":"12682:53:26"},"variableNames":[{"name":"value6","nativeSrc":"12672:6:26","nodeType":"YulIdentifier","src":"12672:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"11553:1199:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11641:9:26","nodeType":"YulTypedName","src":"11641:9:26","type":""},{"name":"dataEnd","nativeSrc":"11652:7:26","nodeType":"YulTypedName","src":"11652:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11664:6:26","nodeType":"YulTypedName","src":"11664:6:26","type":""},{"name":"value1","nativeSrc":"11672:6:26","nodeType":"YulTypedName","src":"11672:6:26","type":""},{"name":"value2","nativeSrc":"11680:6:26","nodeType":"YulTypedName","src":"11680:6:26","type":""},{"name":"value3","nativeSrc":"11688:6:26","nodeType":"YulTypedName","src":"11688:6:26","type":""},{"name":"value4","nativeSrc":"11696:6:26","nodeType":"YulTypedName","src":"11696:6:26","type":""},{"name":"value5","nativeSrc":"11704:6:26","nodeType":"YulTypedName","src":"11704:6:26","type":""},{"name":"value6","nativeSrc":"11712:6:26","nodeType":"YulTypedName","src":"11712:6:26","type":""}],"src":"11553:1199:26"},{"body":{"nativeSrc":"12841:391:26","nodeType":"YulBlock","src":"12841:391:26","statements":[{"body":{"nativeSrc":"12887:83:26","nodeType":"YulBlock","src":"12887:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12889:77:26","nodeType":"YulIdentifier","src":"12889:77:26"},"nativeSrc":"12889:79:26","nodeType":"YulFunctionCall","src":"12889:79:26"},"nativeSrc":"12889:79:26","nodeType":"YulExpressionStatement","src":"12889:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12862:7:26","nodeType":"YulIdentifier","src":"12862:7:26"},{"name":"headStart","nativeSrc":"12871:9:26","nodeType":"YulIdentifier","src":"12871:9:26"}],"functionName":{"name":"sub","nativeSrc":"12858:3:26","nodeType":"YulIdentifier","src":"12858:3:26"},"nativeSrc":"12858:23:26","nodeType":"YulFunctionCall","src":"12858:23:26"},{"kind":"number","nativeSrc":"12883:2:26","nodeType":"YulLiteral","src":"12883:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12854:3:26","nodeType":"YulIdentifier","src":"12854:3:26"},"nativeSrc":"12854:32:26","nodeType":"YulFunctionCall","src":"12854:32:26"},"nativeSrc":"12851:119:26","nodeType":"YulIf","src":"12851:119:26"},{"nativeSrc":"12980:117:26","nodeType":"YulBlock","src":"12980:117:26","statements":[{"nativeSrc":"12995:15:26","nodeType":"YulVariableDeclaration","src":"12995:15:26","value":{"kind":"number","nativeSrc":"13009:1:26","nodeType":"YulLiteral","src":"13009:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12999:6:26","nodeType":"YulTypedName","src":"12999:6:26","type":""}]},{"nativeSrc":"13024:63:26","nodeType":"YulAssignment","src":"13024:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13059:9:26","nodeType":"YulIdentifier","src":"13059:9:26"},{"name":"offset","nativeSrc":"13070:6:26","nodeType":"YulIdentifier","src":"13070:6:26"}],"functionName":{"name":"add","nativeSrc":"13055:3:26","nodeType":"YulIdentifier","src":"13055:3:26"},"nativeSrc":"13055:22:26","nodeType":"YulFunctionCall","src":"13055:22:26"},{"name":"dataEnd","nativeSrc":"13079:7:26","nodeType":"YulIdentifier","src":"13079:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13034:20:26","nodeType":"YulIdentifier","src":"13034:20:26"},"nativeSrc":"13034:53:26","nodeType":"YulFunctionCall","src":"13034:53:26"},"variableNames":[{"name":"value0","nativeSrc":"13024:6:26","nodeType":"YulIdentifier","src":"13024:6:26"}]}]},{"nativeSrc":"13107:118:26","nodeType":"YulBlock","src":"13107:118:26","statements":[{"nativeSrc":"13122:16:26","nodeType":"YulVariableDeclaration","src":"13122:16:26","value":{"kind":"number","nativeSrc":"13136:2:26","nodeType":"YulLiteral","src":"13136:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13126:6:26","nodeType":"YulTypedName","src":"13126:6:26","type":""}]},{"nativeSrc":"13152:63:26","nodeType":"YulAssignment","src":"13152:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13187:9:26","nodeType":"YulIdentifier","src":"13187:9:26"},{"name":"offset","nativeSrc":"13198:6:26","nodeType":"YulIdentifier","src":"13198:6:26"}],"functionName":{"name":"add","nativeSrc":"13183:3:26","nodeType":"YulIdentifier","src":"13183:3:26"},"nativeSrc":"13183:22:26","nodeType":"YulFunctionCall","src":"13183:22:26"},{"name":"dataEnd","nativeSrc":"13207:7:26","nodeType":"YulIdentifier","src":"13207:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13162:20:26","nodeType":"YulIdentifier","src":"13162:20:26"},"nativeSrc":"13162:53:26","nodeType":"YulFunctionCall","src":"13162:53:26"},"variableNames":[{"name":"value1","nativeSrc":"13152:6:26","nodeType":"YulIdentifier","src":"13152:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"12758:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12803:9:26","nodeType":"YulTypedName","src":"12803:9:26","type":""},{"name":"dataEnd","nativeSrc":"12814:7:26","nodeType":"YulTypedName","src":"12814:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12826:6:26","nodeType":"YulTypedName","src":"12826:6:26","type":""},{"name":"value1","nativeSrc":"12834:6:26","nodeType":"YulTypedName","src":"12834:6:26","type":""}],"src":"12758:474:26"},{"body":{"nativeSrc":"13266:152:26","nodeType":"YulBlock","src":"13266:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13283:1:26","nodeType":"YulLiteral","src":"13283:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13286:77:26","nodeType":"YulLiteral","src":"13286:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13276:6:26","nodeType":"YulIdentifier","src":"13276:6:26"},"nativeSrc":"13276:88:26","nodeType":"YulFunctionCall","src":"13276:88:26"},"nativeSrc":"13276:88:26","nodeType":"YulExpressionStatement","src":"13276:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13380:1:26","nodeType":"YulLiteral","src":"13380:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"13383:4:26","nodeType":"YulLiteral","src":"13383:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"13373:6:26","nodeType":"YulIdentifier","src":"13373:6:26"},"nativeSrc":"13373:15:26","nodeType":"YulFunctionCall","src":"13373:15:26"},"nativeSrc":"13373:15:26","nodeType":"YulExpressionStatement","src":"13373:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13404:1:26","nodeType":"YulLiteral","src":"13404:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13407:4:26","nodeType":"YulLiteral","src":"13407:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13397:6:26","nodeType":"YulIdentifier","src":"13397:6:26"},"nativeSrc":"13397:15:26","nodeType":"YulFunctionCall","src":"13397:15:26"},"nativeSrc":"13397:15:26","nodeType":"YulExpressionStatement","src":"13397:15:26"}]},"name":"panic_error_0x22","nativeSrc":"13238:180:26","nodeType":"YulFunctionDefinition","src":"13238:180:26"},{"body":{"nativeSrc":"13475:269:26","nodeType":"YulBlock","src":"13475:269:26","statements":[{"nativeSrc":"13485:22:26","nodeType":"YulAssignment","src":"13485:22:26","value":{"arguments":[{"name":"data","nativeSrc":"13499:4:26","nodeType":"YulIdentifier","src":"13499:4:26"},{"kind":"number","nativeSrc":"13505:1:26","nodeType":"YulLiteral","src":"13505:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"13495:3:26","nodeType":"YulIdentifier","src":"13495:3:26"},"nativeSrc":"13495:12:26","nodeType":"YulFunctionCall","src":"13495:12:26"},"variableNames":[{"name":"length","nativeSrc":"13485:6:26","nodeType":"YulIdentifier","src":"13485:6:26"}]},{"nativeSrc":"13516:38:26","nodeType":"YulVariableDeclaration","src":"13516:38:26","value":{"arguments":[{"name":"data","nativeSrc":"13546:4:26","nodeType":"YulIdentifier","src":"13546:4:26"},{"kind":"number","nativeSrc":"13552:1:26","nodeType":"YulLiteral","src":"13552:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"13542:3:26","nodeType":"YulIdentifier","src":"13542:3:26"},"nativeSrc":"13542:12:26","nodeType":"YulFunctionCall","src":"13542:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"13520:18:26","nodeType":"YulTypedName","src":"13520:18:26","type":""}]},{"body":{"nativeSrc":"13593:51:26","nodeType":"YulBlock","src":"13593:51:26","statements":[{"nativeSrc":"13607:27:26","nodeType":"YulAssignment","src":"13607:27:26","value":{"arguments":[{"name":"length","nativeSrc":"13621:6:26","nodeType":"YulIdentifier","src":"13621:6:26"},{"kind":"number","nativeSrc":"13629:4:26","nodeType":"YulLiteral","src":"13629:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"13617:3:26","nodeType":"YulIdentifier","src":"13617:3:26"},"nativeSrc":"13617:17:26","nodeType":"YulFunctionCall","src":"13617:17:26"},"variableNames":[{"name":"length","nativeSrc":"13607:6:26","nodeType":"YulIdentifier","src":"13607:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"13573:18:26","nodeType":"YulIdentifier","src":"13573:18:26"}],"functionName":{"name":"iszero","nativeSrc":"13566:6:26","nodeType":"YulIdentifier","src":"13566:6:26"},"nativeSrc":"13566:26:26","nodeType":"YulFunctionCall","src":"13566:26:26"},"nativeSrc":"13563:81:26","nodeType":"YulIf","src":"13563:81:26"},{"body":{"nativeSrc":"13696:42:26","nodeType":"YulBlock","src":"13696:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"13710:16:26","nodeType":"YulIdentifier","src":"13710:16:26"},"nativeSrc":"13710:18:26","nodeType":"YulFunctionCall","src":"13710:18:26"},"nativeSrc":"13710:18:26","nodeType":"YulExpressionStatement","src":"13710:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"13660:18:26","nodeType":"YulIdentifier","src":"13660:18:26"},{"arguments":[{"name":"length","nativeSrc":"13683:6:26","nodeType":"YulIdentifier","src":"13683:6:26"},{"kind":"number","nativeSrc":"13691:2:26","nodeType":"YulLiteral","src":"13691:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13680:2:26","nodeType":"YulIdentifier","src":"13680:2:26"},"nativeSrc":"13680:14:26","nodeType":"YulFunctionCall","src":"13680:14:26"}],"functionName":{"name":"eq","nativeSrc":"13657:2:26","nodeType":"YulIdentifier","src":"13657:2:26"},"nativeSrc":"13657:38:26","nodeType":"YulFunctionCall","src":"13657:38:26"},"nativeSrc":"13654:84:26","nodeType":"YulIf","src":"13654:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"13424:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"13459:4:26","nodeType":"YulTypedName","src":"13459:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13468:6:26","nodeType":"YulTypedName","src":"13468:6:26","type":""}],"src":"13424:320:26"},{"body":{"nativeSrc":"13856:144:26","nodeType":"YulBlock","src":"13856:144:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13878:6:26","nodeType":"YulIdentifier","src":"13878:6:26"},{"kind":"number","nativeSrc":"13886:1:26","nodeType":"YulLiteral","src":"13886:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13874:3:26","nodeType":"YulIdentifier","src":"13874:3:26"},"nativeSrc":"13874:14:26","nodeType":"YulFunctionCall","src":"13874:14:26"},{"hexValue":"4e6577207468726573686f6c6420737570706c79206d757374206265206c6573","kind":"string","nativeSrc":"13890:34:26","nodeType":"YulLiteral","src":"13890:34:26","type":"","value":"New threshold supply must be les"}],"functionName":{"name":"mstore","nativeSrc":"13867:6:26","nodeType":"YulIdentifier","src":"13867:6:26"},"nativeSrc":"13867:58:26","nodeType":"YulFunctionCall","src":"13867:58:26"},"nativeSrc":"13867:58:26","nodeType":"YulExpressionStatement","src":"13867:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13946:6:26","nodeType":"YulIdentifier","src":"13946:6:26"},{"kind":"number","nativeSrc":"13954:2:26","nodeType":"YulLiteral","src":"13954:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13942:3:26","nodeType":"YulIdentifier","src":"13942:3:26"},"nativeSrc":"13942:15:26","nodeType":"YulFunctionCall","src":"13942:15:26"},{"hexValue":"73207468616e2063757272656e74207468726573686f6c6420737570706c79","kind":"string","nativeSrc":"13959:33:26","nodeType":"YulLiteral","src":"13959:33:26","type":"","value":"s than current threshold supply"}],"functionName":{"name":"mstore","nativeSrc":"13935:6:26","nodeType":"YulIdentifier","src":"13935:6:26"},"nativeSrc":"13935:58:26","nodeType":"YulFunctionCall","src":"13935:58:26"},"nativeSrc":"13935:58:26","nodeType":"YulExpressionStatement","src":"13935:58:26"}]},"name":"store_literal_in_memory_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e","nativeSrc":"13750:250:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13848:6:26","nodeType":"YulTypedName","src":"13848:6:26","type":""}],"src":"13750:250:26"},{"body":{"nativeSrc":"14152:220:26","nodeType":"YulBlock","src":"14152:220:26","statements":[{"nativeSrc":"14162:74:26","nodeType":"YulAssignment","src":"14162:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"14228:3:26","nodeType":"YulIdentifier","src":"14228:3:26"},{"kind":"number","nativeSrc":"14233:2:26","nodeType":"YulLiteral","src":"14233:2:26","type":"","value":"63"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14169:58:26","nodeType":"YulIdentifier","src":"14169:58:26"},"nativeSrc":"14169:67:26","nodeType":"YulFunctionCall","src":"14169:67:26"},"variableNames":[{"name":"pos","nativeSrc":"14162:3:26","nodeType":"YulIdentifier","src":"14162:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14334:3:26","nodeType":"YulIdentifier","src":"14334:3:26"}],"functionName":{"name":"store_literal_in_memory_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e","nativeSrc":"14245:88:26","nodeType":"YulIdentifier","src":"14245:88:26"},"nativeSrc":"14245:93:26","nodeType":"YulFunctionCall","src":"14245:93:26"},"nativeSrc":"14245:93:26","nodeType":"YulExpressionStatement","src":"14245:93:26"},{"nativeSrc":"14347:19:26","nodeType":"YulAssignment","src":"14347:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"14358:3:26","nodeType":"YulIdentifier","src":"14358:3:26"},{"kind":"number","nativeSrc":"14363:2:26","nodeType":"YulLiteral","src":"14363:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14354:3:26","nodeType":"YulIdentifier","src":"14354:3:26"},"nativeSrc":"14354:12:26","nodeType":"YulFunctionCall","src":"14354:12:26"},"variableNames":[{"name":"end","nativeSrc":"14347:3:26","nodeType":"YulIdentifier","src":"14347:3:26"}]}]},"name":"abi_encode_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e_to_t_string_memory_ptr_fromStack","nativeSrc":"14006:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14140:3:26","nodeType":"YulTypedName","src":"14140:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14148:3:26","nodeType":"YulTypedName","src":"14148:3:26","type":""}],"src":"14006:366:26"},{"body":{"nativeSrc":"14549:248:26","nodeType":"YulBlock","src":"14549:248:26","statements":[{"nativeSrc":"14559:26:26","nodeType":"YulAssignment","src":"14559:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14571:9:26","nodeType":"YulIdentifier","src":"14571:9:26"},{"kind":"number","nativeSrc":"14582:2:26","nodeType":"YulLiteral","src":"14582:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14567:3:26","nodeType":"YulIdentifier","src":"14567:3:26"},"nativeSrc":"14567:18:26","nodeType":"YulFunctionCall","src":"14567:18:26"},"variableNames":[{"name":"tail","nativeSrc":"14559:4:26","nodeType":"YulIdentifier","src":"14559:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14606:9:26","nodeType":"YulIdentifier","src":"14606:9:26"},{"kind":"number","nativeSrc":"14617:1:26","nodeType":"YulLiteral","src":"14617:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14602:3:26","nodeType":"YulIdentifier","src":"14602:3:26"},"nativeSrc":"14602:17:26","nodeType":"YulFunctionCall","src":"14602:17:26"},{"arguments":[{"name":"tail","nativeSrc":"14625:4:26","nodeType":"YulIdentifier","src":"14625:4:26"},{"name":"headStart","nativeSrc":"14631:9:26","nodeType":"YulIdentifier","src":"14631:9:26"}],"functionName":{"name":"sub","nativeSrc":"14621:3:26","nodeType":"YulIdentifier","src":"14621:3:26"},"nativeSrc":"14621:20:26","nodeType":"YulFunctionCall","src":"14621:20:26"}],"functionName":{"name":"mstore","nativeSrc":"14595:6:26","nodeType":"YulIdentifier","src":"14595:6:26"},"nativeSrc":"14595:47:26","nodeType":"YulFunctionCall","src":"14595:47:26"},"nativeSrc":"14595:47:26","nodeType":"YulExpressionStatement","src":"14595:47:26"},{"nativeSrc":"14651:139:26","nodeType":"YulAssignment","src":"14651:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"14785:4:26","nodeType":"YulIdentifier","src":"14785:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e_to_t_string_memory_ptr_fromStack","nativeSrc":"14659:124:26","nodeType":"YulIdentifier","src":"14659:124:26"},"nativeSrc":"14659:131:26","nodeType":"YulFunctionCall","src":"14659:131:26"},"variableNames":[{"name":"tail","nativeSrc":"14651:4:26","nodeType":"YulIdentifier","src":"14651:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14378:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14529:9:26","nodeType":"YulTypedName","src":"14529:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14544:4:26","nodeType":"YulTypedName","src":"14544:4:26","type":""}],"src":"14378:419:26"},{"body":{"nativeSrc":"14831:152:26","nodeType":"YulBlock","src":"14831:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14848:1:26","nodeType":"YulLiteral","src":"14848:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14851:77:26","nodeType":"YulLiteral","src":"14851:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14841:6:26","nodeType":"YulIdentifier","src":"14841:6:26"},"nativeSrc":"14841:88:26","nodeType":"YulFunctionCall","src":"14841:88:26"},"nativeSrc":"14841:88:26","nodeType":"YulExpressionStatement","src":"14841:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14945:1:26","nodeType":"YulLiteral","src":"14945:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"14948:4:26","nodeType":"YulLiteral","src":"14948:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14938:6:26","nodeType":"YulIdentifier","src":"14938:6:26"},"nativeSrc":"14938:15:26","nodeType":"YulFunctionCall","src":"14938:15:26"},"nativeSrc":"14938:15:26","nodeType":"YulExpressionStatement","src":"14938:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14969:1:26","nodeType":"YulLiteral","src":"14969:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14972:4:26","nodeType":"YulLiteral","src":"14972:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14962:6:26","nodeType":"YulIdentifier","src":"14962:6:26"},"nativeSrc":"14962:15:26","nodeType":"YulFunctionCall","src":"14962:15:26"},"nativeSrc":"14962:15:26","nodeType":"YulExpressionStatement","src":"14962:15:26"}]},"name":"panic_error_0x11","nativeSrc":"14803:180:26","nodeType":"YulFunctionDefinition","src":"14803:180:26"},{"body":{"nativeSrc":"15037:362:26","nodeType":"YulBlock","src":"15037:362:26","statements":[{"nativeSrc":"15047:25:26","nodeType":"YulAssignment","src":"15047:25:26","value":{"arguments":[{"name":"x","nativeSrc":"15070:1:26","nodeType":"YulIdentifier","src":"15070:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15052:17:26","nodeType":"YulIdentifier","src":"15052:17:26"},"nativeSrc":"15052:20:26","nodeType":"YulFunctionCall","src":"15052:20:26"},"variableNames":[{"name":"x","nativeSrc":"15047:1:26","nodeType":"YulIdentifier","src":"15047:1:26"}]},{"nativeSrc":"15081:25:26","nodeType":"YulAssignment","src":"15081:25:26","value":{"arguments":[{"name":"y","nativeSrc":"15104:1:26","nodeType":"YulIdentifier","src":"15104:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15086:17:26","nodeType":"YulIdentifier","src":"15086:17:26"},"nativeSrc":"15086:20:26","nodeType":"YulFunctionCall","src":"15086:20:26"},"variableNames":[{"name":"y","nativeSrc":"15081:1:26","nodeType":"YulIdentifier","src":"15081:1:26"}]},{"nativeSrc":"15115:28:26","nodeType":"YulVariableDeclaration","src":"15115:28:26","value":{"arguments":[{"name":"x","nativeSrc":"15138:1:26","nodeType":"YulIdentifier","src":"15138:1:26"},{"name":"y","nativeSrc":"15141:1:26","nodeType":"YulIdentifier","src":"15141:1:26"}],"functionName":{"name":"mul","nativeSrc":"15134:3:26","nodeType":"YulIdentifier","src":"15134:3:26"},"nativeSrc":"15134:9:26","nodeType":"YulFunctionCall","src":"15134:9:26"},"variables":[{"name":"product_raw","nativeSrc":"15119:11:26","nodeType":"YulTypedName","src":"15119:11:26","type":""}]},{"nativeSrc":"15152:41:26","nodeType":"YulAssignment","src":"15152:41:26","value":{"arguments":[{"name":"product_raw","nativeSrc":"15181:11:26","nodeType":"YulIdentifier","src":"15181:11:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15163:17:26","nodeType":"YulIdentifier","src":"15163:17:26"},"nativeSrc":"15163:30:26","nodeType":"YulFunctionCall","src":"15163:30:26"},"variableNames":[{"name":"product","nativeSrc":"15152:7:26","nodeType":"YulIdentifier","src":"15152:7:26"}]},{"body":{"nativeSrc":"15370:22:26","nodeType":"YulBlock","src":"15370:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15372:16:26","nodeType":"YulIdentifier","src":"15372:16:26"},"nativeSrc":"15372:18:26","nodeType":"YulFunctionCall","src":"15372:18:26"},"nativeSrc":"15372:18:26","nodeType":"YulExpressionStatement","src":"15372:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"15303:1:26","nodeType":"YulIdentifier","src":"15303:1:26"}],"functionName":{"name":"iszero","nativeSrc":"15296:6:26","nodeType":"YulIdentifier","src":"15296:6:26"},"nativeSrc":"15296:9:26","nodeType":"YulFunctionCall","src":"15296:9:26"},{"arguments":[{"name":"y","nativeSrc":"15326:1:26","nodeType":"YulIdentifier","src":"15326:1:26"},{"arguments":[{"name":"product","nativeSrc":"15333:7:26","nodeType":"YulIdentifier","src":"15333:7:26"},{"name":"x","nativeSrc":"15342:1:26","nodeType":"YulIdentifier","src":"15342:1:26"}],"functionName":{"name":"div","nativeSrc":"15329:3:26","nodeType":"YulIdentifier","src":"15329:3:26"},"nativeSrc":"15329:15:26","nodeType":"YulFunctionCall","src":"15329:15:26"}],"functionName":{"name":"eq","nativeSrc":"15323:2:26","nodeType":"YulIdentifier","src":"15323:2:26"},"nativeSrc":"15323:22:26","nodeType":"YulFunctionCall","src":"15323:22:26"}],"functionName":{"name":"or","nativeSrc":"15276:2:26","nodeType":"YulIdentifier","src":"15276:2:26"},"nativeSrc":"15276:83:26","nodeType":"YulFunctionCall","src":"15276:83:26"}],"functionName":{"name":"iszero","nativeSrc":"15256:6:26","nodeType":"YulIdentifier","src":"15256:6:26"},"nativeSrc":"15256:113:26","nodeType":"YulFunctionCall","src":"15256:113:26"},"nativeSrc":"15253:139:26","nodeType":"YulIf","src":"15253:139:26"}]},"name":"checked_mul_t_uint256","nativeSrc":"14989:410:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15020:1:26","nodeType":"YulTypedName","src":"15020:1:26","type":""},{"name":"y","nativeSrc":"15023:1:26","nodeType":"YulTypedName","src":"15023:1:26","type":""}],"returnVariables":[{"name":"product","nativeSrc":"15029:7:26","nodeType":"YulTypedName","src":"15029:7:26","type":""}],"src":"14989:410:26"},{"body":{"nativeSrc":"15433:152:26","nodeType":"YulBlock","src":"15433:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15450:1:26","nodeType":"YulLiteral","src":"15450:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15453:77:26","nodeType":"YulLiteral","src":"15453:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15443:6:26","nodeType":"YulIdentifier","src":"15443:6:26"},"nativeSrc":"15443:88:26","nodeType":"YulFunctionCall","src":"15443:88:26"},"nativeSrc":"15443:88:26","nodeType":"YulExpressionStatement","src":"15443:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15547:1:26","nodeType":"YulLiteral","src":"15547:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"15550:4:26","nodeType":"YulLiteral","src":"15550:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"15540:6:26","nodeType":"YulIdentifier","src":"15540:6:26"},"nativeSrc":"15540:15:26","nodeType":"YulFunctionCall","src":"15540:15:26"},"nativeSrc":"15540:15:26","nodeType":"YulExpressionStatement","src":"15540:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15571:1:26","nodeType":"YulLiteral","src":"15571:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15574:4:26","nodeType":"YulLiteral","src":"15574:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15564:6:26","nodeType":"YulIdentifier","src":"15564:6:26"},"nativeSrc":"15564:15:26","nodeType":"YulFunctionCall","src":"15564:15:26"},"nativeSrc":"15564:15:26","nodeType":"YulExpressionStatement","src":"15564:15:26"}]},"name":"panic_error_0x12","nativeSrc":"15405:180:26","nodeType":"YulFunctionDefinition","src":"15405:180:26"},{"body":{"nativeSrc":"15633:143:26","nodeType":"YulBlock","src":"15633:143:26","statements":[{"nativeSrc":"15643:25:26","nodeType":"YulAssignment","src":"15643:25:26","value":{"arguments":[{"name":"x","nativeSrc":"15666:1:26","nodeType":"YulIdentifier","src":"15666:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15648:17:26","nodeType":"YulIdentifier","src":"15648:17:26"},"nativeSrc":"15648:20:26","nodeType":"YulFunctionCall","src":"15648:20:26"},"variableNames":[{"name":"x","nativeSrc":"15643:1:26","nodeType":"YulIdentifier","src":"15643:1:26"}]},{"nativeSrc":"15677:25:26","nodeType":"YulAssignment","src":"15677:25:26","value":{"arguments":[{"name":"y","nativeSrc":"15700:1:26","nodeType":"YulIdentifier","src":"15700:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15682:17:26","nodeType":"YulIdentifier","src":"15682:17:26"},"nativeSrc":"15682:20:26","nodeType":"YulFunctionCall","src":"15682:20:26"},"variableNames":[{"name":"y","nativeSrc":"15677:1:26","nodeType":"YulIdentifier","src":"15677:1:26"}]},{"body":{"nativeSrc":"15724:22:26","nodeType":"YulBlock","src":"15724:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"15726:16:26","nodeType":"YulIdentifier","src":"15726:16:26"},"nativeSrc":"15726:18:26","nodeType":"YulFunctionCall","src":"15726:18:26"},"nativeSrc":"15726:18:26","nodeType":"YulExpressionStatement","src":"15726:18:26"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"15721:1:26","nodeType":"YulIdentifier","src":"15721:1:26"}],"functionName":{"name":"iszero","nativeSrc":"15714:6:26","nodeType":"YulIdentifier","src":"15714:6:26"},"nativeSrc":"15714:9:26","nodeType":"YulFunctionCall","src":"15714:9:26"},"nativeSrc":"15711:35:26","nodeType":"YulIf","src":"15711:35:26"},{"nativeSrc":"15756:14:26","nodeType":"YulAssignment","src":"15756:14:26","value":{"arguments":[{"name":"x","nativeSrc":"15765:1:26","nodeType":"YulIdentifier","src":"15765:1:26"},{"name":"y","nativeSrc":"15768:1:26","nodeType":"YulIdentifier","src":"15768:1:26"}],"functionName":{"name":"div","nativeSrc":"15761:3:26","nodeType":"YulIdentifier","src":"15761:3:26"},"nativeSrc":"15761:9:26","nodeType":"YulFunctionCall","src":"15761:9:26"},"variableNames":[{"name":"r","nativeSrc":"15756:1:26","nodeType":"YulIdentifier","src":"15756:1:26"}]}]},"name":"checked_div_t_uint256","nativeSrc":"15591:185:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15622:1:26","nodeType":"YulTypedName","src":"15622:1:26","type":""},{"name":"y","nativeSrc":"15625:1:26","nodeType":"YulTypedName","src":"15625:1:26","type":""}],"returnVariables":[{"name":"r","nativeSrc":"15631:1:26","nodeType":"YulTypedName","src":"15631:1:26","type":""}],"src":"15591:185:26"},{"body":{"nativeSrc":"15826:147:26","nodeType":"YulBlock","src":"15826:147:26","statements":[{"nativeSrc":"15836:25:26","nodeType":"YulAssignment","src":"15836:25:26","value":{"arguments":[{"name":"x","nativeSrc":"15859:1:26","nodeType":"YulIdentifier","src":"15859:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15841:17:26","nodeType":"YulIdentifier","src":"15841:17:26"},"nativeSrc":"15841:20:26","nodeType":"YulFunctionCall","src":"15841:20:26"},"variableNames":[{"name":"x","nativeSrc":"15836:1:26","nodeType":"YulIdentifier","src":"15836:1:26"}]},{"nativeSrc":"15870:25:26","nodeType":"YulAssignment","src":"15870:25:26","value":{"arguments":[{"name":"y","nativeSrc":"15893:1:26","nodeType":"YulIdentifier","src":"15893:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15875:17:26","nodeType":"YulIdentifier","src":"15875:17:26"},"nativeSrc":"15875:20:26","nodeType":"YulFunctionCall","src":"15875:20:26"},"variableNames":[{"name":"y","nativeSrc":"15870:1:26","nodeType":"YulIdentifier","src":"15870:1:26"}]},{"nativeSrc":"15904:16:26","nodeType":"YulAssignment","src":"15904:16:26","value":{"arguments":[{"name":"x","nativeSrc":"15915:1:26","nodeType":"YulIdentifier","src":"15915:1:26"},{"name":"y","nativeSrc":"15918:1:26","nodeType":"YulIdentifier","src":"15918:1:26"}],"functionName":{"name":"add","nativeSrc":"15911:3:26","nodeType":"YulIdentifier","src":"15911:3:26"},"nativeSrc":"15911:9:26","nodeType":"YulFunctionCall","src":"15911:9:26"},"variableNames":[{"name":"sum","nativeSrc":"15904:3:26","nodeType":"YulIdentifier","src":"15904:3:26"}]},{"body":{"nativeSrc":"15944:22:26","nodeType":"YulBlock","src":"15944:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15946:16:26","nodeType":"YulIdentifier","src":"15946:16:26"},"nativeSrc":"15946:18:26","nodeType":"YulFunctionCall","src":"15946:18:26"},"nativeSrc":"15946:18:26","nodeType":"YulExpressionStatement","src":"15946:18:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15936:1:26","nodeType":"YulIdentifier","src":"15936:1:26"},{"name":"sum","nativeSrc":"15939:3:26","nodeType":"YulIdentifier","src":"15939:3:26"}],"functionName":{"name":"gt","nativeSrc":"15933:2:26","nodeType":"YulIdentifier","src":"15933:2:26"},"nativeSrc":"15933:10:26","nodeType":"YulFunctionCall","src":"15933:10:26"},"nativeSrc":"15930:36:26","nodeType":"YulIf","src":"15930:36:26"}]},"name":"checked_add_t_uint256","nativeSrc":"15782:191:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15813:1:26","nodeType":"YulTypedName","src":"15813:1:26","type":""},{"name":"y","nativeSrc":"15816:1:26","nodeType":"YulTypedName","src":"15816:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15822:3:26","nodeType":"YulTypedName","src":"15822:3:26","type":""}],"src":"15782:191:26"},{"body":{"nativeSrc":"16085:66:26","nodeType":"YulBlock","src":"16085:66:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16107:6:26","nodeType":"YulIdentifier","src":"16107:6:26"},{"kind":"number","nativeSrc":"16115:1:26","nodeType":"YulLiteral","src":"16115:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16103:3:26","nodeType":"YulIdentifier","src":"16103:3:26"},"nativeSrc":"16103:14:26","nodeType":"YulFunctionCall","src":"16103:14:26"},{"hexValue":"45786365656473206d6178696d756d20737570706c79","kind":"string","nativeSrc":"16119:24:26","nodeType":"YulLiteral","src":"16119:24:26","type":"","value":"Exceeds maximum supply"}],"functionName":{"name":"mstore","nativeSrc":"16096:6:26","nodeType":"YulIdentifier","src":"16096:6:26"},"nativeSrc":"16096:48:26","nodeType":"YulFunctionCall","src":"16096:48:26"},"nativeSrc":"16096:48:26","nodeType":"YulExpressionStatement","src":"16096:48:26"}]},"name":"store_literal_in_memory_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","nativeSrc":"15979:172:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16077:6:26","nodeType":"YulTypedName","src":"16077:6:26","type":""}],"src":"15979:172:26"},{"body":{"nativeSrc":"16303:220:26","nodeType":"YulBlock","src":"16303:220:26","statements":[{"nativeSrc":"16313:74:26","nodeType":"YulAssignment","src":"16313:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"16379:3:26","nodeType":"YulIdentifier","src":"16379:3:26"},{"kind":"number","nativeSrc":"16384:2:26","nodeType":"YulLiteral","src":"16384:2:26","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16320:58:26","nodeType":"YulIdentifier","src":"16320:58:26"},"nativeSrc":"16320:67:26","nodeType":"YulFunctionCall","src":"16320:67:26"},"variableNames":[{"name":"pos","nativeSrc":"16313:3:26","nodeType":"YulIdentifier","src":"16313:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16485:3:26","nodeType":"YulIdentifier","src":"16485:3:26"}],"functionName":{"name":"store_literal_in_memory_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","nativeSrc":"16396:88:26","nodeType":"YulIdentifier","src":"16396:88:26"},"nativeSrc":"16396:93:26","nodeType":"YulFunctionCall","src":"16396:93:26"},"nativeSrc":"16396:93:26","nodeType":"YulExpressionStatement","src":"16396:93:26"},{"nativeSrc":"16498:19:26","nodeType":"YulAssignment","src":"16498:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"16509:3:26","nodeType":"YulIdentifier","src":"16509:3:26"},{"kind":"number","nativeSrc":"16514:2:26","nodeType":"YulLiteral","src":"16514:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16505:3:26","nodeType":"YulIdentifier","src":"16505:3:26"},"nativeSrc":"16505:12:26","nodeType":"YulFunctionCall","src":"16505:12:26"},"variableNames":[{"name":"end","nativeSrc":"16498:3:26","nodeType":"YulIdentifier","src":"16498:3:26"}]}]},"name":"abi_encode_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6_to_t_string_memory_ptr_fromStack","nativeSrc":"16157:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16291:3:26","nodeType":"YulTypedName","src":"16291:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16299:3:26","nodeType":"YulTypedName","src":"16299:3:26","type":""}],"src":"16157:366:26"},{"body":{"nativeSrc":"16700:248:26","nodeType":"YulBlock","src":"16700:248:26","statements":[{"nativeSrc":"16710:26:26","nodeType":"YulAssignment","src":"16710:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"16722:9:26","nodeType":"YulIdentifier","src":"16722:9:26"},{"kind":"number","nativeSrc":"16733:2:26","nodeType":"YulLiteral","src":"16733:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16718:3:26","nodeType":"YulIdentifier","src":"16718:3:26"},"nativeSrc":"16718:18:26","nodeType":"YulFunctionCall","src":"16718:18:26"},"variableNames":[{"name":"tail","nativeSrc":"16710:4:26","nodeType":"YulIdentifier","src":"16710:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16757:9:26","nodeType":"YulIdentifier","src":"16757:9:26"},{"kind":"number","nativeSrc":"16768:1:26","nodeType":"YulLiteral","src":"16768:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16753:3:26","nodeType":"YulIdentifier","src":"16753:3:26"},"nativeSrc":"16753:17:26","nodeType":"YulFunctionCall","src":"16753:17:26"},{"arguments":[{"name":"tail","nativeSrc":"16776:4:26","nodeType":"YulIdentifier","src":"16776:4:26"},{"name":"headStart","nativeSrc":"16782:9:26","nodeType":"YulIdentifier","src":"16782:9:26"}],"functionName":{"name":"sub","nativeSrc":"16772:3:26","nodeType":"YulIdentifier","src":"16772:3:26"},"nativeSrc":"16772:20:26","nodeType":"YulFunctionCall","src":"16772:20:26"}],"functionName":{"name":"mstore","nativeSrc":"16746:6:26","nodeType":"YulIdentifier","src":"16746:6:26"},"nativeSrc":"16746:47:26","nodeType":"YulFunctionCall","src":"16746:47:26"},"nativeSrc":"16746:47:26","nodeType":"YulExpressionStatement","src":"16746:47:26"},{"nativeSrc":"16802:139:26","nodeType":"YulAssignment","src":"16802:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"16936:4:26","nodeType":"YulIdentifier","src":"16936:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6_to_t_string_memory_ptr_fromStack","nativeSrc":"16810:124:26","nodeType":"YulIdentifier","src":"16810:124:26"},"nativeSrc":"16810:131:26","nodeType":"YulFunctionCall","src":"16810:131:26"},"variableNames":[{"name":"tail","nativeSrc":"16802:4:26","nodeType":"YulIdentifier","src":"16802:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16529:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16680:9:26","nodeType":"YulTypedName","src":"16680:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16695:4:26","nodeType":"YulTypedName","src":"16695:4:26","type":""}],"src":"16529:419:26"},{"body":{"nativeSrc":"16999:149:26","nodeType":"YulBlock","src":"16999:149:26","statements":[{"nativeSrc":"17009:25:26","nodeType":"YulAssignment","src":"17009:25:26","value":{"arguments":[{"name":"x","nativeSrc":"17032:1:26","nodeType":"YulIdentifier","src":"17032:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17014:17:26","nodeType":"YulIdentifier","src":"17014:17:26"},"nativeSrc":"17014:20:26","nodeType":"YulFunctionCall","src":"17014:20:26"},"variableNames":[{"name":"x","nativeSrc":"17009:1:26","nodeType":"YulIdentifier","src":"17009:1:26"}]},{"nativeSrc":"17043:25:26","nodeType":"YulAssignment","src":"17043:25:26","value":{"arguments":[{"name":"y","nativeSrc":"17066:1:26","nodeType":"YulIdentifier","src":"17066:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17048:17:26","nodeType":"YulIdentifier","src":"17048:17:26"},"nativeSrc":"17048:20:26","nodeType":"YulFunctionCall","src":"17048:20:26"},"variableNames":[{"name":"y","nativeSrc":"17043:1:26","nodeType":"YulIdentifier","src":"17043:1:26"}]},{"nativeSrc":"17077:17:26","nodeType":"YulAssignment","src":"17077:17:26","value":{"arguments":[{"name":"x","nativeSrc":"17089:1:26","nodeType":"YulIdentifier","src":"17089:1:26"},{"name":"y","nativeSrc":"17092:1:26","nodeType":"YulIdentifier","src":"17092:1:26"}],"functionName":{"name":"sub","nativeSrc":"17085:3:26","nodeType":"YulIdentifier","src":"17085:3:26"},"nativeSrc":"17085:9:26","nodeType":"YulFunctionCall","src":"17085:9:26"},"variableNames":[{"name":"diff","nativeSrc":"17077:4:26","nodeType":"YulIdentifier","src":"17077:4:26"}]},{"body":{"nativeSrc":"17119:22:26","nodeType":"YulBlock","src":"17119:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17121:16:26","nodeType":"YulIdentifier","src":"17121:16:26"},"nativeSrc":"17121:18:26","nodeType":"YulFunctionCall","src":"17121:18:26"},"nativeSrc":"17121:18:26","nodeType":"YulExpressionStatement","src":"17121:18:26"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"17110:4:26","nodeType":"YulIdentifier","src":"17110:4:26"},{"name":"x","nativeSrc":"17116:1:26","nodeType":"YulIdentifier","src":"17116:1:26"}],"functionName":{"name":"gt","nativeSrc":"17107:2:26","nodeType":"YulIdentifier","src":"17107:2:26"},"nativeSrc":"17107:11:26","nodeType":"YulFunctionCall","src":"17107:11:26"},"nativeSrc":"17104:37:26","nodeType":"YulIf","src":"17104:37:26"}]},"name":"checked_sub_t_uint256","nativeSrc":"16954:194:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16985:1:26","nodeType":"YulTypedName","src":"16985:1:26","type":""},{"name":"y","nativeSrc":"16988:1:26","nodeType":"YulTypedName","src":"16988:1:26","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"16994:4:26","nodeType":"YulTypedName","src":"16994:4:26","type":""}],"src":"16954:194:26"},{"body":{"nativeSrc":"17260:74:26","nodeType":"YulBlock","src":"17260:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17282:6:26","nodeType":"YulIdentifier","src":"17282:6:26"},{"kind":"number","nativeSrc":"17290:1:26","nodeType":"YulLiteral","src":"17290:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17278:3:26","nodeType":"YulIdentifier","src":"17278:3:26"},"nativeSrc":"17278:14:26","nodeType":"YulFunctionCall","src":"17278:14:26"},{"hexValue":"45786365656473206d6178696d756d20657870616e73696f6e2072617465","kind":"string","nativeSrc":"17294:32:26","nodeType":"YulLiteral","src":"17294:32:26","type":"","value":"Exceeds maximum expansion rate"}],"functionName":{"name":"mstore","nativeSrc":"17271:6:26","nodeType":"YulIdentifier","src":"17271:6:26"},"nativeSrc":"17271:56:26","nodeType":"YulFunctionCall","src":"17271:56:26"},"nativeSrc":"17271:56:26","nodeType":"YulExpressionStatement","src":"17271:56:26"}]},"name":"store_literal_in_memory_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc","nativeSrc":"17154:180:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17252:6:26","nodeType":"YulTypedName","src":"17252:6:26","type":""}],"src":"17154:180:26"},{"body":{"nativeSrc":"17486:220:26","nodeType":"YulBlock","src":"17486:220:26","statements":[{"nativeSrc":"17496:74:26","nodeType":"YulAssignment","src":"17496:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"17562:3:26","nodeType":"YulIdentifier","src":"17562:3:26"},{"kind":"number","nativeSrc":"17567:2:26","nodeType":"YulLiteral","src":"17567:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17503:58:26","nodeType":"YulIdentifier","src":"17503:58:26"},"nativeSrc":"17503:67:26","nodeType":"YulFunctionCall","src":"17503:67:26"},"variableNames":[{"name":"pos","nativeSrc":"17496:3:26","nodeType":"YulIdentifier","src":"17496:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17668:3:26","nodeType":"YulIdentifier","src":"17668:3:26"}],"functionName":{"name":"store_literal_in_memory_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc","nativeSrc":"17579:88:26","nodeType":"YulIdentifier","src":"17579:88:26"},"nativeSrc":"17579:93:26","nodeType":"YulFunctionCall","src":"17579:93:26"},"nativeSrc":"17579:93:26","nodeType":"YulExpressionStatement","src":"17579:93:26"},{"nativeSrc":"17681:19:26","nodeType":"YulAssignment","src":"17681:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"17692:3:26","nodeType":"YulIdentifier","src":"17692:3:26"},{"kind":"number","nativeSrc":"17697:2:26","nodeType":"YulLiteral","src":"17697:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17688:3:26","nodeType":"YulIdentifier","src":"17688:3:26"},"nativeSrc":"17688:12:26","nodeType":"YulFunctionCall","src":"17688:12:26"},"variableNames":[{"name":"end","nativeSrc":"17681:3:26","nodeType":"YulIdentifier","src":"17681:3:26"}]}]},"name":"abi_encode_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc_to_t_string_memory_ptr_fromStack","nativeSrc":"17340:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17474:3:26","nodeType":"YulTypedName","src":"17474:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17482:3:26","nodeType":"YulTypedName","src":"17482:3:26","type":""}],"src":"17340:366:26"},{"body":{"nativeSrc":"17883:248:26","nodeType":"YulBlock","src":"17883:248:26","statements":[{"nativeSrc":"17893:26:26","nodeType":"YulAssignment","src":"17893:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"17905:9:26","nodeType":"YulIdentifier","src":"17905:9:26"},{"kind":"number","nativeSrc":"17916:2:26","nodeType":"YulLiteral","src":"17916:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17901:3:26","nodeType":"YulIdentifier","src":"17901:3:26"},"nativeSrc":"17901:18:26","nodeType":"YulFunctionCall","src":"17901:18:26"},"variableNames":[{"name":"tail","nativeSrc":"17893:4:26","nodeType":"YulIdentifier","src":"17893:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17940:9:26","nodeType":"YulIdentifier","src":"17940:9:26"},{"kind":"number","nativeSrc":"17951:1:26","nodeType":"YulLiteral","src":"17951:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17936:3:26","nodeType":"YulIdentifier","src":"17936:3:26"},"nativeSrc":"17936:17:26","nodeType":"YulFunctionCall","src":"17936:17:26"},{"arguments":[{"name":"tail","nativeSrc":"17959:4:26","nodeType":"YulIdentifier","src":"17959:4:26"},{"name":"headStart","nativeSrc":"17965:9:26","nodeType":"YulIdentifier","src":"17965:9:26"}],"functionName":{"name":"sub","nativeSrc":"17955:3:26","nodeType":"YulIdentifier","src":"17955:3:26"},"nativeSrc":"17955:20:26","nodeType":"YulFunctionCall","src":"17955:20:26"}],"functionName":{"name":"mstore","nativeSrc":"17929:6:26","nodeType":"YulIdentifier","src":"17929:6:26"},"nativeSrc":"17929:47:26","nodeType":"YulFunctionCall","src":"17929:47:26"},"nativeSrc":"17929:47:26","nodeType":"YulExpressionStatement","src":"17929:47:26"},{"nativeSrc":"17985:139:26","nodeType":"YulAssignment","src":"17985:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"18119:4:26","nodeType":"YulIdentifier","src":"18119:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc_to_t_string_memory_ptr_fromStack","nativeSrc":"17993:124:26","nodeType":"YulIdentifier","src":"17993:124:26"},"nativeSrc":"17993:131:26","nodeType":"YulFunctionCall","src":"17993:131:26"},"variableNames":[{"name":"tail","nativeSrc":"17985:4:26","nodeType":"YulIdentifier","src":"17985:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17712:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17863:9:26","nodeType":"YulTypedName","src":"17863:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17878:4:26","nodeType":"YulTypedName","src":"17878:4:26","type":""}],"src":"17712:419:26"},{"body":{"nativeSrc":"18243:132:26","nodeType":"YulBlock","src":"18243:132:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18265:6:26","nodeType":"YulIdentifier","src":"18265:6:26"},{"kind":"number","nativeSrc":"18273:1:26","nodeType":"YulLiteral","src":"18273:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18261:3:26","nodeType":"YulIdentifier","src":"18261:3:26"},"nativeSrc":"18261:14:26","nodeType":"YulFunctionCall","src":"18261:14:26"},{"hexValue":"4e6577206d617820737570706c79206d757374206265206c657373207468616e","kind":"string","nativeSrc":"18277:34:26","nodeType":"YulLiteral","src":"18277:34:26","type":"","value":"New max supply must be less than"}],"functionName":{"name":"mstore","nativeSrc":"18254:6:26","nodeType":"YulIdentifier","src":"18254:6:26"},"nativeSrc":"18254:58:26","nodeType":"YulFunctionCall","src":"18254:58:26"},"nativeSrc":"18254:58:26","nodeType":"YulExpressionStatement","src":"18254:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18333:6:26","nodeType":"YulIdentifier","src":"18333:6:26"},{"kind":"number","nativeSrc":"18341:2:26","nodeType":"YulLiteral","src":"18341:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18329:3:26","nodeType":"YulIdentifier","src":"18329:3:26"},"nativeSrc":"18329:15:26","nodeType":"YulFunctionCall","src":"18329:15:26"},{"hexValue":"2063757272656e74206d617820737570706c79","kind":"string","nativeSrc":"18346:21:26","nodeType":"YulLiteral","src":"18346:21:26","type":"","value":" current max supply"}],"functionName":{"name":"mstore","nativeSrc":"18322:6:26","nodeType":"YulIdentifier","src":"18322:6:26"},"nativeSrc":"18322:46:26","nodeType":"YulFunctionCall","src":"18322:46:26"},"nativeSrc":"18322:46:26","nodeType":"YulExpressionStatement","src":"18322:46:26"}]},"name":"store_literal_in_memory_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8","nativeSrc":"18137:238:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18235:6:26","nodeType":"YulTypedName","src":"18235:6:26","type":""}],"src":"18137:238:26"},{"body":{"nativeSrc":"18527:220:26","nodeType":"YulBlock","src":"18527:220:26","statements":[{"nativeSrc":"18537:74:26","nodeType":"YulAssignment","src":"18537:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"18603:3:26","nodeType":"YulIdentifier","src":"18603:3:26"},{"kind":"number","nativeSrc":"18608:2:26","nodeType":"YulLiteral","src":"18608:2:26","type":"","value":"51"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18544:58:26","nodeType":"YulIdentifier","src":"18544:58:26"},"nativeSrc":"18544:67:26","nodeType":"YulFunctionCall","src":"18544:67:26"},"variableNames":[{"name":"pos","nativeSrc":"18537:3:26","nodeType":"YulIdentifier","src":"18537:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18709:3:26","nodeType":"YulIdentifier","src":"18709:3:26"}],"functionName":{"name":"store_literal_in_memory_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8","nativeSrc":"18620:88:26","nodeType":"YulIdentifier","src":"18620:88:26"},"nativeSrc":"18620:93:26","nodeType":"YulFunctionCall","src":"18620:93:26"},"nativeSrc":"18620:93:26","nodeType":"YulExpressionStatement","src":"18620:93:26"},{"nativeSrc":"18722:19:26","nodeType":"YulAssignment","src":"18722:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"18733:3:26","nodeType":"YulIdentifier","src":"18733:3:26"},{"kind":"number","nativeSrc":"18738:2:26","nodeType":"YulLiteral","src":"18738:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18729:3:26","nodeType":"YulIdentifier","src":"18729:3:26"},"nativeSrc":"18729:12:26","nodeType":"YulFunctionCall","src":"18729:12:26"},"variableNames":[{"name":"end","nativeSrc":"18722:3:26","nodeType":"YulIdentifier","src":"18722:3:26"}]}]},"name":"abi_encode_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8_to_t_string_memory_ptr_fromStack","nativeSrc":"18381:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18515:3:26","nodeType":"YulTypedName","src":"18515:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18523:3:26","nodeType":"YulTypedName","src":"18523:3:26","type":""}],"src":"18381:366:26"},{"body":{"nativeSrc":"18924:248:26","nodeType":"YulBlock","src":"18924:248:26","statements":[{"nativeSrc":"18934:26:26","nodeType":"YulAssignment","src":"18934:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18946:9:26","nodeType":"YulIdentifier","src":"18946:9:26"},{"kind":"number","nativeSrc":"18957:2:26","nodeType":"YulLiteral","src":"18957:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18942:3:26","nodeType":"YulIdentifier","src":"18942:3:26"},"nativeSrc":"18942:18:26","nodeType":"YulFunctionCall","src":"18942:18:26"},"variableNames":[{"name":"tail","nativeSrc":"18934:4:26","nodeType":"YulIdentifier","src":"18934:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18981:9:26","nodeType":"YulIdentifier","src":"18981:9:26"},{"kind":"number","nativeSrc":"18992:1:26","nodeType":"YulLiteral","src":"18992:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18977:3:26","nodeType":"YulIdentifier","src":"18977:3:26"},"nativeSrc":"18977:17:26","nodeType":"YulFunctionCall","src":"18977:17:26"},{"arguments":[{"name":"tail","nativeSrc":"19000:4:26","nodeType":"YulIdentifier","src":"19000:4:26"},{"name":"headStart","nativeSrc":"19006:9:26","nodeType":"YulIdentifier","src":"19006:9:26"}],"functionName":{"name":"sub","nativeSrc":"18996:3:26","nodeType":"YulIdentifier","src":"18996:3:26"},"nativeSrc":"18996:20:26","nodeType":"YulFunctionCall","src":"18996:20:26"}],"functionName":{"name":"mstore","nativeSrc":"18970:6:26","nodeType":"YulIdentifier","src":"18970:6:26"},"nativeSrc":"18970:47:26","nodeType":"YulFunctionCall","src":"18970:47:26"},"nativeSrc":"18970:47:26","nodeType":"YulExpressionStatement","src":"18970:47:26"},{"nativeSrc":"19026:139:26","nodeType":"YulAssignment","src":"19026:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"19160:4:26","nodeType":"YulIdentifier","src":"19160:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8_to_t_string_memory_ptr_fromStack","nativeSrc":"19034:124:26","nodeType":"YulIdentifier","src":"19034:124:26"},"nativeSrc":"19034:131:26","nodeType":"YulFunctionCall","src":"19034:131:26"},"variableNames":[{"name":"tail","nativeSrc":"19026:4:26","nodeType":"YulIdentifier","src":"19026:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18753:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18904:9:26","nodeType":"YulTypedName","src":"18904:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18919:4:26","nodeType":"YulTypedName","src":"18919:4:26","type":""}],"src":"18753:419:26"},{"body":{"nativeSrc":"19206:152:26","nodeType":"YulBlock","src":"19206:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19223:1:26","nodeType":"YulLiteral","src":"19223:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"19226:77:26","nodeType":"YulLiteral","src":"19226:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19216:6:26","nodeType":"YulIdentifier","src":"19216:6:26"},"nativeSrc":"19216:88:26","nodeType":"YulFunctionCall","src":"19216:88:26"},"nativeSrc":"19216:88:26","nodeType":"YulExpressionStatement","src":"19216:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19320:1:26","nodeType":"YulLiteral","src":"19320:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"19323:4:26","nodeType":"YulLiteral","src":"19323:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"19313:6:26","nodeType":"YulIdentifier","src":"19313:6:26"},"nativeSrc":"19313:15:26","nodeType":"YulFunctionCall","src":"19313:15:26"},"nativeSrc":"19313:15:26","nodeType":"YulExpressionStatement","src":"19313:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19344:1:26","nodeType":"YulLiteral","src":"19344:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"19347:4:26","nodeType":"YulLiteral","src":"19347:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19337:6:26","nodeType":"YulIdentifier","src":"19337:6:26"},"nativeSrc":"19337:15:26","nodeType":"YulFunctionCall","src":"19337:15:26"},"nativeSrc":"19337:15:26","nodeType":"YulExpressionStatement","src":"19337:15:26"}]},"name":"panic_error_0x41","nativeSrc":"19178:180:26","nodeType":"YulFunctionDefinition","src":"19178:180:26"},{"body":{"nativeSrc":"19602:537:26","nodeType":"YulBlock","src":"19602:537:26","statements":[{"nativeSrc":"19612:27:26","nodeType":"YulAssignment","src":"19612:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"19624:9:26","nodeType":"YulIdentifier","src":"19624:9:26"},{"kind":"number","nativeSrc":"19635:3:26","nodeType":"YulLiteral","src":"19635:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"19620:3:26","nodeType":"YulIdentifier","src":"19620:3:26"},"nativeSrc":"19620:19:26","nodeType":"YulFunctionCall","src":"19620:19:26"},"variableNames":[{"name":"tail","nativeSrc":"19612:4:26","nodeType":"YulIdentifier","src":"19612:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19693:6:26","nodeType":"YulIdentifier","src":"19693:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"19706:9:26","nodeType":"YulIdentifier","src":"19706:9:26"},{"kind":"number","nativeSrc":"19717:1:26","nodeType":"YulLiteral","src":"19717:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19702:3:26","nodeType":"YulIdentifier","src":"19702:3:26"},"nativeSrc":"19702:17:26","nodeType":"YulFunctionCall","src":"19702:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19649:43:26","nodeType":"YulIdentifier","src":"19649:43:26"},"nativeSrc":"19649:71:26","nodeType":"YulFunctionCall","src":"19649:71:26"},"nativeSrc":"19649:71:26","nodeType":"YulExpressionStatement","src":"19649:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19774:6:26","nodeType":"YulIdentifier","src":"19774:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"19787:9:26","nodeType":"YulIdentifier","src":"19787:9:26"},{"kind":"number","nativeSrc":"19798:2:26","nodeType":"YulLiteral","src":"19798:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19783:3:26","nodeType":"YulIdentifier","src":"19783:3:26"},"nativeSrc":"19783:18:26","nodeType":"YulFunctionCall","src":"19783:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19730:43:26","nodeType":"YulIdentifier","src":"19730:43:26"},"nativeSrc":"19730:72:26","nodeType":"YulFunctionCall","src":"19730:72:26"},"nativeSrc":"19730:72:26","nodeType":"YulExpressionStatement","src":"19730:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19856:6:26","nodeType":"YulIdentifier","src":"19856:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"19869:9:26","nodeType":"YulIdentifier","src":"19869:9:26"},{"kind":"number","nativeSrc":"19880:2:26","nodeType":"YulLiteral","src":"19880:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19865:3:26","nodeType":"YulIdentifier","src":"19865:3:26"},"nativeSrc":"19865:18:26","nodeType":"YulFunctionCall","src":"19865:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19812:43:26","nodeType":"YulIdentifier","src":"19812:43:26"},"nativeSrc":"19812:72:26","nodeType":"YulFunctionCall","src":"19812:72:26"},"nativeSrc":"19812:72:26","nodeType":"YulExpressionStatement","src":"19812:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"19938:6:26","nodeType":"YulIdentifier","src":"19938:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"19951:9:26","nodeType":"YulIdentifier","src":"19951:9:26"},{"kind":"number","nativeSrc":"19962:2:26","nodeType":"YulLiteral","src":"19962:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19947:3:26","nodeType":"YulIdentifier","src":"19947:3:26"},"nativeSrc":"19947:18:26","nodeType":"YulFunctionCall","src":"19947:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19894:43:26","nodeType":"YulIdentifier","src":"19894:43:26"},"nativeSrc":"19894:72:26","nodeType":"YulFunctionCall","src":"19894:72:26"},"nativeSrc":"19894:72:26","nodeType":"YulExpressionStatement","src":"19894:72:26"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"20020:6:26","nodeType":"YulIdentifier","src":"20020:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20033:9:26","nodeType":"YulIdentifier","src":"20033:9:26"},{"kind":"number","nativeSrc":"20044:3:26","nodeType":"YulLiteral","src":"20044:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20029:3:26","nodeType":"YulIdentifier","src":"20029:3:26"},"nativeSrc":"20029:19:26","nodeType":"YulFunctionCall","src":"20029:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19976:43:26","nodeType":"YulIdentifier","src":"19976:43:26"},"nativeSrc":"19976:73:26","nodeType":"YulFunctionCall","src":"19976:73:26"},"nativeSrc":"19976:73:26","nodeType":"YulExpressionStatement","src":"19976:73:26"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"20103:6:26","nodeType":"YulIdentifier","src":"20103:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20116:9:26","nodeType":"YulIdentifier","src":"20116:9:26"},{"kind":"number","nativeSrc":"20127:3:26","nodeType":"YulLiteral","src":"20127:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"20112:3:26","nodeType":"YulIdentifier","src":"20112:3:26"},"nativeSrc":"20112:19:26","nodeType":"YulFunctionCall","src":"20112:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20059:43:26","nodeType":"YulIdentifier","src":"20059:43:26"},"nativeSrc":"20059:73:26","nodeType":"YulFunctionCall","src":"20059:73:26"},"nativeSrc":"20059:73:26","nodeType":"YulExpressionStatement","src":"20059:73:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"19364:775:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19534:9:26","nodeType":"YulTypedName","src":"19534:9:26","type":""},{"name":"value5","nativeSrc":"19546:6:26","nodeType":"YulTypedName","src":"19546:6:26","type":""},{"name":"value4","nativeSrc":"19554:6:26","nodeType":"YulTypedName","src":"19554:6:26","type":""},{"name":"value3","nativeSrc":"19562:6:26","nodeType":"YulTypedName","src":"19562:6:26","type":""},{"name":"value2","nativeSrc":"19570:6:26","nodeType":"YulTypedName","src":"19570:6:26","type":""},{"name":"value1","nativeSrc":"19578:6:26","nodeType":"YulTypedName","src":"19578:6:26","type":""},{"name":"value0","nativeSrc":"19586:6:26","nodeType":"YulTypedName","src":"19586:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19597:4:26","nodeType":"YulTypedName","src":"19597:4:26","type":""}],"src":"19364:775:26"},{"body":{"nativeSrc":"20271:206:26","nodeType":"YulBlock","src":"20271:206:26","statements":[{"nativeSrc":"20281:26:26","nodeType":"YulAssignment","src":"20281:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"20293:9:26","nodeType":"YulIdentifier","src":"20293:9:26"},{"kind":"number","nativeSrc":"20304:2:26","nodeType":"YulLiteral","src":"20304:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20289:3:26","nodeType":"YulIdentifier","src":"20289:3:26"},"nativeSrc":"20289:18:26","nodeType":"YulFunctionCall","src":"20289:18:26"},"variableNames":[{"name":"tail","nativeSrc":"20281:4:26","nodeType":"YulIdentifier","src":"20281:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20361:6:26","nodeType":"YulIdentifier","src":"20361:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20374:9:26","nodeType":"YulIdentifier","src":"20374:9:26"},{"kind":"number","nativeSrc":"20385:1:26","nodeType":"YulLiteral","src":"20385:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20370:3:26","nodeType":"YulIdentifier","src":"20370:3:26"},"nativeSrc":"20370:17:26","nodeType":"YulFunctionCall","src":"20370:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20317:43:26","nodeType":"YulIdentifier","src":"20317:43:26"},"nativeSrc":"20317:71:26","nodeType":"YulFunctionCall","src":"20317:71:26"},"nativeSrc":"20317:71:26","nodeType":"YulExpressionStatement","src":"20317:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20442:6:26","nodeType":"YulIdentifier","src":"20442:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20455:9:26","nodeType":"YulIdentifier","src":"20455:9:26"},{"kind":"number","nativeSrc":"20466:2:26","nodeType":"YulLiteral","src":"20466:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20451:3:26","nodeType":"YulIdentifier","src":"20451:3:26"},"nativeSrc":"20451:18:26","nodeType":"YulFunctionCall","src":"20451:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20398:43:26","nodeType":"YulIdentifier","src":"20398:43:26"},"nativeSrc":"20398:72:26","nodeType":"YulFunctionCall","src":"20398:72:26"},"nativeSrc":"20398:72:26","nodeType":"YulExpressionStatement","src":"20398:72:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"20145:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20235:9:26","nodeType":"YulTypedName","src":"20235:9:26","type":""},{"name":"value1","nativeSrc":"20247:6:26","nodeType":"YulTypedName","src":"20247:6:26","type":""},{"name":"value0","nativeSrc":"20255:6:26","nodeType":"YulTypedName","src":"20255:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20266:4:26","nodeType":"YulTypedName","src":"20266:4:26","type":""}],"src":"20145:332:26"},{"body":{"nativeSrc":"20589:185:26","nodeType":"YulBlock","src":"20589:185:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20611:6:26","nodeType":"YulIdentifier","src":"20611:6:26"},{"kind":"number","nativeSrc":"20619:1:26","nodeType":"YulLiteral","src":"20619:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20607:3:26","nodeType":"YulIdentifier","src":"20607:3:26"},"nativeSrc":"20607:14:26","nodeType":"YulFunctionCall","src":"20607:14:26"},{"hexValue":"4e6577206d617820657870616e73696f6e2072617465206d757374206265206c","kind":"string","nativeSrc":"20623:34:26","nodeType":"YulLiteral","src":"20623:34:26","type":"","value":"New max expansion rate must be l"}],"functionName":{"name":"mstore","nativeSrc":"20600:6:26","nodeType":"YulIdentifier","src":"20600:6:26"},"nativeSrc":"20600:58:26","nodeType":"YulFunctionCall","src":"20600:58:26"},"nativeSrc":"20600:58:26","nodeType":"YulExpressionStatement","src":"20600:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20679:6:26","nodeType":"YulIdentifier","src":"20679:6:26"},{"kind":"number","nativeSrc":"20687:2:26","nodeType":"YulLiteral","src":"20687:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20675:3:26","nodeType":"YulIdentifier","src":"20675:3:26"},"nativeSrc":"20675:15:26","nodeType":"YulFunctionCall","src":"20675:15:26"},{"hexValue":"657373207468616e2063757272656e74206d617820657870616e73696f6e2072","kind":"string","nativeSrc":"20692:34:26","nodeType":"YulLiteral","src":"20692:34:26","type":"","value":"ess than current max expansion r"}],"functionName":{"name":"mstore","nativeSrc":"20668:6:26","nodeType":"YulIdentifier","src":"20668:6:26"},"nativeSrc":"20668:59:26","nodeType":"YulFunctionCall","src":"20668:59:26"},"nativeSrc":"20668:59:26","nodeType":"YulExpressionStatement","src":"20668:59:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20748:6:26","nodeType":"YulIdentifier","src":"20748:6:26"},{"kind":"number","nativeSrc":"20756:2:26","nodeType":"YulLiteral","src":"20756:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20744:3:26","nodeType":"YulIdentifier","src":"20744:3:26"},"nativeSrc":"20744:15:26","nodeType":"YulFunctionCall","src":"20744:15:26"},{"hexValue":"617465","kind":"string","nativeSrc":"20761:5:26","nodeType":"YulLiteral","src":"20761:5:26","type":"","value":"ate"}],"functionName":{"name":"mstore","nativeSrc":"20737:6:26","nodeType":"YulIdentifier","src":"20737:6:26"},"nativeSrc":"20737:30:26","nodeType":"YulFunctionCall","src":"20737:30:26"},"nativeSrc":"20737:30:26","nodeType":"YulExpressionStatement","src":"20737:30:26"}]},"name":"store_literal_in_memory_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad","nativeSrc":"20483:291:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20581:6:26","nodeType":"YulTypedName","src":"20581:6:26","type":""}],"src":"20483:291:26"},{"body":{"nativeSrc":"20926:220:26","nodeType":"YulBlock","src":"20926:220:26","statements":[{"nativeSrc":"20936:74:26","nodeType":"YulAssignment","src":"20936:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"21002:3:26","nodeType":"YulIdentifier","src":"21002:3:26"},{"kind":"number","nativeSrc":"21007:2:26","nodeType":"YulLiteral","src":"21007:2:26","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20943:58:26","nodeType":"YulIdentifier","src":"20943:58:26"},"nativeSrc":"20943:67:26","nodeType":"YulFunctionCall","src":"20943:67:26"},"variableNames":[{"name":"pos","nativeSrc":"20936:3:26","nodeType":"YulIdentifier","src":"20936:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21108:3:26","nodeType":"YulIdentifier","src":"21108:3:26"}],"functionName":{"name":"store_literal_in_memory_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad","nativeSrc":"21019:88:26","nodeType":"YulIdentifier","src":"21019:88:26"},"nativeSrc":"21019:93:26","nodeType":"YulFunctionCall","src":"21019:93:26"},"nativeSrc":"21019:93:26","nodeType":"YulExpressionStatement","src":"21019:93:26"},{"nativeSrc":"21121:19:26","nodeType":"YulAssignment","src":"21121:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"21132:3:26","nodeType":"YulIdentifier","src":"21132:3:26"},{"kind":"number","nativeSrc":"21137:2:26","nodeType":"YulLiteral","src":"21137:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21128:3:26","nodeType":"YulIdentifier","src":"21128:3:26"},"nativeSrc":"21128:12:26","nodeType":"YulFunctionCall","src":"21128:12:26"},"variableNames":[{"name":"end","nativeSrc":"21121:3:26","nodeType":"YulIdentifier","src":"21121:3:26"}]}]},"name":"abi_encode_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad_to_t_string_memory_ptr_fromStack","nativeSrc":"20780:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20914:3:26","nodeType":"YulTypedName","src":"20914:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20922:3:26","nodeType":"YulTypedName","src":"20922:3:26","type":""}],"src":"20780:366:26"},{"body":{"nativeSrc":"21323:248:26","nodeType":"YulBlock","src":"21323:248:26","statements":[{"nativeSrc":"21333:26:26","nodeType":"YulAssignment","src":"21333:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"21345:9:26","nodeType":"YulIdentifier","src":"21345:9:26"},{"kind":"number","nativeSrc":"21356:2:26","nodeType":"YulLiteral","src":"21356:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21341:3:26","nodeType":"YulIdentifier","src":"21341:3:26"},"nativeSrc":"21341:18:26","nodeType":"YulFunctionCall","src":"21341:18:26"},"variableNames":[{"name":"tail","nativeSrc":"21333:4:26","nodeType":"YulIdentifier","src":"21333:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21380:9:26","nodeType":"YulIdentifier","src":"21380:9:26"},{"kind":"number","nativeSrc":"21391:1:26","nodeType":"YulLiteral","src":"21391:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21376:3:26","nodeType":"YulIdentifier","src":"21376:3:26"},"nativeSrc":"21376:17:26","nodeType":"YulFunctionCall","src":"21376:17:26"},{"arguments":[{"name":"tail","nativeSrc":"21399:4:26","nodeType":"YulIdentifier","src":"21399:4:26"},{"name":"headStart","nativeSrc":"21405:9:26","nodeType":"YulIdentifier","src":"21405:9:26"}],"functionName":{"name":"sub","nativeSrc":"21395:3:26","nodeType":"YulIdentifier","src":"21395:3:26"},"nativeSrc":"21395:20:26","nodeType":"YulFunctionCall","src":"21395:20:26"}],"functionName":{"name":"mstore","nativeSrc":"21369:6:26","nodeType":"YulIdentifier","src":"21369:6:26"},"nativeSrc":"21369:47:26","nodeType":"YulFunctionCall","src":"21369:47:26"},"nativeSrc":"21369:47:26","nodeType":"YulExpressionStatement","src":"21369:47:26"},{"nativeSrc":"21425:139:26","nodeType":"YulAssignment","src":"21425:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"21559:4:26","nodeType":"YulIdentifier","src":"21559:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad_to_t_string_memory_ptr_fromStack","nativeSrc":"21433:124:26","nodeType":"YulIdentifier","src":"21433:124:26"},"nativeSrc":"21433:131:26","nodeType":"YulFunctionCall","src":"21433:131:26"},"variableNames":[{"name":"tail","nativeSrc":"21425:4:26","nodeType":"YulIdentifier","src":"21425:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21152:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21303:9:26","nodeType":"YulTypedName","src":"21303:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21318:4:26","nodeType":"YulTypedName","src":"21318:4:26","type":""}],"src":"21152:419:26"},{"body":{"nativeSrc":"21731:288:26","nodeType":"YulBlock","src":"21731:288:26","statements":[{"nativeSrc":"21741:26:26","nodeType":"YulAssignment","src":"21741:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"21753:9:26","nodeType":"YulIdentifier","src":"21753:9:26"},{"kind":"number","nativeSrc":"21764:2:26","nodeType":"YulLiteral","src":"21764:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21749:3:26","nodeType":"YulIdentifier","src":"21749:3:26"},"nativeSrc":"21749:18:26","nodeType":"YulFunctionCall","src":"21749:18:26"},"variableNames":[{"name":"tail","nativeSrc":"21741:4:26","nodeType":"YulIdentifier","src":"21741:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21821:6:26","nodeType":"YulIdentifier","src":"21821:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"21834:9:26","nodeType":"YulIdentifier","src":"21834:9:26"},{"kind":"number","nativeSrc":"21845:1:26","nodeType":"YulLiteral","src":"21845:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21830:3:26","nodeType":"YulIdentifier","src":"21830:3:26"},"nativeSrc":"21830:17:26","nodeType":"YulFunctionCall","src":"21830:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21777:43:26","nodeType":"YulIdentifier","src":"21777:43:26"},"nativeSrc":"21777:71:26","nodeType":"YulFunctionCall","src":"21777:71:26"},"nativeSrc":"21777:71:26","nodeType":"YulExpressionStatement","src":"21777:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21902:6:26","nodeType":"YulIdentifier","src":"21902:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"21915:9:26","nodeType":"YulIdentifier","src":"21915:9:26"},{"kind":"number","nativeSrc":"21926:2:26","nodeType":"YulLiteral","src":"21926:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21911:3:26","nodeType":"YulIdentifier","src":"21911:3:26"},"nativeSrc":"21911:18:26","nodeType":"YulFunctionCall","src":"21911:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21858:43:26","nodeType":"YulIdentifier","src":"21858:43:26"},"nativeSrc":"21858:72:26","nodeType":"YulFunctionCall","src":"21858:72:26"},"nativeSrc":"21858:72:26","nodeType":"YulExpressionStatement","src":"21858:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21984:6:26","nodeType":"YulIdentifier","src":"21984:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"21997:9:26","nodeType":"YulIdentifier","src":"21997:9:26"},{"kind":"number","nativeSrc":"22008:2:26","nodeType":"YulLiteral","src":"22008:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21993:3:26","nodeType":"YulIdentifier","src":"21993:3:26"},"nativeSrc":"21993:18:26","nodeType":"YulFunctionCall","src":"21993:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21940:43:26","nodeType":"YulIdentifier","src":"21940:43:26"},"nativeSrc":"21940:72:26","nodeType":"YulFunctionCall","src":"21940:72:26"},"nativeSrc":"21940:72:26","nodeType":"YulExpressionStatement","src":"21940:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21577:442:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21687:9:26","nodeType":"YulTypedName","src":"21687:9:26","type":""},{"name":"value2","nativeSrc":"21699:6:26","nodeType":"YulTypedName","src":"21699:6:26","type":""},{"name":"value1","nativeSrc":"21707:6:26","nodeType":"YulTypedName","src":"21707:6:26","type":""},{"name":"value0","nativeSrc":"21715:6:26","nodeType":"YulTypedName","src":"21715:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21726:4:26","nodeType":"YulTypedName","src":"21726:4:26","type":""}],"src":"21577:442:26"},{"body":{"nativeSrc":"22151:206:26","nodeType":"YulBlock","src":"22151:206:26","statements":[{"nativeSrc":"22161:26:26","nodeType":"YulAssignment","src":"22161:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"22173:9:26","nodeType":"YulIdentifier","src":"22173:9:26"},{"kind":"number","nativeSrc":"22184:2:26","nodeType":"YulLiteral","src":"22184:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22169:3:26","nodeType":"YulIdentifier","src":"22169:3:26"},"nativeSrc":"22169:18:26","nodeType":"YulFunctionCall","src":"22169:18:26"},"variableNames":[{"name":"tail","nativeSrc":"22161:4:26","nodeType":"YulIdentifier","src":"22161:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22241:6:26","nodeType":"YulIdentifier","src":"22241:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"22254:9:26","nodeType":"YulIdentifier","src":"22254:9:26"},{"kind":"number","nativeSrc":"22265:1:26","nodeType":"YulLiteral","src":"22265:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22250:3:26","nodeType":"YulIdentifier","src":"22250:3:26"},"nativeSrc":"22250:17:26","nodeType":"YulFunctionCall","src":"22250:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22197:43:26","nodeType":"YulIdentifier","src":"22197:43:26"},"nativeSrc":"22197:71:26","nodeType":"YulFunctionCall","src":"22197:71:26"},"nativeSrc":"22197:71:26","nodeType":"YulExpressionStatement","src":"22197:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22322:6:26","nodeType":"YulIdentifier","src":"22322:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"22335:9:26","nodeType":"YulIdentifier","src":"22335:9:26"},{"kind":"number","nativeSrc":"22346:2:26","nodeType":"YulLiteral","src":"22346:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22331:3:26","nodeType":"YulIdentifier","src":"22331:3:26"},"nativeSrc":"22331:18:26","nodeType":"YulFunctionCall","src":"22331:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22278:43:26","nodeType":"YulIdentifier","src":"22278:43:26"},"nativeSrc":"22278:72:26","nodeType":"YulFunctionCall","src":"22278:72:26"},"nativeSrc":"22278:72:26","nodeType":"YulExpressionStatement","src":"22278:72:26"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"22025:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22115:9:26","nodeType":"YulTypedName","src":"22115:9:26","type":""},{"name":"value1","nativeSrc":"22127:6:26","nodeType":"YulTypedName","src":"22127:6:26","type":""},{"name":"value0","nativeSrc":"22135:6:26","nodeType":"YulTypedName","src":"22135:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22146:4:26","nodeType":"YulTypedName","src":"22146:4:26","type":""}],"src":"22025:332:26"},{"body":{"nativeSrc":"22469:126:26","nodeType":"YulBlock","src":"22469:126:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22491:6:26","nodeType":"YulIdentifier","src":"22491:6:26"},{"kind":"number","nativeSrc":"22499:1:26","nodeType":"YulLiteral","src":"22499:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22487:3:26","nodeType":"YulIdentifier","src":"22487:3:26"},"nativeSrc":"22487:14:26","nodeType":"YulFunctionCall","src":"22487:14:26"},{"hexValue":"5472616e73666572207265737472696374656420746f206578697374696e6720","kind":"string","nativeSrc":"22503:34:26","nodeType":"YulLiteral","src":"22503:34:26","type":"","value":"Transfer restricted to existing "}],"functionName":{"name":"mstore","nativeSrc":"22480:6:26","nodeType":"YulIdentifier","src":"22480:6:26"},"nativeSrc":"22480:58:26","nodeType":"YulFunctionCall","src":"22480:58:26"},"nativeSrc":"22480:58:26","nodeType":"YulExpressionStatement","src":"22480:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22559:6:26","nodeType":"YulIdentifier","src":"22559:6:26"},{"kind":"number","nativeSrc":"22567:2:26","nodeType":"YulLiteral","src":"22567:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22555:3:26","nodeType":"YulIdentifier","src":"22555:3:26"},"nativeSrc":"22555:15:26","nodeType":"YulFunctionCall","src":"22555:15:26"},{"hexValue":"746f6b656e20686f6c64657273","kind":"string","nativeSrc":"22572:15:26","nodeType":"YulLiteral","src":"22572:15:26","type":"","value":"token holders"}],"functionName":{"name":"mstore","nativeSrc":"22548:6:26","nodeType":"YulIdentifier","src":"22548:6:26"},"nativeSrc":"22548:40:26","nodeType":"YulFunctionCall","src":"22548:40:26"},"nativeSrc":"22548:40:26","nodeType":"YulExpressionStatement","src":"22548:40:26"}]},"name":"store_literal_in_memory_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415","nativeSrc":"22363:232:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22461:6:26","nodeType":"YulTypedName","src":"22461:6:26","type":""}],"src":"22363:232:26"},{"body":{"nativeSrc":"22747:220:26","nodeType":"YulBlock","src":"22747:220:26","statements":[{"nativeSrc":"22757:74:26","nodeType":"YulAssignment","src":"22757:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"22823:3:26","nodeType":"YulIdentifier","src":"22823:3:26"},{"kind":"number","nativeSrc":"22828:2:26","nodeType":"YulLiteral","src":"22828:2:26","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22764:58:26","nodeType":"YulIdentifier","src":"22764:58:26"},"nativeSrc":"22764:67:26","nodeType":"YulFunctionCall","src":"22764:67:26"},"variableNames":[{"name":"pos","nativeSrc":"22757:3:26","nodeType":"YulIdentifier","src":"22757:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22929:3:26","nodeType":"YulIdentifier","src":"22929:3:26"}],"functionName":{"name":"store_literal_in_memory_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415","nativeSrc":"22840:88:26","nodeType":"YulIdentifier","src":"22840:88:26"},"nativeSrc":"22840:93:26","nodeType":"YulFunctionCall","src":"22840:93:26"},"nativeSrc":"22840:93:26","nodeType":"YulExpressionStatement","src":"22840:93:26"},{"nativeSrc":"22942:19:26","nodeType":"YulAssignment","src":"22942:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"22953:3:26","nodeType":"YulIdentifier","src":"22953:3:26"},{"kind":"number","nativeSrc":"22958:2:26","nodeType":"YulLiteral","src":"22958:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22949:3:26","nodeType":"YulIdentifier","src":"22949:3:26"},"nativeSrc":"22949:12:26","nodeType":"YulFunctionCall","src":"22949:12:26"},"variableNames":[{"name":"end","nativeSrc":"22942:3:26","nodeType":"YulIdentifier","src":"22942:3:26"}]}]},"name":"abi_encode_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415_to_t_string_memory_ptr_fromStack","nativeSrc":"22601:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22735:3:26","nodeType":"YulTypedName","src":"22735:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22743:3:26","nodeType":"YulTypedName","src":"22743:3:26","type":""}],"src":"22601:366:26"},{"body":{"nativeSrc":"23144:248:26","nodeType":"YulBlock","src":"23144:248:26","statements":[{"nativeSrc":"23154:26:26","nodeType":"YulAssignment","src":"23154:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"23166:9:26","nodeType":"YulIdentifier","src":"23166:9:26"},{"kind":"number","nativeSrc":"23177:2:26","nodeType":"YulLiteral","src":"23177:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23162:3:26","nodeType":"YulIdentifier","src":"23162:3:26"},"nativeSrc":"23162:18:26","nodeType":"YulFunctionCall","src":"23162:18:26"},"variableNames":[{"name":"tail","nativeSrc":"23154:4:26","nodeType":"YulIdentifier","src":"23154:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23201:9:26","nodeType":"YulIdentifier","src":"23201:9:26"},{"kind":"number","nativeSrc":"23212:1:26","nodeType":"YulLiteral","src":"23212:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23197:3:26","nodeType":"YulIdentifier","src":"23197:3:26"},"nativeSrc":"23197:17:26","nodeType":"YulFunctionCall","src":"23197:17:26"},{"arguments":[{"name":"tail","nativeSrc":"23220:4:26","nodeType":"YulIdentifier","src":"23220:4:26"},{"name":"headStart","nativeSrc":"23226:9:26","nodeType":"YulIdentifier","src":"23226:9:26"}],"functionName":{"name":"sub","nativeSrc":"23216:3:26","nodeType":"YulIdentifier","src":"23216:3:26"},"nativeSrc":"23216:20:26","nodeType":"YulFunctionCall","src":"23216:20:26"}],"functionName":{"name":"mstore","nativeSrc":"23190:6:26","nodeType":"YulIdentifier","src":"23190:6:26"},"nativeSrc":"23190:47:26","nodeType":"YulFunctionCall","src":"23190:47:26"},"nativeSrc":"23190:47:26","nodeType":"YulExpressionStatement","src":"23190:47:26"},{"nativeSrc":"23246:139:26","nodeType":"YulAssignment","src":"23246:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"23380:4:26","nodeType":"YulIdentifier","src":"23380:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415_to_t_string_memory_ptr_fromStack","nativeSrc":"23254:124:26","nodeType":"YulIdentifier","src":"23254:124:26"},"nativeSrc":"23254:131:26","nodeType":"YulFunctionCall","src":"23254:131:26"},"variableNames":[{"name":"tail","nativeSrc":"23246:4:26","nodeType":"YulIdentifier","src":"23246:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22973:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23124:9:26","nodeType":"YulTypedName","src":"23124:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23139:4:26","nodeType":"YulTypedName","src":"23139:4:26","type":""}],"src":"22973:419:26"},{"body":{"nativeSrc":"23608:454:26","nodeType":"YulBlock","src":"23608:454:26","statements":[{"nativeSrc":"23618:27:26","nodeType":"YulAssignment","src":"23618:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"23630:9:26","nodeType":"YulIdentifier","src":"23630:9:26"},{"kind":"number","nativeSrc":"23641:3:26","nodeType":"YulLiteral","src":"23641:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"23626:3:26","nodeType":"YulIdentifier","src":"23626:3:26"},"nativeSrc":"23626:19:26","nodeType":"YulFunctionCall","src":"23626:19:26"},"variableNames":[{"name":"tail","nativeSrc":"23618:4:26","nodeType":"YulIdentifier","src":"23618:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23699:6:26","nodeType":"YulIdentifier","src":"23699:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"23712:9:26","nodeType":"YulIdentifier","src":"23712:9:26"},{"kind":"number","nativeSrc":"23723:1:26","nodeType":"YulLiteral","src":"23723:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23708:3:26","nodeType":"YulIdentifier","src":"23708:3:26"},"nativeSrc":"23708:17:26","nodeType":"YulFunctionCall","src":"23708:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23655:43:26","nodeType":"YulIdentifier","src":"23655:43:26"},"nativeSrc":"23655:71:26","nodeType":"YulFunctionCall","src":"23655:71:26"},"nativeSrc":"23655:71:26","nodeType":"YulExpressionStatement","src":"23655:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23780:6:26","nodeType":"YulIdentifier","src":"23780:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"23793:9:26","nodeType":"YulIdentifier","src":"23793:9:26"},{"kind":"number","nativeSrc":"23804:2:26","nodeType":"YulLiteral","src":"23804:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23789:3:26","nodeType":"YulIdentifier","src":"23789:3:26"},"nativeSrc":"23789:18:26","nodeType":"YulFunctionCall","src":"23789:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23736:43:26","nodeType":"YulIdentifier","src":"23736:43:26"},"nativeSrc":"23736:72:26","nodeType":"YulFunctionCall","src":"23736:72:26"},"nativeSrc":"23736:72:26","nodeType":"YulExpressionStatement","src":"23736:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23862:6:26","nodeType":"YulIdentifier","src":"23862:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"23875:9:26","nodeType":"YulIdentifier","src":"23875:9:26"},{"kind":"number","nativeSrc":"23886:2:26","nodeType":"YulLiteral","src":"23886:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23871:3:26","nodeType":"YulIdentifier","src":"23871:3:26"},"nativeSrc":"23871:18:26","nodeType":"YulFunctionCall","src":"23871:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23818:43:26","nodeType":"YulIdentifier","src":"23818:43:26"},"nativeSrc":"23818:72:26","nodeType":"YulFunctionCall","src":"23818:72:26"},"nativeSrc":"23818:72:26","nodeType":"YulExpressionStatement","src":"23818:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"23944:6:26","nodeType":"YulIdentifier","src":"23944:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"23957:9:26","nodeType":"YulIdentifier","src":"23957:9:26"},{"kind":"number","nativeSrc":"23968:2:26","nodeType":"YulLiteral","src":"23968:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23953:3:26","nodeType":"YulIdentifier","src":"23953:3:26"},"nativeSrc":"23953:18:26","nodeType":"YulFunctionCall","src":"23953:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23900:43:26","nodeType":"YulIdentifier","src":"23900:43:26"},"nativeSrc":"23900:72:26","nodeType":"YulFunctionCall","src":"23900:72:26"},"nativeSrc":"23900:72:26","nodeType":"YulExpressionStatement","src":"23900:72:26"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"24026:6:26","nodeType":"YulIdentifier","src":"24026:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"24039:9:26","nodeType":"YulIdentifier","src":"24039:9:26"},{"kind":"number","nativeSrc":"24050:3:26","nodeType":"YulLiteral","src":"24050:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24035:3:26","nodeType":"YulIdentifier","src":"24035:3:26"},"nativeSrc":"24035:19:26","nodeType":"YulFunctionCall","src":"24035:19:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23982:43:26","nodeType":"YulIdentifier","src":"23982:43:26"},"nativeSrc":"23982:73:26","nodeType":"YulFunctionCall","src":"23982:73:26"},"nativeSrc":"23982:73:26","nodeType":"YulExpressionStatement","src":"23982:73:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"23398:664:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23548:9:26","nodeType":"YulTypedName","src":"23548:9:26","type":""},{"name":"value4","nativeSrc":"23560:6:26","nodeType":"YulTypedName","src":"23560:6:26","type":""},{"name":"value3","nativeSrc":"23568:6:26","nodeType":"YulTypedName","src":"23568:6:26","type":""},{"name":"value2","nativeSrc":"23576:6:26","nodeType":"YulTypedName","src":"23576:6:26","type":""},{"name":"value1","nativeSrc":"23584:6:26","nodeType":"YulTypedName","src":"23584:6:26","type":""},{"name":"value0","nativeSrc":"23592:6:26","nodeType":"YulTypedName","src":"23592:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23603:4:26","nodeType":"YulTypedName","src":"23603:4:26","type":""}],"src":"23398:664:26"},{"body":{"nativeSrc":"24246:367:26","nodeType":"YulBlock","src":"24246:367:26","statements":[{"nativeSrc":"24256:27:26","nodeType":"YulAssignment","src":"24256:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"24268:9:26","nodeType":"YulIdentifier","src":"24268:9:26"},{"kind":"number","nativeSrc":"24279:3:26","nodeType":"YulLiteral","src":"24279:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24264:3:26","nodeType":"YulIdentifier","src":"24264:3:26"},"nativeSrc":"24264:19:26","nodeType":"YulFunctionCall","src":"24264:19:26"},"variableNames":[{"name":"tail","nativeSrc":"24256:4:26","nodeType":"YulIdentifier","src":"24256:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24337:6:26","nodeType":"YulIdentifier","src":"24337:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"24350:9:26","nodeType":"YulIdentifier","src":"24350:9:26"},{"kind":"number","nativeSrc":"24361:1:26","nodeType":"YulLiteral","src":"24361:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24346:3:26","nodeType":"YulIdentifier","src":"24346:3:26"},"nativeSrc":"24346:17:26","nodeType":"YulFunctionCall","src":"24346:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24293:43:26","nodeType":"YulIdentifier","src":"24293:43:26"},"nativeSrc":"24293:71:26","nodeType":"YulFunctionCall","src":"24293:71:26"},"nativeSrc":"24293:71:26","nodeType":"YulExpressionStatement","src":"24293:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24414:6:26","nodeType":"YulIdentifier","src":"24414:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"24427:9:26","nodeType":"YulIdentifier","src":"24427:9:26"},{"kind":"number","nativeSrc":"24438:2:26","nodeType":"YulLiteral","src":"24438:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24423:3:26","nodeType":"YulIdentifier","src":"24423:3:26"},"nativeSrc":"24423:18:26","nodeType":"YulFunctionCall","src":"24423:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"24374:39:26","nodeType":"YulIdentifier","src":"24374:39:26"},"nativeSrc":"24374:68:26","nodeType":"YulFunctionCall","src":"24374:68:26"},"nativeSrc":"24374:68:26","nodeType":"YulExpressionStatement","src":"24374:68:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24496:6:26","nodeType":"YulIdentifier","src":"24496:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"24509:9:26","nodeType":"YulIdentifier","src":"24509:9:26"},{"kind":"number","nativeSrc":"24520:2:26","nodeType":"YulLiteral","src":"24520:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24505:3:26","nodeType":"YulIdentifier","src":"24505:3:26"},"nativeSrc":"24505:18:26","nodeType":"YulFunctionCall","src":"24505:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24452:43:26","nodeType":"YulIdentifier","src":"24452:43:26"},"nativeSrc":"24452:72:26","nodeType":"YulFunctionCall","src":"24452:72:26"},"nativeSrc":"24452:72:26","nodeType":"YulExpressionStatement","src":"24452:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"24578:6:26","nodeType":"YulIdentifier","src":"24578:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"24591:9:26","nodeType":"YulIdentifier","src":"24591:9:26"},{"kind":"number","nativeSrc":"24602:2:26","nodeType":"YulLiteral","src":"24602:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24587:3:26","nodeType":"YulIdentifier","src":"24587:3:26"},"nativeSrc":"24587:18:26","nodeType":"YulFunctionCall","src":"24587:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24534:43:26","nodeType":"YulIdentifier","src":"24534:43:26"},"nativeSrc":"24534:72:26","nodeType":"YulFunctionCall","src":"24534:72:26"},"nativeSrc":"24534:72:26","nodeType":"YulExpressionStatement","src":"24534:72:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"24068:545:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24194:9:26","nodeType":"YulTypedName","src":"24194:9:26","type":""},{"name":"value3","nativeSrc":"24206:6:26","nodeType":"YulTypedName","src":"24206:6:26","type":""},{"name":"value2","nativeSrc":"24214:6:26","nodeType":"YulTypedName","src":"24214:6:26","type":""},{"name":"value1","nativeSrc":"24222:6:26","nodeType":"YulTypedName","src":"24222:6:26","type":""},{"name":"value0","nativeSrc":"24230:6:26","nodeType":"YulTypedName","src":"24230:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24241:4:26","nodeType":"YulTypedName","src":"24241:4:26","type":""}],"src":"24068:545:26"},{"body":{"nativeSrc":"24647:152:26","nodeType":"YulBlock","src":"24647:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"24664:1:26","nodeType":"YulLiteral","src":"24664:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"24667:77:26","nodeType":"YulLiteral","src":"24667:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"24657:6:26","nodeType":"YulIdentifier","src":"24657:6:26"},"nativeSrc":"24657:88:26","nodeType":"YulFunctionCall","src":"24657:88:26"},"nativeSrc":"24657:88:26","nodeType":"YulExpressionStatement","src":"24657:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"24761:1:26","nodeType":"YulLiteral","src":"24761:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"24764:4:26","nodeType":"YulLiteral","src":"24764:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"24754:6:26","nodeType":"YulIdentifier","src":"24754:6:26"},"nativeSrc":"24754:15:26","nodeType":"YulFunctionCall","src":"24754:15:26"},"nativeSrc":"24754:15:26","nodeType":"YulExpressionStatement","src":"24754:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"24785:1:26","nodeType":"YulLiteral","src":"24785:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"24788:4:26","nodeType":"YulLiteral","src":"24788:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"24778:6:26","nodeType":"YulIdentifier","src":"24778:6:26"},"nativeSrc":"24778:15:26","nodeType":"YulFunctionCall","src":"24778:15:26"},"nativeSrc":"24778:15:26","nodeType":"YulExpressionStatement","src":"24778:15:26"}]},"name":"panic_error_0x21","nativeSrc":"24619:180:26","nodeType":"YulFunctionDefinition","src":"24619:180:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e(memPtr) {\n\n        mstore(add(memPtr, 0), \"New threshold supply must be les\")\n\n        mstore(add(memPtr, 32), \"s than current threshold supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d11f3482e371178b230546d623f7edefc3c4155d68e3219d7207a666e2d030e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum expansion rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5271fe175fea7420a7a01244bdd6d5dd192463ffa018bc5c8f8c39a3f4019dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8(memPtr) {\n\n        mstore(add(memPtr, 0), \"New max supply must be less than\")\n\n        mstore(add(memPtr, 32), \" current max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00cef95be353834cfbcb7d8811dfa21658347ebd50dba52c52770f444f213ea8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad(memPtr) {\n\n        mstore(add(memPtr, 0), \"New max expansion rate must be l\")\n\n        mstore(add(memPtr, 32), \"ess than current max expansion r\")\n\n        mstore(add(memPtr, 64), \"ate\")\n\n    }\n\n    function abi_encode_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40b5e760eb3d8e2c8d60ae64ce13474df8ef5ff51b1c01cf727f2395e25abdad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer restricted to existing \")\n\n        mstore(add(memPtr, 32), \"token holders\")\n\n    }\n\n    function abi_encode_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6efd32b474928271286601326c01ead1b423b1294171fa5f930b3b7d2d15a415_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2677":[{"length":32,"start":5621}],"2679":[{"length":32,"start":5580}],"2681":[{"length":32,"start":5494}],"2683":[{"length":32,"start":7210}],"2685":[{"length":32,"start":7243}],"2688":[{"length":32,"start":6128}],"2691":[{"length":32,"start":6187}],"6676":[{"length":32,"start":2660},{"length":32,"start":3519}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73532802 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE488EDE8 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE6AD10E1 EQ PUSH2 0x70D JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x669 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x81FB8B06 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x81FB8B06 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x83DE3E6A EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x8E80FF5D EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x73532802 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x517 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55233B48 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x55233B48 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x69E2F0FB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x6C8597FC EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x3FB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x914D4DA EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x403 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x531 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56D PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x637 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x671 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AB PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x715 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH2 0x79D DUP3 PUSH2 0x1260 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7B4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x802 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x810 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x844 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP1 PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x89E PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8AB DUP2 DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0x8D8 DUP6 DUP3 DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8E3 DUP6 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x92B DUP4 DUP4 PUSH2 0x1480 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x944 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BF DUP3 DUP3 PUSH2 0x1629 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9D1 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x9FB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x90F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xA29 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1F4 DUP6 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5F DUP6 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xA89 PUSH32 0x0 DUP3 PUSH2 0x171C JUMP JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD DUP2 DUP6 DUP5 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xB83 JUMPI PUSH1 0x0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xB SLOAD DUP7 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBB0 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0xBDA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x114F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xBEB SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC17 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCC7 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xD2A SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xDEE DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xE20 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x1822 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF36 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF62 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCB PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH2 0xFD8 DUP2 DUP6 DUP6 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1057 DUP13 PUSH2 0x185D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x106D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1090 DUP3 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1114 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP3 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F DUP11 DUP11 DUP11 PUSH2 0x12E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1158 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1629 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x120B DUP2 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DB DUP2 PUSH2 0x12D6 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x194F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1386 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x194F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1504 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15EE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x161B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1623 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x16AE PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x179A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x181D PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1858 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x1572 JUMP JUMPDEST DUP4 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x18E0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F0 DUP3 DUP3 PUSH2 0x1E80 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1908 DUP3 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x194B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B8 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B20 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1BB5 JUMPI POP PUSH1 0x0 PUSH2 0x1BB3 DUP4 PUSH2 0xC72 JUMP JUMPDEST GT JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1C00 DUP4 DUP4 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB8 JUMPI PUSH2 0x1CB1 DUP4 PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D45 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC4 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CF0 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E67 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1E76 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1F77 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x3033 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x3033 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FDF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2036 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2152 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2216 DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2D38 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x22D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2324 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP5 DUP3 DUP6 ADD PUSH2 0x2315 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2387 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EF DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x23F9 DUP2 DUP6 PUSH2 0x2398 JUMP JUMPDEST SWAP4 POP PUSH2 0x2409 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A9 JUMP JUMPDEST PUSH2 0x2412 DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP2 EQ PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246F DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248B JUMPI PUSH2 0x248A PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP5 DUP3 DUP6 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CD DUP3 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DD DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FA DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2536 DUP6 DUP3 DUP7 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2591 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A2 DUP7 DUP3 DUP8 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B3 DUP7 DUP3 DUP8 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25ED DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH2 0x2608 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2629 DUP2 PUSH2 0x25BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2644 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2660 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP6 DUP3 DUP7 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A0 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP5 DUP3 DUP6 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26F7 DUP2 PUSH2 0x24C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2712 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274D DUP2 PUSH2 0x2718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2788 DUP2 PUSH2 0x243F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP4 DUP4 PUSH2 0x277F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH2 0x27C8 DUP2 DUP6 PUSH2 0x275E JUMP JUMPDEST SWAP4 POP PUSH2 0x27D3 DUP4 PUSH2 0x276F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2804 JUMPI DUP2 MLOAD PUSH2 0x27EB DUP9 DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP8 POP PUSH2 0x27F6 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27D7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2826 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2744 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2838 DUP2 DUP10 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x284C DUP2 DUP9 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x285B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2868 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2875 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2887 DUP2 DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289E DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x28A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28BB DUP2 PUSH2 0x2895 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH2 0x28DF PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28FF DUP11 DUP3 DUP12 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2910 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2921 DUP11 DUP3 DUP12 ADD PUSH2 0x2460 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2932 DUP11 DUP3 DUP12 ADD PUSH2 0x28AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2943 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2954 DUP11 DUP3 DUP12 ADD PUSH2 0x25DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297A JUMPI PUSH2 0x2979 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2988 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2999 DUP6 DUP3 DUP7 ADD PUSH2 0x24EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29FD JUMPI PUSH2 0x29FC PUSH2 0x29A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577207468726573686F6C6420737570706C79206D757374206265206C6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73207468616E2063757272656E74207468726573686F6C6420737570706C7900 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5F PUSH1 0x3F DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6A DUP3 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8E DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ACF DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADA DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2AE8 DUP2 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B40 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4B DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B94 JUMPI PUSH2 0x2B93 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20737570706C7900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 PUSH1 0x16 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFF DUP2 PUSH2 0x2BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C11 DUP3 PUSH2 0x243F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1C DUP4 PUSH2 0x243F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20657870616E73696F6E20726174650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1E DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206D757374206265206C657373207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74206D617820737570706C7900000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D02 PUSH1 0x33 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D31 DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2D89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2D96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DA3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DB0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2DBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2DEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6577206D617820657870616E73696F6E2072617465206D757374206265206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657373207468616E2063757272656E74206D617820657870616E73696F6E2072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6174650000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E73 PUSH1 0x43 DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7E DUP3 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA2 DUP2 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EBE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2ECB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2ED8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2540 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x2F02 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572207265737472696374656420746F206578697374696E6720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6B656E20686F6C6465727300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F65 PUSH1 0x2D DUP4 PUSH2 0x2398 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F70 DUP3 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F94 DUP2 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2FB0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FBD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FCA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x2FD7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x2FE4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x26EE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3003 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x3010 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x301D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x302A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2620 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LT MLOAD GASLIMIT PUSH18 0xD19E56DA615BF2B400BF4610A5E730351793 PC 0xA9 0xB3 PUSH26 0x85F6615164736F6C634300081C00330000000000000000000000 ","sourceMap":"247:3746:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2740:270:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3998:186:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3731:126:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1612:894;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;564:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;527:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3863:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;834:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2512:222:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;395:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2409:143:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;665:85:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3302:117;;;:::i;:::-;;5144:557:17;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;796:32:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:672:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;327:62:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;461:24:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3016:280:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;491:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;2740:270:25:-;2232:4:0;2815:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;2874:15:25::1;;2853:18;:36;2845:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2985:18;2967:15;:36;;;;2740:270:::0;;:::o;3998:186:5:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:5:-;2756:5;2780:2;2773:9;;2707:82;:::o;2659:112:7:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3731:126:25:-;2232:4:0;3789:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3819:31:25::1;365:24;3842:7;3819:9;:31::i;:::-;3731:126:::0;;:::o;1612:894::-;365:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1693:21:25::1;1717:13;:11;:13::i;:::-;1693:37;;1784:17;1005:6;644:3;1805:6;:19;;;;:::i;:::-;1804:35;;;;:::i;:::-;1784:55;;1896:17;1902:2;1906:6;1896:5;:17::i;:::-;1923:33;1929:15;1946:9;1923:5;:33::i;:::-;1986:15;1966:17;:35;;;;2128:9;;2115;2106:6;2090:13;:22;;;;:::i;:::-;:34;;;;:::i;:::-;:47;;2082:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2196:15;;2179:13;:32;2175:325;;2227:19;2267:17;;2249:15;:35;;;;:::i;:::-;2227:57;;2298:25;2378:14;2362:11;2343:16;;2327:13;:32;;;;:::i;:::-;:46;;;;:::i;:::-;2326:67;;;;:::i;:::-;2298:95;;2437:17;2424:9;2415:6;:18;;;;:::i;:::-;:39;;2407:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2213:287;;2175:325;1683:823;;1612:894:::0;;;:::o;564:37::-;;;;;;;;;;;;;:::o;527:31::-;;;;:::o;3863:128::-;2232:4:0;3922:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3952:32:25::1;365:24;3976:7;3952:10;:32::i;:::-;3863:128:::0;;:::o;834:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;607:40::-;644:3;607:40;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2512:222:25:-;2232:4:0;2575:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;2628:9:25::1;;2613:12;:24;2605:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2715:12;2703:9;:24;;;;2512:222:::0;;:::o;395:55::-;2232:4:0;432:18:25;;395:55;:::o;877:25::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2409:143:7:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;665:85:25:-;;;:::o;3302:117::-;2232:4:0;3356:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3407:5:25::1;3386:18;;:26;;;;;;;;;;;;;;;;;;3302:117:::0;:::o;5144:557:17:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;796:32:25:-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1683:672:7:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;327:62:25:-;365:24;327:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;461:24:25:-;;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3016:280:25:-;2232:4:0;3093:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3153::25::1;;3131:19;:38;3123:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3270:19;3251:16;:38;;;;3016:280:::0;;:::o;491:30::-;;;;:::o;763:146:19:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3845:262:17:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;538:107:11:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:17:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:11:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:17:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6887:260:16:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;9701:432:5:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3425:300:25:-;3516:18;;;;;;;;;;;3512:166;;;3574:1;3558:18;;:4;:18;;;:38;;;;3594:1;3580:16;;:2;:16;;;3558:38;:59;;;;3616:1;3600:13;3610:2;3600:9;:13::i;:::-;:17;3558:59;3550:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;3512:166;3687:31;3701:4;3707:2;3711:6;3687:13;:31::i;:::-;3425:300;;;:::o;4113:179:17:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3358:267:13:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3326:374:18:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;5203:1551:16:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;6008:1107:5:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;2078:378:13:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;88:117:26:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:122::-;3860:24;3878:5;3860:24;:::i;:::-;3853:5;3850:35;3840:63;;3899:1;3896;3889:12;3840:63;3787:122;:::o;3915:139::-;3961:5;3999:6;3986:20;3977:29;;4015:33;4042:5;4015:33;:::i;:::-;3915:139;;;;:::o;4060:474::-;4128:6;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4060:474;;;;;:::o;4540:118::-;4627:24;4645:5;4627:24;:::i;:::-;4622:3;4615:37;4540:118;;:::o;4664:222::-;4757:4;4795:2;4784:9;4780:18;4772:26;;4808:71;4876:1;4865:9;4861:17;4852:6;4808:71;:::i;:::-;4664:222;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:77::-;5554:7;5583:5;5572:16;;5517:77;;;:::o;5600:122::-;5673:24;5691:5;5673:24;:::i;:::-;5666:5;5663:35;5653:63;;5712:1;5709;5702:12;5653:63;5600:122;:::o;5728:139::-;5774:5;5812:6;5799:20;5790:29;;5828:33;5855:5;5828:33;:::i;:::-;5728:139;;;;:::o;5873:329::-;5932:6;5981:2;5969:9;5960:7;5956:23;5952:32;5949:119;;;5987:79;;:::i;:::-;5949:119;6107:1;6132:53;6177:7;6168:6;6157:9;6153:22;6132:53;:::i;:::-;6122:63;;6078:117;5873:329;;;;:::o;6208:118::-;6295:24;6313:5;6295:24;:::i;:::-;6290:3;6283:37;6208:118;;:::o;6332:222::-;6425:4;6463:2;6452:9;6448:18;6440:26;;6476:71;6544:1;6533:9;6529:17;6520:6;6476:71;:::i;:::-;6332:222;;;;:::o;6560:474::-;6628:6;6636;6685:2;6673:9;6664:7;6660:23;6656:32;6653:119;;;6691:79;;:::i;:::-;6653:119;6811:1;6836:53;6881:7;6872:6;6861:9;6857:22;6836:53;:::i;:::-;6826:63;;6782:117;6938:2;6964:53;7009:7;7000:6;6989:9;6985:22;6964:53;:::i;:::-;6954:63;;6909:118;6560:474;;;;;:::o;7040:86::-;7075:7;7115:4;7108:5;7104:16;7093:27;;7040:86;;;:::o;7132:112::-;7215:22;7231:5;7215:22;:::i;:::-;7210:3;7203:35;7132:112;;:::o;7250:214::-;7339:4;7377:2;7366:9;7362:18;7354:26;;7390:67;7454:1;7443:9;7439:17;7430:6;7390:67;:::i;:::-;7250:214;;;;:::o;7470:329::-;7529:6;7578:2;7566:9;7557:7;7553:23;7549:32;7546:119;;;7584:79;;:::i;:::-;7546:119;7704:1;7729:53;7774:7;7765:6;7754:9;7750:22;7729:53;:::i;:::-;7719:63;;7675:117;7470:329;;;;:::o;7805:118::-;7892:24;7910:5;7892:24;:::i;:::-;7887:3;7880:37;7805:118;;:::o;7929:222::-;8022:4;8060:2;8049:9;8045:18;8037:26;;8073:71;8141:1;8130:9;8126:17;8117:6;8073:71;:::i;:::-;7929:222;;;;:::o;8157:149::-;8193:7;8233:66;8226:5;8222:78;8211:89;;8157:149;;;:::o;8312:115::-;8397:23;8414:5;8397:23;:::i;:::-;8392:3;8385:36;8312:115;;:::o;8433:114::-;8500:6;8534:5;8528:12;8518:22;;8433:114;;;:::o;8553:184::-;8652:11;8686:6;8681:3;8674:19;8726:4;8721:3;8717:14;8702:29;;8553:184;;;;:::o;8743:132::-;8810:4;8833:3;8825:11;;8863:4;8858:3;8854:14;8846:22;;8743:132;;;:::o;8881:108::-;8958:24;8976:5;8958:24;:::i;:::-;8953:3;8946:37;8881:108;;:::o;8995:179::-;9064:10;9085:46;9127:3;9119:6;9085:46;:::i;:::-;9163:4;9158:3;9154:14;9140:28;;8995:179;;;;:::o;9180:113::-;9250:4;9282;9277:3;9273:14;9265:22;;9180:113;;;:::o;9329:732::-;9448:3;9477:54;9525:5;9477:54;:::i;:::-;9547:86;9626:6;9621:3;9547:86;:::i;:::-;9540:93;;9657:56;9707:5;9657:56;:::i;:::-;9736:7;9767:1;9752:284;9777:6;9774:1;9771:13;9752:284;;;9853:6;9847:13;9880:63;9939:3;9924:13;9880:63;:::i;:::-;9873:70;;9966:60;10019:6;9966:60;:::i;:::-;9956:70;;9812:224;9799:1;9796;9792:9;9787:14;;9752:284;;;9756:14;10052:3;10045:10;;9453:608;;;9329:732;;;;:::o;10067:1215::-;10416:4;10454:3;10443:9;10439:19;10431:27;;10468:69;10534:1;10523:9;10519:17;10510:6;10468:69;:::i;:::-;10584:9;10578:4;10574:20;10569:2;10558:9;10554:18;10547:48;10612:78;10685:4;10676:6;10612:78;:::i;:::-;10604:86;;10737:9;10731:4;10727:20;10722:2;10711:9;10707:18;10700:48;10765:78;10838:4;10829:6;10765:78;:::i;:::-;10757:86;;10853:72;10921:2;10910:9;10906:18;10897:6;10853:72;:::i;:::-;10935:73;11003:3;10992:9;10988:19;10979:6;10935:73;:::i;:::-;11018;11086:3;11075:9;11071:19;11062:6;11018:73;:::i;:::-;11139:9;11133:4;11129:20;11123:3;11112:9;11108:19;11101:49;11167:108;11270:4;11261:6;11167:108;:::i;:::-;11159:116;;10067:1215;;;;;;;;;;:::o;11288:118::-;11359:22;11375:5;11359:22;:::i;:::-;11352:5;11349:33;11339:61;;11396:1;11393;11386:12;11339:61;11288:118;:::o;11412:135::-;11456:5;11494:6;11481:20;11472:29;;11510:31;11535:5;11510:31;:::i;:::-;11412:135;;;;:::o;11553:1199::-;11664:6;11672;11680;11688;11696;11704;11712;11761:3;11749:9;11740:7;11736:23;11732:33;11729:120;;;11768:79;;:::i;:::-;11729:120;11888:1;11913:53;11958:7;11949:6;11938:9;11934:22;11913:53;:::i;:::-;11903:63;;11859:117;12015:2;12041:53;12086:7;12077:6;12066:9;12062:22;12041:53;:::i;:::-;12031:63;;11986:118;12143:2;12169:53;12214:7;12205:6;12194:9;12190:22;12169:53;:::i;:::-;12159:63;;12114:118;12271:2;12297:53;12342:7;12333:6;12322:9;12318:22;12297:53;:::i;:::-;12287:63;;12242:118;12399:3;12426:51;12469:7;12460:6;12449:9;12445:22;12426:51;:::i;:::-;12416:61;;12370:117;12526:3;12553:53;12598:7;12589:6;12578:9;12574:22;12553:53;:::i;:::-;12543:63;;12497:119;12655:3;12682:53;12727:7;12718:6;12707:9;12703:22;12682:53;:::i;:::-;12672:63;;12626:119;11553:1199;;;;;;;;;;:::o;12758:474::-;12826:6;12834;12883:2;12871:9;12862:7;12858:23;12854:32;12851:119;;;12889:79;;:::i;:::-;12851:119;13009:1;13034:53;13079:7;13070:6;13059:9;13055:22;13034:53;:::i;:::-;13024:63;;12980:117;13136:2;13162:53;13207:7;13198:6;13187:9;13183:22;13162:53;:::i;:::-;13152:63;;13107:118;12758:474;;;;;:::o;13238:180::-;13286:77;13283:1;13276:88;13383:4;13380:1;13373:15;13407:4;13404:1;13397:15;13424:320;13468:6;13505:1;13499:4;13495:12;13485:22;;13552:1;13546:4;13542:12;13573:18;13563:81;;13629:4;13621:6;13617:17;13607:27;;13563:81;13691:2;13683:6;13680:14;13660:18;13657:38;13654:84;;13710:18;;:::i;:::-;13654:84;13475:269;13424:320;;;:::o;13750:250::-;13890:34;13886:1;13878:6;13874:14;13867:58;13959:33;13954:2;13946:6;13942:15;13935:58;13750:250;:::o;14006:366::-;14148:3;14169:67;14233:2;14228:3;14169:67;:::i;:::-;14162:74;;14245:93;14334:3;14245:93;:::i;:::-;14363:2;14358:3;14354:12;14347:19;;14006:366;;;:::o;14378:419::-;14544:4;14582:2;14571:9;14567:18;14559:26;;14631:9;14625:4;14621:20;14617:1;14606:9;14602:17;14595:47;14659:131;14785:4;14659:131;:::i;:::-;14651:139;;14378:419;;;:::o;14803:180::-;14851:77;14848:1;14841:88;14948:4;14945:1;14938:15;14972:4;14969:1;14962:15;14989:410;15029:7;15052:20;15070:1;15052:20;:::i;:::-;15047:25;;15086:20;15104:1;15086:20;:::i;:::-;15081:25;;15141:1;15138;15134:9;15163:30;15181:11;15163:30;:::i;:::-;15152:41;;15342:1;15333:7;15329:15;15326:1;15323:22;15303:1;15296:9;15276:83;15253:139;;15372:18;;:::i;:::-;15253:139;15037:362;14989:410;;;;:::o;15405:180::-;15453:77;15450:1;15443:88;15550:4;15547:1;15540:15;15574:4;15571:1;15564:15;15591:185;15631:1;15648:20;15666:1;15648:20;:::i;:::-;15643:25;;15682:20;15700:1;15682:20;:::i;:::-;15677:25;;15721:1;15711:35;;15726:18;;:::i;:::-;15711:35;15768:1;15765;15761:9;15756:14;;15591:185;;;;:::o;15782:191::-;15822:3;15841:20;15859:1;15841:20;:::i;:::-;15836:25;;15875:20;15893:1;15875:20;:::i;:::-;15870:25;;15918:1;15915;15911:9;15904:16;;15939:3;15936:1;15933:10;15930:36;;;15946:18;;:::i;:::-;15930:36;15782:191;;;;:::o;15979:172::-;16119:24;16115:1;16107:6;16103:14;16096:48;15979:172;:::o;16157:366::-;16299:3;16320:67;16384:2;16379:3;16320:67;:::i;:::-;16313:74;;16396:93;16485:3;16396:93;:::i;:::-;16514:2;16509:3;16505:12;16498:19;;16157:366;;;:::o;16529:419::-;16695:4;16733:2;16722:9;16718:18;16710:26;;16782:9;16776:4;16772:20;16768:1;16757:9;16753:17;16746:47;16810:131;16936:4;16810:131;:::i;:::-;16802:139;;16529:419;;;:::o;16954:194::-;16994:4;17014:20;17032:1;17014:20;:::i;:::-;17009:25;;17048:20;17066:1;17048:20;:::i;:::-;17043:25;;17092:1;17089;17085:9;17077:17;;17116:1;17110:4;17107:11;17104:37;;;17121:18;;:::i;:::-;17104:37;16954:194;;;;:::o;17154:180::-;17294:32;17290:1;17282:6;17278:14;17271:56;17154:180;:::o;17340:366::-;17482:3;17503:67;17567:2;17562:3;17503:67;:::i;:::-;17496:74;;17579:93;17668:3;17579:93;:::i;:::-;17697:2;17692:3;17688:12;17681:19;;17340:366;;;:::o;17712:419::-;17878:4;17916:2;17905:9;17901:18;17893:26;;17965:9;17959:4;17955:20;17951:1;17940:9;17936:17;17929:47;17993:131;18119:4;17993:131;:::i;:::-;17985:139;;17712:419;;;:::o;18137:238::-;18277:34;18273:1;18265:6;18261:14;18254:58;18346:21;18341:2;18333:6;18329:15;18322:46;18137:238;:::o;18381:366::-;18523:3;18544:67;18608:2;18603:3;18544:67;:::i;:::-;18537:74;;18620:93;18709:3;18620:93;:::i;:::-;18738:2;18733:3;18729:12;18722:19;;18381:366;;;:::o;18753:419::-;18919:4;18957:2;18946:9;18942:18;18934:26;;19006:9;19000:4;18996:20;18992:1;18981:9;18977:17;18970:47;19034:131;19160:4;19034:131;:::i;:::-;19026:139;;18753:419;;;:::o;19178:180::-;19226:77;19223:1;19216:88;19323:4;19320:1;19313:15;19347:4;19344:1;19337:15;19364:775;19597:4;19635:3;19624:9;19620:19;19612:27;;19649:71;19717:1;19706:9;19702:17;19693:6;19649:71;:::i;:::-;19730:72;19798:2;19787:9;19783:18;19774:6;19730:72;:::i;:::-;19812;19880:2;19869:9;19865:18;19856:6;19812:72;:::i;:::-;19894;19962:2;19951:9;19947:18;19938:6;19894:72;:::i;:::-;19976:73;20044:3;20033:9;20029:19;20020:6;19976:73;:::i;:::-;20059;20127:3;20116:9;20112:19;20103:6;20059:73;:::i;:::-;19364:775;;;;;;;;;:::o;20145:332::-;20266:4;20304:2;20293:9;20289:18;20281:26;;20317:71;20385:1;20374:9;20370:17;20361:6;20317:71;:::i;:::-;20398:72;20466:2;20455:9;20451:18;20442:6;20398:72;:::i;:::-;20145:332;;;;;:::o;20483:291::-;20623:34;20619:1;20611:6;20607:14;20600:58;20692:34;20687:2;20679:6;20675:15;20668:59;20761:5;20756:2;20748:6;20744:15;20737:30;20483:291;:::o;20780:366::-;20922:3;20943:67;21007:2;21002:3;20943:67;:::i;:::-;20936:74;;21019:93;21108:3;21019:93;:::i;:::-;21137:2;21132:3;21128:12;21121:19;;20780:366;;;:::o;21152:419::-;21318:4;21356:2;21345:9;21341:18;21333:26;;21405:9;21399:4;21395:20;21391:1;21380:9;21376:17;21369:47;21433:131;21559:4;21433:131;:::i;:::-;21425:139;;21152:419;;;:::o;21577:442::-;21726:4;21764:2;21753:9;21749:18;21741:26;;21777:71;21845:1;21834:9;21830:17;21821:6;21777:71;:::i;:::-;21858:72;21926:2;21915:9;21911:18;21902:6;21858:72;:::i;:::-;21940;22008:2;21997:9;21993:18;21984:6;21940:72;:::i;:::-;21577:442;;;;;;:::o;22025:332::-;22146:4;22184:2;22173:9;22169:18;22161:26;;22197:71;22265:1;22254:9;22250:17;22241:6;22197:71;:::i;:::-;22278:72;22346:2;22335:9;22331:18;22322:6;22278:72;:::i;:::-;22025:332;;;;;:::o;22363:232::-;22503:34;22499:1;22491:6;22487:14;22480:58;22572:15;22567:2;22559:6;22555:15;22548:40;22363:232;:::o;22601:366::-;22743:3;22764:67;22828:2;22823:3;22764:67;:::i;:::-;22757:74;;22840:93;22929:3;22840:93;:::i;:::-;22958:2;22953:3;22949:12;22942:19;;22601:366;;;:::o;22973:419::-;23139:4;23177:2;23166:9;23162:18;23154:26;;23226:9;23220:4;23216:20;23212:1;23201:9;23197:17;23190:47;23254:131;23380:4;23254:131;:::i;:::-;23246:139;;22973:419;;;:::o;23398:664::-;23603:4;23641:3;23630:9;23626:19;23618:27;;23655:71;23723:1;23712:9;23708:17;23699:6;23655:71;:::i;:::-;23736:72;23804:2;23793:9;23789:18;23780:6;23736:72;:::i;:::-;23818;23886:2;23875:9;23871:18;23862:6;23818:72;:::i;:::-;23900;23968:2;23957:9;23953:18;23944:6;23900:72;:::i;:::-;23982:73;24050:3;24039:9;24035:19;24026:6;23982:73;:::i;:::-;23398:664;;;;;;;;:::o;24068:545::-;24241:4;24279:3;24268:9;24264:19;24256:27;;24293:71;24361:1;24350:9;24346:17;24337:6;24293:71;:::i;:::-;24374:68;24438:2;24427:9;24423:18;24414:6;24374:68;:::i;:::-;24452:72;24520:2;24509:9;24505:18;24496:6;24452:72;:::i;:::-;24534;24602:2;24591:9;24587:18;24578:6;24534:72;:::i;:::-;24068:545;;;;;;;:::o;24619:180::-;24667:77;24664:1;24657:88;24764:4;24761:1;24754:15;24788:4;24785:1;24778:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","clowderFee()":"6c8597fc","clowderTreasury()":"81fb8b06","decimals()":"313ce567","disableTransferRestriction()":"83de3e6a","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantMinterRole(address)":"3dd1eb61","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","lastMintTimestamp()":"8e80ff5d","maxExpansionRate()":"55233b48","maxSupply()":"d5abeb01","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","reduceMaxExpansionRate(uint256)":"e488ede8","reduceMaxSupply(uint256)":"73532802","reduceThresholdSupply(uint256)":"0914d4da","renounceRole(bytes32,address)":"36568abe","revokeMinterRole(address)":"69e2f0fb","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","thresholdSupply()":"e6ad10e1","tokenName()":"6c02a931","tokenSymbol()":"7b61c320","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferRestricted()":"48709a93"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxExpansionRate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clowderFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clowderTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransferRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMintTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxExpansionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxExpansionRate\",\"type\":\"uint256\"}],\"name\":\"reduceMaxExpansionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"reduceMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThresholdSupply\",\"type\":\"uint256\"}],\"name\":\"reduceThresholdSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thresholdSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContributionAccountingToken.sol\":\"ContributionAccountingToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ContributionAccountingToken.sol\":{\"keccak256\":\"0xe9a9f746be738f74f5e2958534fdf563bf017304ffa10d2b518a9650638793f6\",\"license\":\"AEL\",\"urls\":[\"bzz-raw://dcec763f8832e8214e89ab67434f92fbca8eda7f5fbfb13eb7516f0bc243cce4\",\"dweb:/ipfs/QmdkGCk94aX64nhzvUNi1Y4yfACK58hjsHL7iBcpyM1uQR\"]}},\"version\":1}"}}}}}